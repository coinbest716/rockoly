{"version":3,"sources":["themes/images/user.png","themes/images/facebook.png","themes/images/twitter.png","themes/images/logo.png","themes/images/pdf.png","containers/layouts/styles.js","containers/layouts/labels.js","themes/themes.js","containers/layouts/publicHeader.js","containers/layouts/publicLayout.js","containers/routes/routesNames.js","utils/localStorage.js","containers/layouts/logout.js","common/gql/query/auth/query.auth.adminAuthenticate.js","common/gql/query/auth/query.auth.checkEmailAndMobileNoExists.js","common/gql/query/auth/query.auth.checkEmailAndMobileNoExistsUsingUserId.js","common/gql/query/availability/query.availability.listChefAvailabilityByDateRange.js","common/gql/query/availability/query.availability.listChefAvailabilityForWeek.js","common/gql/query/availability/query.availability.listChefNotAvailability.js","common/gql/query/booking/query.booking.listWithFilters.js","common/gql/query/booking/query.booking.byId.js","common/gql/query/booking/query.booking.checkBookingByParams.js","common/gql/query/booking/query.booking.requestedBookingById.js","common/gql/query/chef/query.chef.profileById.js","common/gql/query/chef/query.chef.listWithFilters.js","common/gql/query/chef/query.chef.filterByParams.js","common/gql/query/custom/query.custom.totalCount.js","common/gql/query/customer/query.customer.listWithFilters.js","common/gql/query/customer/query.customer.profileById.js","common/gql/query/follow/query.follow.filterByCustomerId.js","common/gql/query/master/query.master.allAllergy.js","common/gql/query/master/query.master.allAllergyByStatus.js","common/gql/query/master/query.master.allergyByCustomerId.js","common/gql/query/master/query.master.allCuisines.js","common/gql/query/master/query.master.allCuisinesByStatus.js","common/gql/query/master/query.master.cuisineByChefId.js","common/gql/query/master/query.master.cuisineByCustomerId.js","common/gql/query/master/query.master.cusine.js","common/gql/query/master/query.master.allDishes.js","common/gql/query/master/query.master.allDishesByStatus.js","common/gql/query/master/query.master.dishByChefId.js","common/gql/query/master/query.master.dish.js","common/gql/query/master/query.master.allDietaryRestrictions.js","common/gql/query/master/query.master.allDietaryRestrictionsByStatus.js","common/gql/query/master/query.master.dietaryRestrictionsByCustomerId.js","common/gql/query/master/query.master.allKitchenEquipments.js","common/gql/query/master/query.master.allKitchenEquipmentsByStatus.js","common/gql/query/master/query.master.kitchenEquipmentsByCustomerId.js","common/gql/query/master/query.master.questionsByAreaType.js","common/gql/query/master/query.master.allCertifications.js","common/gql/query/master/query.master.allAdditionalServiceTypeMasters.js","common/gql/query/master/query.master.allAdditionalServiceTypeMastersByStatus.js","common/gql/query/master/query.master.store.js","common/gql/query/payment/query.payment.byCustomerId.js","common/gql/query/payment/query.payment.byChefId.js","common/gql/query/notification/query.notification.filterByChefId.js","common/gql/query/notification/query.notification.filterByCustomerId.js","common/gql/query/notification/query.notification.filterByAdminId.js","common/gql/query/review/query.review.listWithFilters.js","common/gql/query/review/query.review.byId.js","common/gql/query/commission/query.commission.filterMgmtByAdminId.js","common/gql/query/commission/query.commission.filterEarnedHistByAdminId.js","common/gql/query/stripe/query.stripe.customerDetails.js","common/gql/query/stripe/query.stripe.cardDetails.js","common/gql/query/stripe/query.stripe.customerCards.js","common/gql/query/stripe/query.stripe.accountDetails.js","common/gql/query/stripe/query.stripe.accountDetailsByChefId.js","common/gql/query/feedback/query.feedback.byId.js","common/gql/query/feedback/query.feedback.listWithFilters.js","common/gql/query/admin/query.admin.profileById.js","common/gql/query/admin/query.admin.search.js","common/gql/query/admin/query.admin.checkUserAdmin.js","common/gql/query/setting/query.setting.getSettingValue.js","common/gql/query/chat/query.chat.conversationMessages.js","common/gql/query/chat/query.chat.getConversationList.js","common/gql/mutation/auth/mutation.auth.ssoChefAuthtenticate.js","common/gql/mutation/auth/mutation.auth.ssoCustomerAuthtenticate.js","common/gql/mutation/auth/mutation.auth.authenticate.js","common/gql/mutation/auth/mutation.auth.switchRole.js","common/gql/mutation/booking/mutation.booking.update.js","common/gql/mutation/booking/mutation.booking.create.js","common/gql/mutation/booking/mutation.booking.payment.js","common/gql/mutation/booking/mutation.booking.complete.js","common/gql/mutation/booking/mutation.booking.updateBookingCancelTime.js","common/gql/mutation/booking/mutation.booking.createRequest.js","common/gql/mutation/booking/mutation.booking.acceptChefRequest.js","common/gql/mutation/booking/mutation.booking.acceptBooking.js","common/gql/mutation/chef/mutation.chef.saveIntroTour.js","common/gql/mutation/chef/mutation.chef.changeMobileNo.js","common/gql/mutation/chef/mutation.chef.changeLocation.js","common/gql/mutation/chef/mutation.chef.updateSpecialization.js","common/gql/mutation/chef/mutation.chef.updateDetails.js","common/gql/mutation/chef/mutation.chef.updateBasicInfo.js","common/gql/mutation/chef/mutation.chef.updateStatusByChefId.js","common/gql/mutation/chef/mutation.chef.updateAll.js","common/gql/mutation/chef/mutation.chef.updateAttachment.js","common/gql/mutation/chef/mutation.chef.updateAvailability.js","common/gql/mutation/chef/mutation.chef.updateNotAvailability.js","common/gql/mutation/chef/mutation.chef.submitForReview.js","common/gql/mutation/chef/mutation.chef.saveChefBankDetails.js","common/gql/mutation/chef/mutation.chef.updateDefaultBankProfile.js","common/gql/mutation/chef/mutation.chef.updateNotification.js","common/gql/mutation/chef/mutation.chef.updatePriceForBooking.js","common/gql/mutation/chef/mutation.chef.updateComplexity.js","common/gql/mutation/chef/mutation.chef.updateChefExperienceDetails.js","common/gql/mutation/chef/mutation.chef.updateChefProfilePic.js","common/gql/mutation/chef/mutation.chef.updateChefWorkDetails.js","common/gql/mutation/chef/mutation.chef.updateService.js","common/gql/mutation/chef/mutation.chef.updateRegistration.js","common/gql/mutation/chef/mutation.chef.updateScreens.js","common/gql/mutation/chef/mutation.chef.updateIsEmailVerifiedYn.js","common/gql/mutation/chef/mutation.chef.updateIsMobileNoVerifiedYn.js","common/gql/mutation/custom/mutation.custom.sendEmail.js","common/gql/mutation/customer/mutation.customer.changeMobileNo.js","common/gql/mutation/customer/mutation.customer.changeLocation.js","common/gql/mutation/customer/mutation.customer.updateBasicInfo.js","common/gql/mutation/customer/mutation.customer.updateStatusByCustomerId.js","common/gql/mutation/customer/mutation.customer.updateAll.js","common/gql/mutation/customer/mutation.customer.updateNotification.js","common/gql/mutation/customer/mutation.customer.updatePreferences.js","common/gql/mutation/customer/mutation.customer.updateCustomerProfilePic.js","common/gql/mutation/customer/mutation.customer.updateRegistration.js","common/gql/mutation/customer/mutation.customer.updateScreens.js","common/gql/mutation/customer/mutation.customer.updateIsEmailVerifiedYn.js","common/gql/mutation/customer/mutation.customer.updateIsMobileNoVerifiedYn.js","common/gql/mutation/admin/mutation.admin.updateBasicInfo.js","common/gql/mutation/admin/mutation.admin.transferAmount.js","common/gql/mutation/admin/mutation.admin.refundAmount.js","common/gql/mutation/follow/mutation.follow.chefFollowOrUnFollow.js","common/gql/mutation/notification/mutation.notification.updateStatus.js","common/gql/mutation/review/mutation.review.create.js","common/gql/mutation/review/mutation.review.updateStatusByReviewId.js","common/gql/mutation/commission/mutation.commission.createMgmtHist.js","common/gql/mutation/stripe/mutation.stripe.createCustomer.js","common/gql/mutation/stripe/mutation.stripe.attachCardToCustomer.js","common/gql/mutation/stripe/mutation.stripe.editCard.js","common/gql/mutation/stripe/mutation.stripe.removeCard.js","common/gql/mutation/stripe/mutation.stripe.chargeCard.js","common/gql/mutation/stripe/mutation.stripe.removeChefAccount.js","common/gql/mutation/feedback/mutation.feedback.create.js","common/gql/mutation/devicetoken/mutation.devicetoken.addUserDeviceToken.js","common/gql/mutation/devicetoken/mutation.devicetoken.removeUserDeviceToken.js","common/gql/mutation/master/mutation.master.createCuisineType.js","common/gql/mutation/master/mutation.master.createDishType.js","common/gql/mutation/master/mutation.master.updateCuisineType.js","common/gql/mutation/master/mutation.master.updateDishType.js","common/gql/mutation/master/mutation.master.createAllergyType.js","common/gql/mutation/master/mutation.master.createDietaryRestrictionsType.js","common/gql/mutation/master/mutation.master.createKitchenEquipmentTypes.js","common/gql/mutation/master/mutation.master.createAdditionalServiceType.js","common/gql/mutation/master/mutation.master.updateAdditionalServiceType.js","common/gql/mutation/notes/mutation.notes.createNotes.js","common/gql/mutation/chat/mutation.chat.createMsg.js","actions/actionCommonLables.js","actions/authAction.js","actions/types.js","actions/chefManagementAction.js","actions/customerManagementAction.js","actions/bookingHistoryAction.js","actions/bussinessProgressAction.js","actions/searchAction.js","common/constants/constant.status.js","actions/cuisineAndDishAction.js","actions/settingsAction.js","containers/common/commonLabel.js","containers/layouts/searchComponent.js","containers/layouts/header.js","containers/layouts/profileView.js","actions/adminProfileAction.js","containers/layouts/sideMenu.js","containers/layouts/privateLayout.js","containers/login/styles.js","containers/login/labels.js","components/loader/loader.js","containers/login/login.js","containers/dashboard/styles.js","containers/common/commonStyles.js","components/constants/constant.pagination.js","utils/dateFormat.js","containers/dashboard/customer.js","containers/dashboard/chef.js","containers/dashboard/businessProgress.js","components/picNameField/picNameField.js","containers/dashboard/bookingHistoryDashbard.js","containers/dashboard/dashboard.js","components/filter/styles.js","components/filter/filter.js","components/pagination/style.js","components/pagination/commonPagination.js","containers/customerManagement/customerManagement.js","containers/chefManagement/chefManagement.js","containers/bookingHistory/lables.js","utils/timeFormat.js","containers/bookingHistory/bookingHistory.js","containers/commissionManagement/styles.js","containers/commissionManagement/updateCommission.js","actions/commissionManagementAction.js","containers/commissionManagement/totalCommissionEared.js","containers/commissionManagement/businessProgressCommission.js","containers/commissionManagement/commissionManagement.js","containers/reviewsRatings/reviewsRatings.js","actions/reviewsAndRatingsActions.js","containers/staticData/customerData.js","containers/profileManagement/profileManagement.js","containers/feedback/styles.js","containers/feedback/feedback.js","containers/registration/styles.js","containers/registration/labels.js","containers/registration/registration.js","containers/userDetails/styles.js","components/sendMail/labels.js","components/sendMail/styles.js","components/sendMail/sendMail.js","actions/sendEmailAction.js","config/config.js","components/listCuisineDishType/styles.js","components/listCuisineDishType/listCuisineDishType.js","components/previewImage/styles.js","components/previewImage/previewImage.js","containers/userDetails/chefDetail.js","containers/userDetails/customerDetail.js","containers/reviewDetails/styles.js","containers/reviewDetails/reviewDetail.js","containers/bookingDetails/styles.js","containers/bookingDetails/bookingDetails.js","containers/test/testSample.js","containers/cuisinesAndDishes/styles.js","containers/cuisinesAndDishes/cuisines.js","containers/cuisinesAndDishes/dishes.js","containers/cuisinesAndDishes/cuisinesAndDishes.js","containers/extraService/styles.js","containers/extraService/extraService.js","actions/additionalServiceAction.js","containers/settings/styles.js","containers/settings/settings.js","containers/routes/routes.js","reducers/loginReducer.js","reducers/chefListReducer.js","reducers/customerListReducer.js","reducers/chefDetailReducer.js","reducers/customerDetailReducer.js","reducers/updateChefStatusReducer.js","reducers/updateCustomerStatusReducer.js","reducers/forgotPasswordReducer.js","reducers/bookHistoryListReducer.js","reducers/createCommissionReducer.js","reducers/reviewsAndRatingsReducer.js","reducers/getCommissionListReducer.js","reducers/reviewDetailReducer.js","reducers/getAdminProfileReducer.js","reducers/getTotalCommissionReducer.js","reducers/bookingDetailsReducer.js","reducers/reviewUpdateReducer.js","reducers/sendEmailReducer.js","reducers/businessProgressReducer.js","reducers/searchDataReducer.js","reducers/getCuisineReducer.js","reducers/getDishReducer.js","reducers/updateCusineStatusReducer.js","reducers/updateDishStatusReducer.js","reducers/sendAmountToChefRedcer.js","reducers/refundAmoutToCustomerReducer.js","reducers/getAllcuisineReducer.js","reducers/getAllAdditionalServiceReducer.js","reducers/getAllDishesReducer.js","reducers/getCancellationTimeReducer.js","reducers/updateCancellationTimeReducer.js","reducers/bookingRequestDetailsReducer.js","reducers/resetPasswordReducer.js","reducers/addAdditionalServiceReducer.js","reducers/deleteAdditionalServiceReducer.js","reducers/updateAdditionalServiceReducer.js","reducers/index.js","createApolloClient.js","App.js","serviceWorker.js","index.js","utils/common.js"],"names":["module","exports","sideMenuStyle","height","appLogoStyle","marginTop","width","headerStyle","backgroundColor","border","buttonStyle","color","restrictView","display","justifyContent","contentView","loginButtonAlign","loginFont","fontSize","fontWeight","textAlign","headerTextStyle","marginLeft","screenContent","sideMenuText","sideMenuContent","siderIcon","menuStyle","borderRight","headerConentStyle","flexDirection","subView","searchStyle","logoutView","bellIcon","marginRight","cursor","logoutText","badgeStyle","profileView","marginBottom","imageStyle","borderRadius","mailStyle","nameText","wordWrap","lineHeight","emailText","publicScreen","DOWNICON","MENU_MODE","DEFAULTOPENKEYS","DEFAULTSELECTEDKEYS","ALTERNATE_PIC","LOGIN","PLEASE_LOGIN","SEARCH_PLACE_HOLDER","SEARCH_ICON","BELL_ICON","THEME","LOGOUT","PROJECT_NAME","LOGOUT_ALERT","OKTEXT","CANCELTEXT","PLACEMENT","LOGOUT_SUCCESS_MESSAGE","themes","default_user","require","facebook_icon","twitter_icon","app_logo","pdf_icon","Header","Layout","PublicHeader","style","Styles","src","alt","Strings","Component","publicLayout","this","props","screen","className","START","DASHBOARD","CUSTOMERMANAGEMENT","CHEFMANAGEMENT","BOOKINGHISTORY","COMMISSIONMANAGEMENT","REVIEWSRATINGS","PROFILEMANAGEMENT","FEEDBACK","REGISTRATION","CHEFDETAIL","CUSTOMERDETAIL","REVIEWDETAIL","BOOKINGDETAILS","TESTSAMPLE","CUISINES_DISHES","EXTRA_SERVICE","SETTINGS","StoreInLocal","key","value","localStorage","setItem","JSON","stringify","error","message","GetValueFromLocal","a","getItem","parse","Logout","history","push","n","success","title","onConfirm","clickLogout","okText","cancelText","placement","withRouter","adminAuthenticateGQLTAG","checkEmailAndMobileNoExistsGQLTAG","checkEmailAndMobileNoExistsUsingUserIdGQLTAG","listChefAvailabilityByDateRangeGQLTAG","listChefAvailabilityForWeekGQLTAG","listChefNotAvailabilityGQLTAG","listWithFiltersGQLTAG","params","filterParams","offsetParams","firstParams","filterStr","hasOwnProperty","statusId","length","customerId","chefId","first","offset","pFromTime","pToTime","byIdGQLTAG","checkBookingByParamsGQLTAG","requestedBookingByIdGQLTAG","profileByIdGQLTAG","orderByParams","fetchAdditionalParamsByUserType","fromTime","toTime","orderBy","roleType","roleId","filterByParamsGQLTAG","data","totalCountGQLTAG","filterByCustomerIdGQLTAG","allAllergyGQLTAG","allAllergyByStatusGQLTAG","allergyByCustomerIdGQLTAG","allCuisinesGQLTAG","allCuisinesByStatusGQLTAG","cuisineByChefIdGQLTAG","cuisineByCustomerIdGQLTAG","cuisineGQLTAG","allDishesGQLTAG","allDishesByStatusGQLTAG","dishByChefIdGQLTAG","dishGQLTAG","allDietaryRestrictionsGQLTAG","allDietaryRestrictionsByStatusGQLTAG","dietaryRestrictionsByCustomerIdGQLTAG","allKitchenEquipmentsGQLTAG","allKitchenEquipmentsByStatusGQLTAG","kitchenEquipmentsByCustomerIdGQLTAG","questionsByAreaTypeGQLTAG","allCertificateTypeMastersGQLTAG","allAdditionalServiceTypeMastersGQLTAG","allAdditionalServiceTypeMastersByStatusGQLTAG","storeTypeGQLTAG","paymentByCustomerIdGQLTAG","paymentByChefIdGQLTAG","filterByChefIdGQLTAG","filterByAdminIdGQLTAG","filterMgmtByAdminIdGQLTAG","filterEarnedHistByAdminIdGQLTAG","customerDetailsGQLTAG","cardDetailsGQLTAG","customerCardsGQLTAG","accountDetailsGQLTAG","accountDetailsByChefIdGQLTAG","searchGQLTAG","checkUserAdminGQLTAG","getSettingValueGQLTAG","conversationMessagesGQLTAG","getConversationListGQLTAG","ssoChefAuthtenticateGQLTAG","ssoCustomerAuthtenticateGQLTAG","authtenticateGQLTAG","switchRoleGQLTAG","updateGQLTAG","createGQLTAG","paymentGQLTAG","completeGQLTAG","updateBookingCancelTimeGQLTAG","createRequestGQLTAG","acceptChefRequestGQLTAG","acceptBookingGQLTAG","saveIntroTourGQLTAG","changeMobileNoGQLTag","changeLocationGQLTag","updateSpecializationGQLTAG","updateDetailsGQLTag","updateBasicInfoGQLTag","updateStatusByChefIdGQLTAG","updateAllGQLTAG","updateAttachmentGQLTag","updateAvailabilityGQLTAG","updateNotAvailabilityGQLTAG","submitForReviewGQLTAG","saveChefBankDetailsGQLTAG","updateDefaultBankProfileGQLTAG","updateNotificationGQLTAG","updatePriceForBookingGQLTAG","updateComplexityGQLTAG","updateChefExperienceDetailsGQLTAG","updateChefProfilePicGQLTAG","updateChefWorkDetailsGQLTAG","updateServiceGQLTAG","updateRegistrationFlag","updateScreensGQLTAG","updateIsEmailVerifiedYnGQLTAG","updateIsMobileNoVerifiedYnGQLTAG","sendEmailGQLTAG","updateStatusByCustomerIdGQLTAG","updatePreferencesGQLTAG","updateCustomerProfilePicGQLTAG","updateRegistrationGQLTAG","transferAmountGQLTAG","refundAmountGQLTAG","chefFollowOrUnFollowGQLTAG","updateStatusGQLTag","updateStatusByReviewIdGQLTAG","createMgmtHistGQLTAG","createCustomerGQLTAG","attachCardToCustomerTAG","editCardGQLTAG","removeCardGQLTAG","chargeCardGQLTAG","removeChefAccountGQLTAG","addUserDeviceTokenGQLTAG","removeUserDeviceTokenGQLTAG","createCuisineTypeGQLTAG","createDishTypeGQLTAG","updateCuisineTypeGQLTAG","updateDishTypeGQLTAG","createAllergyTypeGQLTAG","createDietaryRestrictionsTypeGQLTAG","createKitchenEquipmentTypesGQLTAG","createAdditionalServiceTypeGQLTAG","updateAdditionalServiceTypeGQLTAG","createNotesGQLTAG","createMsgGQLTAG","resetPassword","email","client","dispatch","console","log","type","firebase","auth","sendPasswordResetEmail","then","user","CommonLabels","payload","catch","catchError","errorCode","code","errorMessage","fetchAdminId","storeAdminId","current","Promise","resolve","reject","getIdToken","val","gqlValue","gqlTag","mutation","gql","mutate","variables","token","authenticateType","extra","authenticate","adminId","err","getChefList","startTime","endTime","status","filterValue","chef","query","fetchPolicy","nodes","allChefProfiles","updateChefStatus","pStatusId","pData","updateStatusByChefId","procedureResult","getCustomerList","customer","allCustomerProfiles","updateCustomerStatus","updateStatusByCustomerId","getBookingList","booking","listBookingByDateRange","getBussinessProgressData","uid","commission","allCommissionEarnedHistories","undefined","SENT","SEEN","DISMISSED","PENDING","CUSTOMER_REQUESTED","CHEF_ACCEPTED","CHEF_REJECTED","CANCELLED_BY_CHEF","CANCELLED_BY_CUSTOMER","COMPLETED","CERTIFIED","APPROVED","REJECTED","BLOCKED","UNBLOCKED","REVIEWED","PAY_TO_CHEF","REFUND_TO_CUSTOMER","COMPLETED_BY_CHEF","COMPLETED_BY_CUSTOMER","BOTH_CHEF_AND_CUSTOMER_COMPLETED","PAYMENT_PENDING","SUBMITTED_FOR_REVIEW","AMOUNT_TRANSFER_SUCCESS","AMOUNT_TRANSFER_FAILED","getCuisineType","master","gqlStatus","allCuisineTypeMasters","getDishType","allDishTypeMasters","SAMPLE_DATE","SAMPLE_DURATION","SAMPLE_COMMISSIOM_EARNED","SAMPLE_FEEDBACK","NO_DATA","REFER_DISH_TYPES","REFER_CUISINE_TYPES","CUISINES","DISHES","LOAD_MORE","SEARCH","RESET","RATINGS","STATUS_FILTER","SERIAL_NUMBER","REVIEWER_NAME","ADD_CHEF","ADD_CUSTOMER","NEW_CHEFS","NO_NEW_CHEF","NO_NEW_CUSTOMER","NEW_CUSTOMERS","CHEF_TITLE","CUSTOMER_TITLE","SHOW","MONTH","CUSTOM","WEEK","YEAR","BLOCK","UNBLOCK","APPROVE","REJECT","VIEW","STATUS","CUSTOMER_ID","NAME","CHEF_NAME","CUSTOMER_NAME","CHEF","ADMIN","CUSTOMER","DATE","TIME","BLOCK_UNBLOCK","ACTION","USER","ACCEPT","CANCEL","CHEF_ACCEPT","CHEF_CANCEL","CUSTOMER_CANCEL","SHOW_MORE","REGISTER_DATE","BUSINESS_PROGRESS","BOOKING_HISTORY","BOOKING_DESCRIPITION","PAYMENT_DETAILS","BOOKING_NOTES","BOOKING_ADDRESS","CHART_TYPE","AMOUNT","INR","COMMISSION_MANAGEMENT","COMMISSION","UPDATE","UPDATE_COMMISSION","COMMISSION_EARNED","REVIEW","REVIEWS_RATINGS","PROFILE_TITLE","EMAIL_ID","UPDATE_PASSWORD","ALL","THIS_WEEK","THIS_MONTH","THIS_year","ADD","CUSTOM_DATE","AWARDS","AWARDS_DES","BACK","PAYMENT","NAME_LABEL","EMAIL_LABEL","GENDER_LABEL","REGISTERED_DATE_LABEL","REGISTERED_DATE","REVIEWED_DATE","REVIEWED_BY","REVIEWED_FOR","AVERAGE_RATING_LABEL","PHONE_NUMBER_LABEL","PHONE_NUMBER","CUISINE_TYPE_LABEL","DISHES_SPECIALITY","CERTIFICATION_LIST","ALLERGY_LIST","DIETARY_LIST","KITCHEN_EQUIPMENT","EQUIPMENT","FOOD_COST","SERVICE_RATE","DISH_TYPE_LABEL","DESCRIPTION_LABEL","LOCATION_LABEL","BASE_RATE","GRATUITY","NO_OF_GUESTS","NO_OF_PEOPLE","PAYMENT_ID","NO_OF_ITEMS","ADDITIONAL_BASE_RATE","DISCOUNT_FOR_GUEST","CHEF_TRAVEL","PROVIDE_SERVICE","HOUR_LABEL","MIN","MAX","CHEF_COOK","MEMBERS","FOR","PERSONS","REQUESTED_TIME_LABEL","REQUESTED_DATE_LABEL","BUSINESS_HOURS","CUSTOMER_REVIEW_LABLE","CENCELLATION_REASON","DOCUMENT_LABEL","CHEF_REVIEW_LABLE","FACEBOOK_LABEL","TWITER_LABEL","COST_UNIT_LABEL","COST_LABEL","DRIVIG_LICENSE_LABEL","REVIEW_LABEL","REVIEWS_LABEL","WORK_GALLERY_LABEL","CONTACT_LABEL","PERSONAL_LABEL","SPECIALIZATION_LABEL","ADDITIONAL_SERVICE","ADDITIONAL","ADDITIONAL_SER","COMPLEXITY_CHANGE","TOTAL_AMOUNT_EXTRA","CERTIFICATION_TYPE","ALLERGY_TYPE","DIETARY_TYPE","KITCHEN_TYPE","DOB_LABEL","BUSINESS_LABEL","COMPLEXITY","COMPLEXITY_LEVEL","COMPLEXITY_CHARGE","ADDITIONAL_NO_OF_PEOPLE","EXTRA_SERVICE_PROVIDER","CHEF_TOTAL_CHARGE","ROCKOLY_CHARGE","TOTAL_AMOUNT","TOTAL_REMAINING_AMOUNT","PAYMENT_STATUS","PAYMENT_DATE","PAYMENT_PRICE","BOOKING_STATUS","BUSSINESS_TIME_LABEL","EXPERIANCE_LABEL","SERVICE_COST","SERVICE_TIME","SERVICE_DATE","BOOKED_ON","PERCENT","REVIEW_DETAILS","REVIEW_DONE_BY","REVIEW_DONE_FOR","REVIEW_RATING","REVIEW_DESCRIPTION","REVIEW_ON","SEND_TO_CHEF","RESET_PASSWORD","BOOKING_ID","BOOKING_SUMMARY","OTHERALLERGY","OTHER_DIETARY","OTHER_KITCHEN_EQUIPMENTS","NO_REVIEWS","SEND_MAIL","ENTER_SUBJECT","ENTER_CONTENT","ENTER_REASON","TRACKORDERNO","ASC","NOTES","PROFILE_NOT_SUBMITTED","CERTIFICATE","LICENSE","OTHER_ATTACHMENT","CANCELLATION_SETTINGS_LABEL","CANCELLATION_TIME_LABEL","UPDATE_CANCELLATION_TIME","CHEF_AMOUNT_TRANSFER_FAILED","CHEF_REQUESTED_AMOUNT","REVIEW_DONE_BY_CUSTOMER","REVIEW_DONE_BY_CHEF","CHEF_AMOUNT_TRANSFERRED_SUCCESS","PAYMENT_FAILED","CUSTOMER_CENCELLATION_REASON","CHEF_CENCELLATION_REASON","CUSTOMER_REFUND_TRANSFERRED_SUCCESS","CUSTOMER_REFUND_TRANSFER_FAILED","REFUND_AMOUNT_SUCCESS","SINGLE_ACTION","BULCK_ACTION","INVALIDE_COMMISSION","UPDATE_SUCCESSFULLY","Search","Input","SearchComponent","inputSearch","state","searchValue","searchCommonData","setState","visible","SEARCH_ERROR","handleCancel","customerData","chefData","openDetail","path","screenPath","pathname","extraId","searchInput","target","nxtprops","searchData","filterChefBySearchStr","filterCustomerBySearchStr","placeholder","Labels","enterButton","onSearch","onChange","onCancel","footer","dataSource","renderItem","item","Item","onClick","fullName","mapDispatchToProps","admin","pSearchStr","withApollo","connect","search","searchDataLoading","searchDataError","HeaderComponent","ProfileView","profileData","getAdminProfile","adminProfile","adminPicId","adminEmail","adminProfileByAdminId","adminData","adminProfileLoading","Sider","menuItems","name","CommonLables","route","SideMenu","mode","selectedKeys","location","map","element","to","Content","privateLayout","navigateToLogin","loginView","topView","loginbuttonView","loginText","lineStyle","borderWidth","borderColor","marginHorizontal","emailInputView","passInputView","passText","forgotPasswordEmail","EMAIL","PASSWORD","FORGOTPASSWORD","PASSWORD_VALIDATE","EMAIL_VALIDATE","SUCCESS","FAIL","SUCCESS_MESSAGE","INVALID_MESSAGE","Loader","spinning","loader","Login","clickLogin","passWord","password","loginAction","clickForgotPassword","inputMail","InputForgotpasswordMail","forgotPasswordEmailId","inputPassword","handleOk","adminForgotPassword","nextProps","login","Password","onPressEnter","loginLoading","closable","onOk","settings","timestampsInSnapshots","db","firestore","setPersistence","Auth","Persistence","LOCAL","signInWithEmailAndPassword","currentUser","setTimeout","window","reload","sentTo","pAdminEmail","checkUserIsAdmin","loginData","loginError","forgotPassWord","forgotpassword","forgotpasswordLoading","forgotpasswordError","firstView","paddingLeft","paddingRight","paddingTop","customerView","newlyAdded","margin","dateName","titleFilterView","progressStyle","progressView","monthFilterViewDashboard","monthFilterLowerView","addUserStyle","diverStyle","cardView","cardAlignment","nameImageView","chefNameApproveBottonView","nameStyle","registerDateStyle","dateView","buttonsView","dateButtonsView","showMoreStyle","LowershowMoreStyle","alignTittleFilter","isplay","chartStyle","approveBotton","viewBotton","statusFilter","viewEyeBotton","rejectBotton","nameField","textTransform","reviewerNameStyle","emailtableStyle","profileContentView","nameLinkStyle","textDecoration","titleTextStyle","top_titleTextStyle","emptyText","grayText","reviewDecText","addButtonStyle","upperView","chefsubView","firstSubView","monthFilterView","top_monthFilterView","editIconStyle","deleteIconStyle","monthText","showText","downIcon","approvalStyle","actionStatus","statusTextStyle","nameHeader","actionHeader","lowerViewTittleFilter","loaderStyle","actionButtonView","alignActionButtons","alignPaginationComponents","flexdirect","modalButtonView","loadMoreStyle","loadMoreView","pagination","createdDate","moment","utc","local","format","e","displayDateFormat","GMTToLocal","time","currentDate","date","Date","BusinessDate","getStartEndTime","from_date","startOf","from_date_format","to_date","endOf","start_time","end_time","fetchOffset","pageCount","TextArea","Customer","onClickShowMore","onClickAddCustomer","updateStatus","id","reason","dataArray","temp","pId","pReason","ERROR_ENTER_REASON","asignReason","openModal","seletedId","singleBlockId","modalType","SELECT_CUSTOMER","onClickCancel","selectedRowKeys","customerList","subtract","customerUpdateStatus","customers","slice","autosize","minRows","CommonStyles","CUSTOMER_BLOCK_ALERT","selectedBlockStatus","PLACEMENT_BOTTOM","customerPicId","createdAt","customerStatusId","trim","customerListLoading","renderList","customerListData","customerStatus","customerUpdateStatusLoading","customerUpdateStatusError","Chef","onClickAddChef","toUpdateImediate","chefList","updateArr","_","filter","includes","chefStatusId","chefStatus","chefUpdateStatus","chefPicId","chefListLoading","CHEF_BLOCK_ALERT","CHEF_REJECT_ALERT","chefListData","chefUpdateStatusLoading","chefUpdateStatusError","BusinessProgress","getTransactionMonth","typeName","month","monthArray","values","chartData","option","combinedValue","toString","comissonValue","commissionEarnedValue","userId","businessProgressData","options","chart","xaxis","categories","series","businessProgressDataLoading","bussinessProgressData","PicNameField","onClickViewDetail","navigateTo","fieldData","picUrl","BookingHistoryDashbard","bookingHistory","bookingHistoryList","columns","render","chefField","customerProfileByCustomerId","customerField","chefProfileByChefId","chefBookingTotalPriceValue","chefBookingStatusId","bookingHistoryListLoading","bookingHistoryData","Dashboard","alignFilter","alignFilterView","datePicker","RangePicker","DatePicker","filterData","Filter","showDateSelector","timeType","getFilterType","customDate","menu","ref","overlay","BUTTOM_RIGHT","CommonPagination","nextPropsPress","nextPress","onPagePropsChange","page","onPageChange","defaultCurrent","total","pageSize","defaultPageSize","CustomerManagement","getTableData","ArrayData","initial","offSet","pageno","allCustomerList","splicedData","pageinitial","onSelectChange","selectedRows","seletedIdArr","forEach","customerSearchText","queryOffSetValue","selectedPageNo","newStart","newEnd","getColumnSearchProps","dataIndex","filterDropdown","confirm","clearFilters","padding","node","assignSearchVakue","handleSearch","icon","size","handleReset","filterIcon","filtered","duplicateCustomerData","o","toLowerCase","initialValue","finalValue","index","keyValue","text","record","customerEmail","customerMobileNumber","defaultSortOrder","sorter","b","getTime","ellipsis","filters","onFilter","indexOf","rowSelection","scroll","y","Option","Select","ChefManagement","newVal","allChefList","CHEF_SELECT_BLOCK","CHEF_SELECT_UNBLOCK","chefSearchText","statusArray","duplicateChefData","chefEmail","chefMobileNumber","bussinessTime","BookingHistory","allBookingHistory","bookingId","chefBookingHistId","stateValue","duplicateData","filteredInfo","getBookingListUnmount","chefBookingFromTime","chefBookingToTime","Lables","paddingBottom","lowerView","aligtableStyle","updateInput","updateButton","getInputView","alignUpdateContent","upadteText","filterView","progressFilterView","earnedView","amoutText","durationText","UpdateCommission","storeUpdateCommission","updateCommission","clickUpdate","createCommission","commissionList","getCommissionList","commissionUpdate","commissionValue","commissionUnit","min","max","formatter","parser","replace","createCommissionManagementHistory","allCommissionManagementHistories","commissionUpdateLoading","commissionData","commissionListLoading","TotalCommissionEared","getTotalCommisionEarned","commissionEarned","firstTime","nextprops","totalCommissionEarned","commissionEarnedHisStartDate","totalCommission","commissionDataLoading","BusinessProgressCommission","CommissionManagement","ReviewsRatings","refetchTableData","getReviewRatingList","allRateAndReviewList","rateAndReviewList","reviewHistId","updateBlockUnblockStatus","reviewedBySearchText","reviewedForSearchText","ERROR_SELECT_REVIEWS","reviewId","duplicateReviewData","reviewer","reviewedFor","reviewUpdate","setEmptyReviewRatingList","reviewRatingList","chefReviewerName","isReviewedByChefYn","reviewerPic","ReviewedForName","reviewedForPic","userType","reviewStatusFilter","reviewDesc","substring","reviewPoint","allowHalf","disabled","reviewStatusId","row","reviewRatingListLoading","REVIEW_SELECTED_BLOCK_ALERT","review","allReviewHistories","updateStatusByReviewId","ratingReview","reviewRatingListError","reviewUpdateLoading","DATA","sampleData","blockStatus","approvalStatus","role","amount","profilePic","graphData","updatedDate","ProfileManagement","EDIT_ICON","theme","getCheckboxProps","alignCard","feedbackImageStyle","userDateView","largeText","blackText","alignColumn","paginationView","Feedback","onClickPage","pageIndex","startIndex","endIndex","sliceData","feedbackData","VERTICAL","formCardView","alignCardView","inputStyle","alignFields","buttonView","FIRST_NAME","LAST_NAME","DOF","FIRSTNAME","LASTNAME","EMAIL_LOWER","DATE_PICKER","PHONE","PASSWORD_LOWER","FIRSTNAME_ERROR","LASTNAME_ERROR","EMAIL_ERROR","EMAIL_VALIDATION","DOF_ERROR","PHONE_NUMBER_ERROR","PASSWORD_ERROR","SUBMIT","CONFIRM","Registration","onClickBack","handleSubmit","preventDefault","form","validateFields","validateToNextPassword","rule","callback","force","getFieldDecorator","onSubmit","label","rules","required","whitespace","hasFeedback","validator","htmlType","Form","create","profileStyle","iconStyle","pdfIconStyle","innerCardView","innerCardWidth","titleStyle","noReviewStyle","fieldView","spetializationFieldView","valueStyle","spetializationValueStyle","additionalServiceValueStyle","arrValue","nameValue","rateCoutStyle","reveiwCoutStyle","backButtonStyle","dishView","alignProfile","nameView","dividerStyle","starStyle","workImageView","passwordbuttonView","updatePasswordBotton","customerUpdatePasswordBotton","rateStyle","contentStyle","SendMail","mailContent","onClickSendMail","mailInput","subject","mailId","sendEmailToUser","ERROR_CONTENT","ERROR_SUBJECT","ERROR_SUBJECT_ERROR_CONTENT","emailId","sendEmail","SENT_MAIL_SUCCESS","sendEmailError","maxRows","sendEmailLoading","custom","CONFIG","FIREBASE_API_KEY","AUTHDOMAIN","DATABASEURL","PROJECTID","MESSAGINGSENDERID","APPID","GQL_ENDPOINT_URI","EDIT_PROFILE_URL","selectStyle","cuisineSelectStyle","ListCusineDishType","onClickApproveCuisine","cuisines","dishes","chefCuisine","chefDish","showSearch","allowClear","optionFilterProp","filterOption","input","children","cuisineTypeId","cusineTypeName","dishTypeId","dishTypeName","cuisineTypes","chefCuisineLoading","chefCuisineError","dishType","chefDishLoading","chefDishError","PreviewImage","handlePreview","file","previewVisible","galleryIndex","handleChange","fileList","previewData","gallery","attachment","action","listType","onPreview","showPlayButton","items","ChefDetail","splitImageDocument","image","doc","url","document","modifyData","tempGal","tempAttachment","tempGallery","original","thumbnail","openInNewTab","link","startsWith","open","onClickUpdate","NO_MAIL","onClickEditProfile","editUrl","getENVConfig","renderPdf","userData","chefSpetialization","chefExtended","chefAttachment","chefReview","chefDocument","dishTypes","attachementsCertification","certificateDucument","certificateImage","certicateAttachementsGallery","certicateGallery","attachementsGallery","workGallery","attachementsLicense","licenseDocument","licenseGallery","attachementsOthers","otherDocument","otherGallary","getChefDetails","chefDetails","chefSpecializationProfilesByChefId","order","chefProfileExtendedsByChefId","reviewHistoriesByChefId","additionalService","awards","certificationType","complexity","additionalServiceDetails","chefAwards","chefComplexity","certificationsTypes","averageRating","totalCount","chefFacebookUrl","chefTwitterUrl","chefDetailsLoading","chefLocationAddress","chefDesc","chefDob","chefGender","chefPricePerHour","noOfGuestsMin","noOfGuestsMax","chefAvailableAroundRadiusInValue","chefAvailableAroundRadiusInUnit","price","certificateTypeName","complexcityLevel","noOfItems","chefDetail","resetpassword","resetpasswordLoading","resetpasswordError","CustomerDetail","extendedProfile","customerPreference","getCustomerDetails","customerDetails","customerProfileExtendedsByCustomerId","customerPreferenceProfilesByCustomerId","allergyTypes","dietaryType","kitchenEquipment","dietaryRestrictionsTypes","kitchenEquipmentTypes","totalReviewCount","customerDetailsLoading","customerLocationAddress","customerGender","customerDob","allergyTypeName","dietaryRestrictionsTypeName","kitchenEquipmentTypeName","customerDetail","commonmarginLeft","ReviewDetail","reviewData","rId","previewImage","getReviewRatingDetail","reviewDetails","reviewDetailsLoading","isReviewedByCustomerYn","reviewHistoryByReviewHistId","reviewDetail","fexDirection","tripleView","userCardStyle","bookingIdStyle","summaryFieldView","flex","totalStyle","backButtonView","reviewCardStyle","cancelCardStyle","StarView","paymentButton","paymentView","trackActionView","completeActionIconStyle","pendingActionIconStyle","cancelActionIconStyle","BookingDetails","finalTrakingvalue","orderby","finalTrackingData","openPaymentModal","paymentNotes","asignPaymentNotes","onclickPayment","now","requestDate","diffValue","diff","defaultStripeUserId","CHEF_BANK_ACCOUNT","bookingHistId","refundAmoutToCustomer","refundButton","queryData","chefStripeUserId","sendAmountToChef","WENT_WRONG","ENTER_NOTES","requestedDetails","chefLocation","customerLocation","trackingData","chefBookingReviews","CustomerBookingReviews","firbaseToken","getBookingDetails","getBookingRequestDetails","bookingRequestedDetails","sentToChefError","sentToChef","refundToCustomer","bookingDetails","mainStatus","trackBookingHistoryStatusesByChefBookingHistId","successStatus","failStatus","localData","updatedAt","customerBookingReviews","servicePercentage","rockolyCharge","summary","NoofPeople","additionalNoOfPeople","OtherAllergy","chefCharge","firstChefCharge","remChefCharge","otherDietary","bookingAddress","additionalPrice","additionalTotalPrice","totalAmountToPay","chefTotalCharge","requestComplexity","requestTotalPrice","requestPrice","chefprice","complexityCharge","dishTypeDesc","bookingNotes","equipmentTypes","dietaryTypes","paymentDetails","requestAdditionalServices","requestServicePrice","chefBookingSummary","chefBookingServiceChargePriceValue","chefBookingNoOfPeople","chefBookingComplexity","Index","parseFloat","sum","toFixed","chefBookingOtherAllergyTypes","chefBookingOtherDietaryRestrictionsTypes","chefBookingOtherKitchenEquipmentTypes","paymentHistoriesByBookingHistId","chefBookingLocationAddress","chefBookingRequestNoOfPeople","chefBookingRequestComplexity","chefBookingRequestTotalPriceValue","customercustomerPicId","bookingColumn","notesDescription","paymentId","paymentStatusId","paymentOriginalPriceValueFormat","chefBookingChefRejectOrCancelReason","chefBookingCustomerRejectOrCancelReason","notesStyles","chefBookingHistoryByChefBookingHistId","allChefBookingRequestHistories","stripeTransferAmt","stripeRefundAmtToCustomer","bookingDetailsData","bookingDetailsLoading","bookingRequested","bookingRequestedDetailsLoading","refundCustomer","refundToCustomerLoading","refundToCustomerError","sendChef","sentToChefLoading","TestSample","searchText","sortDirections","parseInt","chefBookingPriceValue","viewStyle","cuisineText","cuisineDivider","noDataText","overflowY","Cuisines","callActions","getAllCuisines","updateCuisineStatus","allCuisineData","REJECT_CUISINE_ALERT","duplocateCuisines","allCuisines","cuisineStatusUpate","allCuisinesLoading","updateCuisineTypeMasterByCuisineTypeId","cuisineTypeMaster","cuisineStatus","cuisineStatusUpateLoading","cuisineStatusUpateError","Dishes","getAllDishes","updateDishStatus","allDishesData","postedBy","pic","REJECT_DISH_ALERT","duplocateDishes","allDishes","disheStatusUpate","allDishesLoading","updateDishTypeMasterByDishTypeId","dishTypeMaster","dishStatus","disheStatusUpateLoading","disheStatusUpateError","CuisinesAndDishes","cencelTimeViiiew","updateView","alignSpaceBetween","ExtraService","showModal","editCancel","editVisible","onEdit","Id","edit","editValue","editId","editStatus","editModal","onEditOk","onDelete","typeId","Modal","deleteAdditionalFunction","Math","random","updateAdditionalFunction","createAdditionalService","allAdditionalService","cancellationTime","updateTime","getAdditionalServiceList","deleteAdditionalService","updateAdditionalService","addAdditionalService","ghost","additionalServiceTypeId","additionalServiceTypeName","allAdditionalServiceTypeMasters","createAdditionalServiceTypeMaster","additionalServiceTypeMaster","updateAdditionalServiceTypeMasterByAdditionalServiceTypeId","statusTypeMasterByStatusId","allAdditionalServiceLoading","addAdditionalServiceLoading","deleteAdditionalServiceLoading","updateAdditionalServiceLoading","Settings","callAction","getCencellationTime","convertToMinutes","updateCancellationTime","CANCELLATION_TIME_ERROR","storeUpdateCancellation","updatedCancellationTime","getSettingValue","updatedCancellationTimeLoading","cancellationTimeLoading","setting","pSettingName","pSettingValue","updateBookingCancelTime","cancelTiming","updatedTime","PublicView","PrivateView","Routes","basename","exact","component","INITIAL_STATE","chefListError","customerListError","chefDetailsError","customerDetailsError","bookingHistoryListError","commissionUpdateError","commissionListError","reviewDetailsError","adminProfileError","commissionDataError","bookingDetailsError","reviewUpdateError","businessProgressDataError","allCuisinesError","allAdditionalServiceError","allDishesError","cancellationTimeError","updatedCancellationTimeError","bookingRequestedDetailsError","addAdditionalServiceError","deleteAdditionalServiceError","updateAdditionalServiceError","rootReducer","combineReducers","getAuthLink","httpLink","HttpLink","uri","setContext","headers","authorization","concat","createApolloClient","cache","InMemoryCache","ApolloClient","createStoreWithMiddleware","applyMiddleware","thunk","createStore","App","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","onAuthStateChanged","store","reducers","React","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","process"],"mappings":"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","file":"static/js/main.29ccc689.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.b6681619.png\";","module.exports = __webpack_public_path__ + \"static/media/facebook.13f214f8.png\";","module.exports = __webpack_public_path__ + \"static/media/twitter.5b9648d3.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.9ce74168.png\";","module.exports = __webpack_public_path__ + \"static/media/pdf.87996cf8.png\";","/** @format */\r\n\r\nexport default {\r\n  sideMenuStyle: {\r\n    height: '100vh',\r\n  },\r\n  appLogoStyle: {\r\n    marginTop: 10,\r\n    height: 50,\r\n    width: 50,\r\n  },\r\n  headerStyle: {\r\n    backgroundColor: 'white',\r\n    height: 75,\r\n    border: '2px solid #E4E4E4',\r\n  },\r\n  buttonStyle: {\r\n    backgroundColor: '#515151',\r\n    color: 'white',\r\n  },\r\n  restrictView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 200,\r\n  },\r\n  contentView: {\r\n    width: 300,\r\n  },\r\n  loginButtonAlign: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  loginFont: {\r\n    fontSize: 20,\r\n    fontWeight: 600,\r\n    textAlign: 'center',\r\n  },\r\n  headerTextStyle: {\r\n    fontSize: 25,\r\n    fontWeight: 'bold',\r\n    marginLeft: 10,\r\n  },\r\n  screenContent: {\r\n    marginLeft: 2,\r\n  },\r\n  sideMenuText: {\r\n    width: 50,\r\n    fontSize: 14,\r\n    fontWeight: 500,\r\n  },\r\n  sideMenuContent: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  siderIcon: {\r\n    display: 'flex',\r\n    marginTop: 15,\r\n  },\r\n  menuStyle: {\r\n    height: '100%',\r\n    borderRight: 0,\r\n    width: 200,\r\n  },\r\n  headerConentStyle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  subView: {\r\n    display: 'flex',\r\n    marginLeft: -25,\r\n  },\r\n  searchStyle: {\r\n    width: 500,\r\n    height: 30,\r\n    marginTop: 20,\r\n    marginLeft: 40,\r\n  },\r\n  logoutView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  bellIcon: {\r\n    marginTop: 20,\r\n    fontSize: 25,\r\n    marginRight: 20,\r\n    cursor: 'pointer',\r\n  },\r\n  logoutText: {\r\n    fontSize: 15,\r\n    fontWeight: 'bold',\r\n    cursor: 'pointer',\r\n  },\r\n  badgeStyle: {\r\n    marginTop: 25,\r\n    marginRight: 25,\r\n    cursor: 'pointer',\r\n  },\r\n  profileView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  imageStyle: {\r\n    display: 'flex',\r\n    width: 50,\r\n    height: 50,\r\n    marginLeft: 20,\r\n    borderRadius: '50%',\r\n  },\r\n  mailStyle: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginTop: 25,\r\n    marginLeft: 5,\r\n  },\r\n  nameText: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    width: 100,\r\n    wordWrap: 'break-word',\r\n    lineHeight: '1rem',\r\n    marginTop: -20,\r\n  },\r\n  emailText: {\r\n    width: 100,\r\n    fontWeight: 'bold',\r\n    color: '#A9A8A8',\r\n    wordWrap: 'break-word',\r\n    lineHeight: '1.2rem',\r\n    marginTop: -10,\r\n  },\r\n  publicScreen: {\r\n    height: '100vh',\r\n  },\r\n}\r\n","/** @format */\r\n\r\nexport default {\r\n  DOWNICON: 'caret-down',\r\n  MENU_MODE: 'inline',\r\n  DEFAULTOPENKEYS: 'sub1',\r\n  DEFAULTSELECTEDKEYS: '1',\r\n  ALTERNATE_PIC: 'profile',\r\n  LOGIN: 'Login',\r\n  PLEASE_LOGIN: 'Please Login',\r\n\r\n  SEARCH_PLACE_HOLDER: 'View and search',\r\n  SEARCH_ICON: 'search',\r\n  BELL_ICON: 'bell',\r\n  THEME: 'filled',\r\n  LOGOUT: 'Logout',\r\n  PROJECT_NAME: 'Rockoly Admin',\r\n\r\n  LOGOUT_ALERT: 'Are you sure. You want to logout.',\r\n  OKTEXT: 'Yes',\r\n  CANCELTEXT: 'No',\r\n  PLACEMENT: 'left',\r\n  LOGOUT_SUCCESS_MESSAGE: 'Logout success',\r\n}\r\n","/** @format */\r\n\r\nexport const themes = {\r\n  default_user: require('./images/user.png'),\r\n  facebook_icon: require('./images/facebook.png'),\r\n  twitter_icon: require('./images/twitter.png'),\r\n  app_logo: require('./images/logo.png'),\r\n  pdf_icon: require('./images/pdf.png'),\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Layout} from 'antd'\r\nimport Styles from './styles'\r\nimport Strings from './labels'\r\nimport {themes} from '../../themes/themes'\r\n\r\nconst {Header} = Layout\r\n\r\nexport class PublicHeader extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header style={Styles.headerStyle}>\r\n          <div style={Styles.subView}>\r\n            <img src={themes.app_logo} alt=\"Logo\" style={Styles.appLogoStyle} />\r\n            <p style={Styles.headerTextStyle}>{Strings.PROJECT_NAME}</p>\r\n          </div>\r\n        </Header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PublicHeader\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport {PublicHeader} from './publicHeader'\r\nimport {Layout} from 'antd'\r\n\r\nexport class publicLayout extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <PublicHeader {...this.props.screen} />\r\n          <Layout className=\"publicScreen\">\r\n            <Route {...this.props.screen} />\r\n          </Layout>\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default publicLayout\r\n","/** @format */\r\n\r\nexport default {\r\n  START: '/',\r\n  LOGIN: '/login',\r\n  DASHBOARD: '/dashboard',\r\n  CUSTOMERMANAGEMENT: '/customerManagement',\r\n  CHEFMANAGEMENT: '/chefManagement',\r\n  BOOKINGHISTORY: '/bookingHistory',\r\n  COMMISSIONMANAGEMENT: '/commissionManagement',\r\n  REVIEWSRATINGS: '/reviewsRatings',\r\n  PROFILEMANAGEMENT: '/profileManagement',\r\n  FEEDBACK: '/feedback',\r\n  REGISTRATION: '/registration',\r\n  CHEFDETAIL: '/chefDetail',\r\n  CUSTOMERDETAIL: '/customerDetail',\r\n  REVIEWDETAIL: '/reviewDetail',\r\n  BOOKINGDETAILS: '/bookingDetails',\r\n  TESTSAMPLE: '/testSample',\r\n  CUISINES_DISHES: '/cuisinesAndDishes',\r\n  EXTRA_SERVICE: '/extraService',\r\n  SETTINGS: '/settings',\r\n}\r\n","/** @format */\r\nimport {message} from 'antd'\r\n\r\nexport const StoreInLocal = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n  } catch (error) {\r\n    message.error(error.message)\r\n  }\r\n}\r\n// get value from local storage\r\nexport const GetValueFromLocal = async key => {\r\n  try {\r\n    const value = await localStorage.getItem(key)\r\n    if (value !== null) {\r\n      // We have data!\r\n      return JSON.parse(value)\r\n    } else {\r\n      return false\r\n    }\r\n  } catch (error) {\r\n    message.error(error.message)\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {message} from 'antd'\r\nimport {Popconfirm} from 'antd'\r\nimport Styles from './styles'\r\nimport Strings from './labels'\r\nimport n from '../routes/routesNames'\r\nimport {StoreInLocal} from '../../utils/localStorage'\r\n\r\nexport class Logout extends Component {\r\n  clickLogout() {\r\n    StoreInLocal('uid', '')\r\n    this.props.history.push(n.START)\r\n    message.success(Strings.LOGOUT_SUCCESS_MESSAGE)\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Popconfirm\r\n          title={Strings.LOGOUT_ALERT}\r\n          onConfirm={() => this.clickLogout()}\r\n          okText={Strings.OKTEXT}\r\n          cancelText={Strings.CANCELTEXT}\r\n          placement={Strings.PLACEMENT}>\r\n          <p style={Styles.logoutText}>{Strings.LOGOUT}</p>\r\n        </Popconfirm>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Logout)\r\n","export const adminAuthenticateGQLTAG =`query allUserProfiles($email: String!) {\r\n    allUserProfiles(\r\n      filter: { \r\n        userEmail: { eq: $email }, \r\n        isAdminYn: { eq: true } \r\n      }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        userId\r\n        userEmail\r\n      }\r\n    }\r\n  }\r\n  `;\r\n\r\n/*\r\n{\r\n \"email\":\"rockolychef@gmailyy.com\"\r\n}\r\n*/","export const checkEmailAndMobileNoExistsGQLTAG = `query checkEmailAndMobileNoExists($pEmail: String, $pMobileNo: String) {\r\n    checkEmailAndMobileNoExists(pEmail: $pEmail, pMobileNo: $pMobileNo) {\r\n      success\r\n      message\r\n      json\r\n    }\r\n  }\r\n  `\r\n\r\n  /*\r\n    {\r\n    \"pEmail\": \"\",\r\n    \"pMobileNo\": \"\"\r\n  } */","export const checkEmailAndMobileNoExistsUsingUserIdGQLTAG = `query checkEmailAndMobileNoExists(\r\n  $pEmail: String\r\n  $pMobileNo: String\r\n  $pUserId: String\r\n) {\r\n  checkEmailAndMobileNoExists(\r\n    pEmail: $pEmail\r\n    pMobileNo: $pMobileNo\r\n    pUserId: $pUserId\r\n  ) {\r\n    success\r\n    message\r\n    json\r\n  }\r\n}\r\n  `\r\n\r\n  /*\r\n    {\r\n    \"pEmail\": \"\",\r\n    \"pMobileNo\": \"\",\r\n\t\"pUserId\":\"\"\r\n  } */","export const listChefAvailabilityByDateRangeGQLTAG = `query listChefAvailabilityByDateRange(\r\n  $chefId: String!\r\n  $fromDate: Date!\r\n  $toDate: Date!\r\n) {\r\n  listChefAvailabilityByDateRange(\r\n    pChefId: $chefId\r\n    pFromDate: $fromDate\r\n    pToDate: $toDate\r\n  ) {\r\n    totalCount\r\n    nodes {\r\n      date\r\n      fromTime\r\n      toTime\r\n      status\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n// Query Variables\r\n/*\r\n\r\n{\r\n  \"chefId\": \"07fe580f-416c-4125-b6a3-6a0aa589a1ad\",\r\n  \"fromDate\": \"2019-09-10\",\r\n  \"toDate\": \"2019-09-10\"\r\n}\r\n*/","export const listChefAvailabilityForWeekGQLTAG = `query allChefAvailabilityProfiles($chefId: String!) {\r\n    allChefAvailabilityProfiles(\r\n      filter: { \r\n            chefId: { eq: $chefId } \r\n            chefAvailDate:{isNull:true}\r\n        }\r\n      orderBy:CHEF_AVAIL_DOW_ASC\r\n    ) {\r\n      nodes {\r\n        chefAvailDow\r\n        chefAvailDate\r\n        chefAvailFromTime\r\n        chefAvailToTime\r\n      }\r\n    }\r\n  }\r\n  `;\r\n\r\n// Query Variables\r\n/*\r\n{\r\n  \"chefId\": \"9b8abf23-0dd1-4c09-9306-4d39da33013e\"\r\n}\r\n*/","export const listChefNotAvailabilityGQLTAG = `query allChefNotAvailabilityProfiles(\r\n  $chefId: String!\r\n  $offset: Int!\r\n  $first: Int!\r\n  $fromDate: Date\r\n  $toDate: Date\r\n) {\r\n  allChefNotAvailabilityProfiles(\r\n    offset: $offset\r\n    first: $first\r\n    filter: {\r\n      chefId: { eq: $chefId }\r\n      chefNotAvailDate: { gte: $fromDate, lte: $toDate }\r\n    }\r\n    orderBy: CHEF_NOT_AVAIL_DATE_ASC\r\n  ) {\r\n    nodes {\r\n      chefNotAvailId\r\n      chefNotAvailDow\r\n      chefNotAvailDate\r\n      chefNotAvailFromTime\r\n      chefNotAvailToTime\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n// Query Variables\r\n/*\r\n{\r\n  \"chefId\": \"9b8abf23-0dd1-4c09-9306-4d39da33013e\",\r\n  \"offset\": 0,\r\n  \"first\": 50,\r\n  \"fromDate\": \"YYYY-MM-DD\",\r\n  \"toDate\": \"YYYY-MM-DD\"\r\n}\r\n*/","export function listWithFiltersGQLTAG(params) {\r\n    let filterParams = ``;\r\n    let offsetParams = ``;\r\n    let firstParams = ``;\r\n    //\r\n    let filterStr = ``;\r\n\r\n    // Filter\r\n\r\n    // Filter by statusID\r\n    if (params.hasOwnProperty('statusId')) {\r\n        if (params.statusId.length !== 0) {\r\n            filterStr = filterStr + `\r\n            chefBookingStatusId: { in: [${params.statusId}] }\r\n            `;\r\n        }\r\n    }\r\n\r\n    // Filter by CustomerId\r\n    if (params.hasOwnProperty('customerId')) {\r\n        if (params.customerId != null) {\r\n            filterStr = filterStr + `\r\n            customerId: { eq: \"${params.customerId}\" }\r\n            `;\r\n        }\r\n    }\r\n\r\n    // Filter by Chef Id\r\n    if (params.hasOwnProperty('chefId')) {\r\n        if (params.chefId != null) {\r\n            filterStr = filterStr + `\r\n            chefId: { eq: \"${params.chefId}\" }\r\n            `;\r\n        }\r\n    }\r\n\r\n    if (filterStr !== '') {\r\n        filterParams = `filter: { \r\n            ${filterStr} \r\n        }`\r\n    }\r\n\r\n    // First\r\n    if (params.hasOwnProperty('first')) {\r\n        firstParams = `first: ${params.first}`\r\n    } else {\r\n        firstParams = `first: 10`\r\n    }\r\n\r\n    // Offset\r\n    if (params.hasOwnProperty('offset')) {\r\n        offsetParams = `offset: ${params.offset}`\r\n    } else {\r\n        offsetParams = `offset: 0`\r\n    }\r\n\r\n    if (params.hasOwnProperty('pFromTime') && params.pFromTime === null) {\r\n      params.pFromTime = null;\r\n    } else if(params.hasOwnProperty('pFromTime') && params.pFromTime !== null) {\r\n      params.pFromTime = `\"${params.pFromTime}\"`;\r\n    }\r\n  \r\n    if (params.hasOwnProperty('pToTime') && params.pToTime === null) {\r\n      params.pToTime = null;\r\n    } else if(params.hasOwnProperty('pToTime') && params.pToTime !== null) {\r\n      params.pToTime = `\"${params.pToTime}\"`;\r\n    }\r\n\r\n    let gqlStr = `query listBookingByDateRange {\r\n        listBookingByDateRange(\r\n          pFromTime: ${params.pFromTime}\r\n          pToTime: ${params.pToTime}\r\n          ${filterParams}\r\n          ${firstParams}\r\n          ${offsetParams}\r\n        ) {\r\n          totalCount\r\n          nodes {\r\n            chefBookingHistId\r\n            chefId\r\n            customerId\r\n            chefBookingFromTime\r\n            chefBookingToTime\r\n            chefBookingStatusId\r\n            chefBookingPriceValue\r\n            chefBookingPriceUnit\r\n            chefBookingServiceChargePriceValue\r\n            chefBookingServiceChargePriceUnit\r\n            chefBookingCommissionPriceValue\r\n            chefBookingCommissionPriceUnit\r\n            chefBookingTotalPriceValue\r\n            chefBookingTotalPriceUnit\r\n            chefBookingCompletedByChefYn\r\n            chefBookingCompletedByCustomerYn\r\n            chefBookingLocationAddress\r\n            chefBookingLocationLat\r\n            chefBookingLocationLng\r\n            chefBookingAddrLine1\r\n            chefBookingAddrLine2\r\n            chefBookingState\r\n            chefBookingCountry\r\n            chefBookingCity\r\n            chefBookingPostalCode\r\n            chefBookingSummary\r\n            dishTypeDesc\r\n            bookingNotes{\r\n              totalCount\r\n              nodes{\r\n                notesHistId\r\n                notesDescription\r\n                tableName\r\n                tablePkId\r\n                chefId\r\n                customerId\r\n                createdAt\r\n              }\r\n            }\r\n            createdAt\r\n            chefProfileByChefId {\r\n              chefId\r\n              fullName\r\n              chefPicId\r\n              defaultStripeUserId\r\n              chefProfileExtendedsByChefId{\r\n                totalCount\r\n                nodes{\r\n                  chefLocationAddress\r\n                  chefCity\r\n                }\r\n              }\r\n            }\r\n            customerProfileByCustomerId {\r\n              customerId\r\n              fullName\r\n              customerPicId\r\n              customerProfileExtendedsByCustomerId{\r\n                totalCount\r\n                nodes{\r\n                  customerLocationAddress\r\n                }\r\n              }\r\n            }\r\n            statusTypeMasterByChefBookingStatusId {\r\n              statusTypeName\r\n            }\r\n            paymentHistoriesByBookingHistId {\r\n              nodes {\r\n                paymentHistId\r\n                bookingHistId\r\n                paymentId\r\n                paymentStripeCustomerId\r\n                paymentCardId\r\n                paymentOrderId\r\n                paymentType\r\n                bookingHistId\r\n                paymentTransactionId\r\n                paymentStatusId\r\n                paymentMethod\r\n                paymentActualAmount\r\n                paymentTotalAmountUnit\r\n                paymentReceiptUrl\r\n                paymentDoneByCustomerId\r\n                paymentDoneForChefId\r\n                paymentDoneForType\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }`;\r\n    return gqlStr;\r\n}\r\n\r\n/* \r\n{\r\n    // For Customer\r\n   \"customerId\":\"<customer_id>\"\r\n\r\n   // For Chef\r\n   \"chefId\":\"<chef_id>\"\r\n\r\n   \r\n   \"orderBy\":\"\"\r\n   \"first\":\"\"\r\n   \"offset\":\"\"\r\n   \"statusId\":[\"APPROVED\"] \r\n}\r\n*/","export const byIdGQLTAG = `query chefBookingHistoryByChefBookingHistId($chefBookingHistId: String!) {\r\n  chefBookingHistoryByChefBookingHistId(chefBookingHistId: $chefBookingHistId) {\r\n    chefId\r\n    customerId\r\n    chefBookingFromTime\r\n    chefBookingToTime\r\n    chefBookingStatusId\r\n    chefBookingPriceValue\r\n    chefBookingPriceUnit\r\n    chefBookingServiceChargePriceValue\r\n    chefBookingServiceChargePriceUnit\r\n    chefBookingCommissionPriceValue\r\n    chefBookingCommissionPriceUnit\r\n    chefBookingTotalPriceValue\r\n    chefBookingTotalPriceUnit\r\n    chefBookingCompletedByChefYn\r\n    chefBookingCompletedByCustomerYn\r\n    chefBookingSummary\r\n    chefBookingCuisineTypeId\r\n    chefBookingOtherCuisineTypes\r\n    chefBookingAllergyTypeId\r\n    chefBookingOtherAllergyTypes\r\n    chefBookingDietaryRestrictionsTypeId\r\n    chefBookingOtherDietaryRestrictionsTypes\r\n    chefBookingKitchenEquipmentTypeId\r\n    chefBookingOtherKitchenEquipmentTypes\r\n    chefBookingStoreTypeId\r\n    chefBookingOtherStoreTypes\r\n    chefBookingNoOfPeople\r\n    chefBookingComplexity\r\n    chefBookingFoodCost\r\n    chefBookingAdditionalServices\r\n    additionalServiceDetails\r\n    chefBookingChefRejectOrCancelReason\r\n    chefBookingCustomerRejectOrCancelReason\r\n    chefBookingLocationAddress\r\n    chefBookingLocationLat\r\n    chefBookingLocationLng\r\n    chefBookingAddrLine1\r\n    chefBookingAddrLine2\r\n    chefBookingState\r\n    chefBookingCountry\r\n    chefBookingCity\r\n    chefBookingPostalCode\r\n    conversationId\r\n    dishTypeDesc\r\n    createdAt\r\n    bookingNotes {\r\n      totalCount\r\n      nodes {\r\n        notesHistId\r\n        notesDescription\r\n        tableName\r\n        tablePkId\r\n        chefId\r\n        customerId\r\n        createdAt\r\n      }\r\n    }\r\n    kitchenEquipmentTypes {\r\n      nodes {\r\n        kitchenEquipmentTypeId\r\n        kitchenEquipmentTypeName\r\n        kitchenEquipmentTypeDesc\r\n      }\r\n    }\r\n    cuisineTypes {\r\n      nodes {\r\n        cuisineTypeId\r\n        cusineTypeName\r\n        cuisineTypeDesc\r\n      }\r\n    }\r\n    allergyTypes {\r\n      nodes {\r\n        allergyTypeId\r\n        allergyTypeName\r\n        allergyTypeDesc\r\n      }\r\n    }\r\n    dietaryRestrictionsTypes {\r\n      nodes {\r\n        dietaryRestrictionsTypeId\r\n        dietaryRestrictionsTypeName\r\n        dietaryRestrictionsTypeDesc\r\n      }\r\n    }\r\n    storeTypes {\r\n      nodes {\r\n        storeTypeId\r\n        storeTypeName\r\n        storeTypeDesc\r\n      }\r\n    }\r\n    chefProfileByChefId {\r\n      chefId\r\n      fullName\r\n      chefPicId\r\n      defaultStripeUserId\r\n      averageRating\r\n      totalReviewCount\r\n      chefProfileExtendedsByChefId {\r\n        totalCount\r\n        nodes {\r\n          chefLocationAddress\r\n          chefLocationLat\r\n          chefLocationLng\r\n          chefPricePerHour\r\n          chefPriceUnit\r\n          chefCity\r\n          chefAvailableAroundRadiusInValue\r\n          chefAvailableAroundRadiusInUnit\r\n        }\r\n      }\r\n    }\r\n    customerProfileByCustomerId {\r\n      customerId\r\n      fullName\r\n      customerPicId\r\n      averageRating\r\n      totalReviewCount\r\n      customerProfileExtendedsByCustomerId {\r\n        totalCount\r\n        nodes {\r\n          customerLocationAddress\r\n          customerLocationLat\r\n          customerLocationLng\r\n        }\r\n      }\r\n    }\r\n    chefBookingReviews {\r\n      totalCount\r\n      nodes {\r\n        reviewHistId\r\n        reviewPoint\r\n        reviewDesc\r\n        reviewComplimentsDesc\r\n        chefId\r\n        customerId\r\n        isReviewedByChefYn\r\n        isReviewedByCustomerYn\r\n        reviewStatusId\r\n        reviewBlockedReason\r\n        chefProfileByChefId {\r\n          fullName\r\n          chefPicId\r\n        }\r\n        customerProfileByCustomerId {\r\n          fullName\r\n          customerPicId\r\n        }\r\n      }\r\n    }\r\n    customerBookingReviews {\r\n      totalCount\r\n      nodes {\r\n        reviewHistId\r\n        reviewPoint\r\n        reviewDesc\r\n        reviewComplimentsDesc\r\n        chefId\r\n        customerId\r\n        isReviewedByChefYn\r\n        isReviewedByCustomerYn\r\n        reviewStatusId\r\n        reviewBlockedReason\r\n        customerProfileByCustomerId {\r\n          fullName\r\n          customerPicId\r\n        }\r\n        chefProfileByChefId {\r\n          fullName\r\n          chefPicId\r\n        }\r\n      }\r\n    }\r\n    trackBookingHistoryStatusesByChefBookingHistId(\r\n      orderBy: TRACK_ORDER_NO_ASC\r\n    ) {\r\n      nodes {\r\n        updatedAt\r\n        trackOrderNo\r\n        status\r\n      }\r\n    }\r\n    paymentHistoriesByBookingHistId {\r\n      nodes {\r\n        paymentHistId\r\n        bookingHistId\r\n        paymentId\r\n        paymentStripeCustomerId\r\n        paymentCardId\r\n        paymentOrderId\r\n        paymentType\r\n        bookingHistId\r\n        paymentTransactionId\r\n        paymentStatusId\r\n        paymentMethod\r\n        paymentActualAmount\r\n        paymentTotalAmountUnit\r\n        paymentReceiptUrl\r\n        paymentDoneByCustomerId\r\n        paymentDoneForChefId\r\n        paymentDoneForType\r\n        paymentOriginalPriceValueFormat\r\n        paymentOriginalPriceUnitFormat\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n}`\r\n/*\r\n  {\r\n    \"chefBookingHistId\":\"893e44ed-bec3-4fa4-88ce-416852e75d41\"\r\n  }\r\n*/","export const checkBookingByParamsGQLTAG = `query checkBookingByParams(\r\n  $pChefId: String!\r\n  $pFromTime: Datetime!\r\n  $pToTime: Datetime!\r\n  $pGmtFromTime: Datetime!\r\n  $pGmtToTime: Datetime!\r\n  $pBookingId: String\r\n) {\r\n  checkBookingByParams(\r\n    pChefId: $pChefId\r\n    pFromTime: $pFromTime\r\n    pToTime: $pToTime\r\n    pBookingId: $pBookingId\r\n    pGmtFromTime: $pGmtFromTime\r\n    pGmtToTime: $pGmtToTime\r\n  ) {\r\n    success\r\n    message\r\n    json\r\n  }\r\n}\r\n\r\n  ` \r\n\r\n  /*{\r\n  \"pChefId\": \"23fe20cc-6097-4526-9536-5068c1b36b93\",\r\n  \"pFromTime\": \"2019-11-01 09:00:00\",\r\n  \"pToTime\":\"2019-11-01 10:00:00\",\r\n  \"pGmtFromTime\": \"2019-11-01 09:00:00\",\r\n  \"pGmtToTime\": \"2019-11-01 10:00:00\"\r\n} */","export const requestedBookingByIdGQLTAG = `query allChefBookingRequestHistories($bookingHistId: String!) {\r\n  allChefBookingRequestHistories(\r\n    filter: { bookingHistId: { eq: $bookingHistId } }\r\n  ) {\r\n    nodes {\r\n      chefBookingRequestHistId\r\n      bookingHistId\r\n      chefId\r\n      customerId\r\n      chefBookingRequestNoOfPeople\r\n      chefBookingRequestComplexity\r\n      chefBookingRequestAdditionalServices\r\n      additionalServiceDetails\r\n      chefBookingRequestTotalPriceUnit\r\n      chefBookingRequestTotalPriceValue\r\n      createdAt\r\n      updatedAt\r\n      chefBookingRequestPriceValue\r\n      chefBookingRequestPriceUnit\r\n      chefBookingRequestServiceChargePriceValue\r\n      chefBookingRequestServiceChargePriceUnit\r\n      chefBookingRequestCommissionPriceValue\r\n      chefBookingRequestCommissionPriceUnit\r\n    }\r\n  }\r\n}`\r\n/*\r\n  {\r\n    \"chefBookingHistId\":\"893e44ed-bec3-4fa4-88ce-416852e75d41\"\r\n  }\r\n*/","/** @format */\r\n\r\nexport const profileByIdGQLTAG = `query chefProfileByChefId($chefId: String!) {\r\n  chefProfileByChefId(chefId: $chefId) {\r\n    chefId\r\n    userId\r\n    isRegistrationCompletedYn\r\n    fullName\r\n    chefMobileCountryCode\r\n    mobileNoWithCountryCode\r\n    chefSalutation\r\n    chefFirstName\r\n    chefLastName\r\n    chefUpdatedScreens\r\n    averageRating\r\n    totalReviewCount\r\n    totalUnreadCount\r\n    isDetailsFilledYn\r\n    attachementsCertification\r\n    attachementsGallery\r\n    attachementsLicense\r\n    attachementsOthers\r\n    bookingCompletedCount\r\n    isEmailVerifiedYn\r\n    isMobileNoVerifiedYn\r\n\tchefRejectOrBlockReason\r\n    entityId\r\n    dishTypes{\r\n      totalCount\r\n      nodes{\r\n        dishTypeId\r\n        dishTypeName\r\n        dishTypeDesc\r\n        isManuallyYn\r\n        chefId\r\n        isAdminApprovedYn\r\n        createdAt\r\n      }\r\n    }\r\n    cuisineTypes{\r\n      totalCount\r\n      nodes{\r\n        cuisineTypeId\r\n        cusineTypeName\r\n        cuisineTypeDesc\r\n        isManuallyYn\r\n        chefId\r\n        isAdminApprovedYn\r\n        createdAt\r\n      }\r\n    }\r\n    defaultStripeUserId\r\n    chefGender\r\n    chefPicId\r\n    chefEmail\r\n    chefMobileNumber\r\n    chefSno\r\n    chefStatusId\r\n    chefSalutation\r\n    chefDob\r\n    isNotificationYn\r\n    createdAt\r\n    chefProfileExtendedsByChefId {\r\n      totalCount\r\n      nodes {\r\n        chefProfileExtendedId\r\n        chefExperience\r\n        chefDesc\r\n        chefDrivingLicenseNo\r\n        chefFacebookUrl\r\n        chefTwitterUrl\r\n        chefLocationAddress\r\n        chefLocationLat\r\n        chefLocationLng\r\n        chefAddrLine1\r\n        chefAddrLine2\r\n        chefState\r\n        chefCountry\r\n        chefCity\r\n        chefPostalCode\r\n        chefStripeCustomerId\r\n        isCookingItemsNeededYn\r\n        chefPricePerHour\r\n        chefPriceUnit\r\n        chefAvailableAroundRadiusInValue\r\n        chefAvailableAroundRadiusInUnit\r\n        chefBusinessHoursFromTime\r\n        chefBusinessHoursToTime\r\n        isIntroSlidesSeenYn\r\n        minimumNoOfMinutesForBooking\r\n        chefGratuity\r\n        noOfGuestsCanServe\r\n        chefAdditionalServices\r\n        additionalServiceDetails\r\n        chefComplexity\r\n        chefAwards\r\n        noOfGuestsMin\r\n        noOfGuestsMax\r\n        discount\r\n        personsCount\r\n        isChefEnabledShoppingLocationYn\r\n        chefCertificateType\r\n        certificationsTypes{\r\n          nodes{\r\n            certificateTypeId\r\n            certificateTypeName\r\n            certificateTypeDesc\r\n            createdAt\r\n          }\r\n        }\r\n      }\r\n    }\r\n    statusTypeMasterByChefStatusId {\r\n      statusTypeName\r\n    }\r\n    chefAttachmentProfilesByChefId {\r\n      totalCount\r\n      nodes {\r\n        chefAttachmentType\r\n        chefAttachmentUrl\r\n        chefAttachmentsAreaSection\r\n      }\r\n    }\r\n    chefSpecializationProfilesByChefId {\r\n      totalCount\r\n      nodes {\r\n        chefSpecializationId\r\n        chefCuisineTypeId\r\n        chefDishTypeId\r\n        chefCuisineTypeDesc\r\n        chefDishTypeDesc\r\n        ingredientsDesc\r\n      }\r\n    }\r\n    reviewHistoriesByChefId(\r\n      filter: {\r\n        reviewStatusId: { in: [\"REVIEWED\", \"UNBLOCKED\"] }\r\n        isReviewedByCustomerYn: { eq: true }\r\n      }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        reviewHistId\r\n        reviewPoint\r\n        reviewDesc\r\n        reviewComplimentsDesc\r\n        isReviewedByChefYn\r\n        isReviewedByCustomerYn\r\n        reviewStatusId\r\n        createdAt\r\n        customerProfileByCustomerId{\r\n          customerId\r\n          fullName\r\n          customerPicId\r\n          customerProfileExtendedsByCustomerId{\r\n            totalCount\r\n            nodes{\r\n              customerLocationAddress\r\n              customerLocationLat\r\n              customerLocationLng\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n// Query Variables\r\n/*\r\n{\r\n  \"chefId\": \"07fe580f-416c-4125-b6a3-6a0aa589a1ad\"\r\n}\r\n*/\r\n","export function listWithFiltersGQLTAG(params){\r\n\r\n  let filterParams = ``;\r\n  let orderByParams = ``;\r\n  let offsetParams = ``;\r\n  let firstParams = ``;\r\n  let fetchAdditionalParamsByUserType = ``;\r\n  //\r\n  let filterStr = ``;\r\n\r\n  // Filter\r\n\r\n  // Filter by date range\r\n  if(params.hasOwnProperty('fromTime') && params.hasOwnProperty('toTime') ){\r\n    if(params.fromTime!=null && params.toTime!=null){\r\n      filterStr = filterStr + `\r\n        createdAt: { gte: \"${params.fromTime}\", lte: \"${params.toTime}\" }\r\n      `;\r\n    }\r\n  }\r\n  // Filter by statusID\r\n  if(params.hasOwnProperty('statusId')){\r\n    if(params.statusId.length!==0){\r\n      filterStr = filterStr + `\r\n        chefStatusId: { in: [\"${params.statusId}\"] }\r\n      `;\r\n    }\r\n  }\r\n\r\n\r\n  if(filterStr!==''){\r\n    filterParams = `filter: { \r\n      ${filterStr} \r\n    }`\r\n  }\r\n\r\n  // OrderBy\r\n  if(params.hasOwnProperty('orderBy')){\r\n    orderByParams = `orderBy: ${params.orderBy}` \r\n  }else{\r\n    orderByParams = `orderBy: CREATED_AT_DESC`\r\n  }\r\n\r\n  // First\r\n  if(params.hasOwnProperty('first')){\r\n    firstParams = `first: ${params.first}` \r\n  }else{\r\n    firstParams = `first: 10`\r\n  }\r\n\r\n  // Offset\r\n  if(params.hasOwnProperty('offset')){\r\n    offsetParams = `offset: ${params.offset}` \r\n  }else{\r\n    offsetParams = `offset: 0`\r\n  }\r\n\r\n  // Check userType and bind some additional datas\r\n  if(params.hasOwnProperty('roleType') && params.hasOwnProperty('roleId') ){\r\n    if(params.roleType === 'CUSTOMER'){\r\n      fetchAdditionalParamsByUserType = `\r\n        isCustomerFollowingYn(pCustomerId:${params.roleId})\r\n      `\r\n    }\r\n  }\r\n\r\n  let gqlStr = `query allChefProfiles {\r\n    allChefProfiles(\r\n      ${filterParams}\r\n      ${orderByParams}\r\n      ${firstParams}\r\n      ${offsetParams}\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        chefId\r\n        chefSalutation\r\n        chefFirstName\r\n        chefLastName\r\n        fullName\r\n        averageRating\r\n        totalReviewCount\r\n        chefUpdatedScreens\r\n        isDetailsFilledYn\r\n        chefGender\r\n        chefPicId\r\n        chefEmail\r\n        chefMobileNumber\r\n        chefSno\r\n        chefStatusId\r\n        cuisineTypeId\r\n        cuisineTypeDesc\r\n        dishTypeId\r\n        dishTypeDesc\r\n        createdAt\r\n        ${fetchAdditionalParamsByUserType}\r\n        chefProfileExtendedsByChefId {\r\n          totalCount\r\n          nodes {\r\n            chefProfileExtendedId\r\n            chefExperience\r\n            chefDesc\r\n            chefDrivingLicenseNo\r\n            chefFacebookUrl\r\n            chefTwitterUrl\r\n            chefLocationAddress\r\n            chefLocationLat\r\n            chefLocationLng\r\n            chefAddrLine1\r\n            chefAddrLine2\r\n            chefState\r\n            chefCountry\r\n            chefCity\r\n            isCookingItemsNeededYn\r\n            chefPricePerHour\r\n            chefPriceUnit\r\n            chefAvailableAroundRadiusInValue\r\n            chefAvailableAroundRadiusInUnit\r\n            chefBusinessHoursFromTime\r\n            chefBusinessHoursToTime\r\n            chefStripeCustomerId\r\n            minimumNoOfMinutesForBooking\r\n            chefGratuity\r\n            noOfGuestsCanServe\r\n            chefAdditionalServices\r\n            chefComplexity\r\n            chefAwards\r\n            certificationsTypes{\r\n              nodes{\r\n                certificateTypeId\r\n                certificateTypeName\r\n                certificateTypeDesc\r\n                createdAt\r\n              }\r\n            }\r\n            noOfGuestsMin\r\n            noOfGuestsMax\r\n            discount\r\n            personsCount\r\n            isChefEnabledShoppingLocationYn\r\n            chefCertificateType\r\n          }\r\n        }\r\n        statusTypeMasterByChefStatusId{\r\n          statusTypeName\r\n        }\r\n      }\r\n    }\r\n  }`;\r\n\r\n  return gqlStr;\r\n}\r\n\r\n/*\r\n\"orderBy\":\"CREATED_AT_DESC / PRICE_PER_HOUR_ASC / PRICE_PER_HOUR_DESC\" // support different orderBy\r\n\"first\":10 // total items to be fetched for pagination\r\n\"offset\": 0 // To start the data from array index\r\nstatusId:[\"APPROVED\"]\r\n\r\n// Admin:\r\n\"fromTime\":\"2019-09-01\",\r\n\"toTime\":\"2019-09-30\", \r\n\r\n\r\nroleType:\"CUSTOMER / CHEF \" \r\nroleId:\"<customer_id> / <chef_id>\"\r\n\r\n*/","export function filterByParamsGQLTAG(params) {\r\n\r\n  let fetchAdditionalParamsByUserType = ``;\r\n  let offsetParams = ``;\r\n  let firstParams = ``;\r\n\r\n  // Check userType and bind some additional datas\r\n  if (params.hasOwnProperty('roleType') && params.hasOwnProperty('roleId')) {\r\n    if (params.roleType === 'CUSTOMER') {\r\n      fetchAdditionalParamsByUserType = `\r\n          isCustomerFollowingYn(pCustomerId:\"${params.roleId}\")\r\n        `\r\n    }\r\n  }\r\n\r\n  // First\r\n  if (params.hasOwnProperty('first')) {\r\n    firstParams = `first: ${params.first}`\r\n  } else {\r\n    firstParams = `first: 10`\r\n  }\r\n\r\n  // Offset\r\n  if (params.hasOwnProperty('offset')) {\r\n    offsetParams = `offset: ${params.offset}`\r\n  } else {\r\n    offsetParams = `offset: 0`\r\n  }\r\n\r\n  let gqlStr = `query filterChefByParams{\r\n      filterChefByParams(\r\n          pData: ${params.data}\r\n          ${firstParams}\r\n          ${offsetParams}\r\n        ) {\r\n        totalCount\r\n        nodes {\r\n          chefId\r\n          totalReviewCount\r\n          chefFirstName\r\n          chefLastName\r\n\t\t      chefSalutation\r\n          fullName\r\n          chefGender\r\n          cuisineTypeId\r\n          dishTypeId\r\n          averageRating\r\n          pricePerHour\r\n          chefPicId\r\n          createdAt\r\n          ${fetchAdditionalParamsByUserType}\r\n          chefProfileExtendedsByChefId{\r\n            nodes{\r\n              chefLocationAddress\r\n              chefPriceUnit\r\n              chefAddrLine1\r\n              chefAddrLine2\r\n              chefAvailableAroundRadiusInValue\r\n              chefAvailableAroundRadiusInUnit\r\n              minimumNoOfMinutesForBooking\r\n              chefCity\r\n\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  return gqlStr;\r\n\r\n}\r\n/* {\r\n  \"pdata\": \"{\\\"orderBy\\\":\\\"CREATED_BY\\\",\\\"cuisine\\\":\\\"{MEXICAN_FOOD}\\\"}\"\r\n}*/","export const totalCountGQLTAG = `query totalCountByParams($pData:JSON){\r\n    totalCountByParams(pData:$pData)\r\n  }\r\n  `\r\n\r\n\r\n  /*\r\n  {\r\n\"type\":\"CHEF_LIST / CHEF_NOTIFICATION / CUSTOMER_NOTIFICATION / CHEF_PAYMENTS / CUSTOMER_PAYMENTS / CUSTOMER_FOLLOW_CHEF / CHEF_BOOKING / CUSTOMER_BOOKING\"\r\n\r\n// CHEF_LIST\r\nlat:\"\"\r\nlng:\"\"\r\ncuisine:\"\"\r\ndish:\"\"\r\nmin_price:\"\"\r\nmax_price:\"\"\r\nmin_rating:\"\"\r\n\r\n// CHEF_NOTIFICATION\r\nchefId:\"\"\r\n// CUSTOMER_NOTIFICATION\r\ncustomerId:\"\"\r\n\r\n// CHEF_PAYMENTS\r\nchefId:\"\"\r\n// CUSTOMER_PAYMENTS\r\ncustomerId:\"\"\r\n\r\n//CUSTOMER_FOLLOW_CHEF\r\ncustomerId:\"\"\r\n\r\n// CHEF_BOOKING\r\nchefId:\"\"\r\nstatusId:\"\"\r\nstartDate:\"\"\r\nendDate:\"\"\r\n// CUSTOMER_BOOKING\r\ncustomerId:\"\"\r\nstatusId:\"\"\r\nstartDate:\"\"\r\nendDate:\"\"\r\n} */","export function listWithFiltersGQLTAG (params){\r\n\r\n  let filterParams = ``;\r\n  let orderByParams = ``;\r\n  let offsetParams = ``;\r\n  let firstParams = ``;\r\n  //\r\n  let filterStr = ``;\r\n\r\n  // Filter by date range\r\n  if(params.hasOwnProperty('fromTime') && params.hasOwnProperty('toTime') ){\r\n    filterStr = filterStr + `\r\n      createdAt: { gte: \"${params.fromTime}\", lte: \"${params.toTime}\" }\r\n    `;\r\n  }\r\n\r\n  if(filterStr!==''){\r\n    filterParams = `filter: { \r\n      ${filterStr} \r\n    }`\r\n  }\r\n\r\n  // Sort by orderby\r\n  if(params.hasOwnProperty('orderBy')){\r\n    orderByParams = `orderBy: ${params.orderBy}` \r\n  }else{\r\n    orderByParams = 'orderBy: CREATED_AT_DESC'\r\n  }\r\n\r\n  // First\r\n  if(params.hasOwnProperty('first')){\r\n    firstParams = `first: ${params.first}` \r\n  }else{\r\n    firstParams = `first: 10`\r\n  }\r\n\r\n  // Offset\r\n  if(params.hasOwnProperty('offset')){\r\n    offsetParams = `offset: ${params.offset}` \r\n  }else{\r\n    offsetParams = `offset: 0`\r\n  }\r\n\r\n  let gqlStr = `query allCustomerProfiles {\r\n    allCustomerProfiles(\r\n      ${filterParams}\r\n      ${orderByParams}\r\n      ${firstParams}\r\n      ${offsetParams}\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        customerId\r\n        customerSalutation\r\n        customerFirstName\r\n        customerLastName\r\n        fullName\r\n        isDetailsFilledYn\r\n        customerUpdatedScreens\r\n        customerGender\r\n        customerEmail\r\n        customerMobileNumber\r\n        customerStatusId\r\n        customerPicId\r\n        averageRating\r\n        totalReviewCount\r\n        createdAt\r\n        statusTypeMasterByCustomerStatusId {\r\n          statusTypeName\r\n        }\r\n        customerProfileExtendedsByCustomerId{\r\n          nodes{\r\n            customerProfileExtendedId\r\n            customerLocationAddress\r\n            customerLocationLat\r\n            customerLocationLng\r\n            customerAddrLine1\r\n            customerAddrLine2\r\n            customerState\r\n            customerCountry\r\n            customerCity\r\n            createdAt\r\n            customerStripeCustomerId\r\n            customerId\r\n            customerPostalCode\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }`;\r\n\r\n  return gqlStr;\r\n\r\n};\r\n\r\n\r\n/*\r\nlistWithFiltersGQLTAG(\"2019-09-01\",\"2019-09-30\")\r\n*/","export const profileByIdGQLTAG = `query customerProfileByCustomerId($customerId: String!) {\r\n  customerProfileByCustomerId(customerId: $customerId) {\r\n    customerId\r\n    userId\r\n    fullName\r\n    isDetailsFilledYn\r\n    averageRating\r\n    totalReviewCount\r\n    customerMobileCountryCode\r\n    mobileNoWithCountryCode\r\n    totalUnreadCount\r\n    customerSalutation\r\n    customerUpdatedScreens\r\n    isRegistrationCompletedYn\r\n    customerFirstName\r\n    customerLastName\r\n    customerGender\r\n    customerEmail\r\n    customerMobileNumber\r\n    customerSno\r\n    customerDob\r\n    customerPicId\r\n    customerStatusId\r\n    averageRating\r\n    totalReviewCount\r\n    isNotificationYn\r\n    isEmailVerifiedYn\r\n    isMobileNoVerifiedYn\r\n    entityId\r\n    createdAt\r\n    customerPreferenceProfilesByCustomerId {\r\n      nodes {\r\n        customerPreferenceId\r\n        customerId\r\n        customerCuisineTypeId\r\n        customerOtherCuisineTypes\r\n        customerAllergyTypeId\r\n        customerOtherAllergyTypes\r\n        customerDietaryRestrictionsTypeId\r\n        customerOtherDietaryRestrictionsTypes\r\n        customerKitchenEquipmentTypeId\r\n        customerOtherKitchenEquipmentTypes\r\n        allergyTypes {\r\n          totalCount\r\n          nodes {\r\n            allergyTypeId\r\n            allergyTypeName\r\n          }\r\n        }\r\n        cuisineTypes {\r\n          totalCount\r\n          nodes {\r\n            cuisineTypeId\r\n            cusineTypeName\r\n          }\r\n        }\r\n        dietaryRestrictionsTypes {\r\n          totalCount\r\n          nodes {\r\n            dietaryRestrictionsTypeId\r\n            dietaryRestrictionsTypeName\r\n          }\r\n        }\r\n        kitchenEquipmentTypes {\r\n          totalCount\r\n          nodes {\r\n            kitchenEquipmentTypeId\r\n            kitchenEquipmentTypeName\r\n          }\r\n        }\r\n      }\r\n    }\r\n    customerProfileExtendedsByCustomerId {\r\n      totalCount\r\n      nodes {\r\n        customerProfileExtendedId\r\n        customerLocationAddress\r\n        customerLocationLat\r\n        customerLocationLng\r\n        customerAddrLine1\r\n        customerAddrLine2\r\n        customerState\r\n        customerCountry\r\n        customerCity\r\n        createdAt\r\n        customerStripeCustomerId\r\n        customerId\r\n        customerPostalCode\r\n      }\r\n    }\r\n    reviewHistoriesByCustomerId(\r\n      filter: {\r\n        reviewStatusId: { in: [\"REVIEWED\", \"UNBLOCKED\"] }\r\n        isReviewedByChefYn: { eq: true }\r\n      }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        reviewHistId\r\n        reviewPoint\r\n        reviewDesc\r\n        reviewComplimentsDesc\r\n        isReviewedByChefYn\r\n        isReviewedByCustomerYn\r\n        reviewStatusId\r\n        createdAt\r\n        chefProfileByChefId {\r\n          chefId\r\n          fullName\r\n          chefPicId\r\n          chefProfileExtendedsByChefId {\r\n            totalCount\r\n            nodes {\r\n              chefLocationAddress\r\n              chefLocationLat\r\n              chefLocationLng\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n// Query Variables\r\n/*\r\n  {\r\n  \"customerId\": \"824373e4-46aa-459c-a819-5d76bede77b7\"\r\n}\r\n*/","export const filterByCustomerIdGQLTAG = `query allCustomerFollowChefs(\r\n  $customerId: String!\r\n  $offset: Int!\r\n  $first: Int!\r\n) {\r\n  allCustomerFollowChefs(\r\n    filter: { customerId: { eq: $customerId }, isChefApprovedYn: { eq: true } }\r\n    orderBy: CREATED_AT_ASC\r\n    first: $first\r\n    offset: $offset\r\n  ) {\r\n    totalCount\r\n    nodes {\r\n      customerFollowChefId\r\n      chefId\r\n      customerId\r\n      chefProfileByChefId {\r\n        fullName\r\n        chefEmail\r\n        chefPicId\r\n        averageRating\r\n        totalReviewCount\r\n        chefProfileExtendedsByChefId {\r\n          totalCount\r\n          nodes {\r\n            chefProfileExtendedId\r\n            chefExperience\r\n            chefDesc\r\n            chefDrivingLicenseNo\r\n            chefFacebookUrl\r\n            chefTwitterUrl\r\n            chefLocationAddress\r\n            chefLocationLat\r\n            chefLocationLng\r\n            chefAddrLine1\r\n            chefAddrLine2\r\n            chefState\r\n            chefCountry\r\n            chefCity\r\n            isCookingItemsNeededYn\r\n            chefPricePerHour\r\n            chefPriceUnit\r\n            chefAvailableAroundRadiusInValue\r\n            chefAvailableAroundRadiusInUnit\r\n            chefBusinessHoursFromTime\r\n            chefBusinessHoursToTime\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\n/*\r\n{\r\n  \"customerId\": \"7805574b-7ba0-414a-bfa9-ca03f1979978\",\r\n  \"offset\": 2,\r\n  \"first\": 2\r\n}\r\n*/","export const allAllergyGQLTAG = `query allAllergyTypeMasters{\r\n  allAllergyTypeMasters(orderBy: CREATED_AT_DESC) {\r\n    nodes {\r\n      allergyTypeId\r\n      allergyTypeName\r\n      allergyTypeDesc\r\n      createdAt\r\n      updatedAt\r\n      chefId\r\n      customerId\r\n      isManuallyYn\r\n      statusId\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n","export const allAllergyByStatusGQLTAG = `query allAllergyTypeMasters($statusId:String!){\r\n  allAllergyTypeMasters(\r\n    orderBy: CREATED_AT_DESC\r\n    filter: { statusId: { eq: $statusId } }\r\n    ) {\r\n    nodes {\r\n      allergyTypeId\r\n      allergyTypeName\r\n      allergyTypeDesc\r\n      createdAt\r\n      updatedAt\r\n      chefId\r\n      customerId\r\n      isManuallyYn\r\n      statusId\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n\r\n\r\n  /*{\r\n  \"statusId\": \"APPROVED\" //PENDING // REJECTED\r\n}*/","export const allergyByCustomerIdGQLTAG = `query getAllergyTypes($pCustomerId: String!) {\r\n  getAllergyTypes(pChefId: null, pCustomerId: $pCustomerId) {\r\n    totalCount\r\n    nodes {\r\n      allergyTypeId\r\n      allergyTypeName\r\n      allergyTypeDesc\r\n      statusId\r\n      isManuallyYn\r\n      chefId\r\n      customerId\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n`\r\n/**\r\n{\r\n  \"pCustomerId\": \"db4b6464-196b-47c9-ac8b-8c5d0b9d4da1\"\r\n}\r\n*/","export const allCuisinesGQLTAG = `query allCuisineTypeMasters {\r\n    allCuisineTypeMasters(orderBy: CREATED_AT_DESC) {\r\n      totalCount\r\n      nodes {\r\n        cuisineTypeId\r\n        cusineTypeName\r\n        cuisineTypeDesc\r\n        isManuallyYn\r\n        isAdminApprovedYn\r\n        chefId\r\n        chefProfileByChefId{\r\n          fullName\r\n          chefGender\r\n          chefPicId\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\n","export const allCuisinesByStatusGQLTAG = `query allCuisineTypeMasters($statusId:String!){\r\n  allCuisineTypeMasters(\r\n    orderBy: CREATED_AT_DESC\r\n    filter: { statusId: { eq:$statusId} }\r\n  ) {\r\n    totalCount\r\n    nodes {\r\n      cuisineTypeId\r\n      cusineTypeName\r\n      cuisineTypeDesc\r\n      isManuallyYn\r\n      isAdminApprovedYn\r\n      chefId\r\n      statusId\r\n      chefProfileByChefId {\r\n        fullName\r\n        chefGender\r\n        chefPicId\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n\r\n/*{\r\n  \"statusId\": \"APPROVED\" //PENDING // REJECTED\r\n}*/\r\n","export const cuisineByChefIdGQLTAG = `query getCuisineTypes($pChefId:String){\r\n  getCuisineTypes(pChefId:$pChefId,pCustomerId:null){\r\n    totalCount\r\n    nodes{\r\n      cuisineTypeId\r\n      cusineTypeName\r\n      cuisineTypeDesc\r\n      createdAt\r\n      isManuallyYn\r\n      chefId\r\n      isAdminApprovedYn\r\n    }\r\n  }\r\n}\r\n  `\r\n  /**\r\n   {\r\n  \"pChefId\": \"db4b6464-196b-47c9-ac8b-8c5d0b9d4da1\"\r\n}\r\n   */","export const cuisineByCustomerIdGQLTAG = `query getCuisineTypes($pCustomerId:String){\r\n  getCuisineTypes(pChefId:null,pCustomerId:$pCustomerId){\r\n    totalCount\r\n    nodes{\r\n      cuisineTypeId\r\n      cusineTypeName\r\n      cuisineTypeDesc\r\n      createdAt\r\n      isManuallyYn\r\n      chefId\r\n      isAdminApprovedYn\r\n    }\r\n  }\r\n}\r\n  `\r\n  /**\r\n   {\r\n  \"pCustomerId\": \"db4b6464-196b-47c9-ac8b-8c5d0b9d4da1\"\r\n}\r\n   */","export const cuisineGQLTAG = `query allCuisineTypeMasters {\r\n    allCuisineTypeMasters(\r\n      filter: { isAdminApprovedYn: { eq: true } }\r\n      orderBy: CUSINE_TYPE_NAME_ASC\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        cuisineTypeId\r\n        cusineTypeName\r\n        cuisineTypeDesc\r\n        isManuallyYn\r\n        chefId\r\n        isAdminApprovedYn\r\n      }\r\n    }\r\n  }\r\n  `;","export const allDishesGQLTAG = `query allDishTypeMasters{\r\n    allDishTypeMasters(orderBy: CREATED_AT_DESC) {\r\n      totalCount\r\n      nodes {\r\n        dishTypeId\r\n        dishTypeName\r\n        dishTypeDesc\r\n        isManuallyYn\r\n        isAdminApprovedYn\r\n        chefId\r\n        customerId\r\n        chefProfileByChefId {\r\n          fullName\r\n          chefGender\r\n          chefPicId\r\n        }\r\n        customerProfileByCustomerId {\r\n          fullName\r\n          customerGender\r\n          customerPicId\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\n","export const allDishesByStatusGQLTAG = `query allDishTypeMasters($statusId:String!){\r\n  allDishTypeMasters(\r\n    orderBy: CREATED_AT_DESC\r\n    filter: { statusId: { eq:$statusId } }\r\n  ) {\r\n    totalCount\r\n    nodes {\r\n      dishTypeId\r\n      dishTypeName\r\n      dishTypeDesc\r\n      isManuallyYn\r\n      isAdminApprovedYn\r\n      chefId\r\n      customerId\r\n      statusId\r\n      chefProfileByChefId {\r\n        fullName\r\n        chefGender\r\n        chefPicId\r\n      }\r\n      customerProfileByCustomerId {\r\n        fullName\r\n        customerGender\r\n        customerPicId\r\n      }\r\n    }\r\n  }\r\n}\r\n  `\r\n\r\n\r\n  /*{\r\n  \"statusId\": \"APPROVED\" //PENDING // REJECTED\r\n}*/","export const dishByChefIdGQLTAG = `query getDishTypes($pChefId: String) {\r\n  getDishTypes(pChefId: $pChefId,pCustomerId:null) {\r\n    totalCount\r\n    nodes {\r\n      dishTypeId\r\n      dishTypeName\r\n      dishTypeDesc\r\n      createdAt\r\n      isManuallyYn\r\n      chefId\r\n      isAdminApprovedYn\r\n    }\r\n  }\r\n}\r\n\r\n  `\r\n\r\n  /*\r\n  {\r\n  \"chefId\": \"db4b6464-196b-47c9-ac8b-8c5d0b9d4da1\"\r\n} */","export const dishGQLTAG = `query allDishTypeMasters {\r\n    allDishTypeMasters(\r\n      filter: { isAdminApprovedYn: { eq: true } }\r\n      orderBy: DISH_TYPE_NAME_ASC\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        dishTypeId\r\n        dishTypeName\r\n        dishTypeDesc\r\n        isManuallyYn\r\n        chefId\r\n      }\r\n    }\r\n  }\r\n  `;\r\n","export const allDietaryRestrictionsGQLTAG = `query allDietaryRestrictionsTypeMasters {\r\n  allDietaryRestrictionsTypeMasters(orderBy: CREATED_AT_DESC) {\r\n    nodes {\r\n      dietaryRestrictionsTypeId\r\n      dietaryRestrictionsTypeName\r\n      dietaryRestrictionsTypeDesc\r\n      createdAt\r\n      updatedAt\r\n      chefId\r\n      customerId\r\n      isManuallyYn\r\n      statusId\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n","export const allDietaryRestrictionsByStatusGQLTAG = `query allDietaryRestrictionsTypeMasters($statusId:String!) {\r\n  allDietaryRestrictionsTypeMasters(\r\n    orderBy: CREATED_AT_DESC\r\n    filter: { statusId: { eq: $statusId } }\r\n  ) {\r\n    nodes {\r\n      dietaryRestrictionsTypeId\r\n      dietaryRestrictionsTypeName\r\n      dietaryRestrictionsTypeDesc\r\n      createdAt\r\n      updatedAt\r\n      chefId\r\n      customerId\r\n      isManuallyYn\r\n      statusId\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n\r\n  /*{\r\n  \"statusId\": \"APPROVED\" //PENDING // REJECTED\r\n}*/","export const dietaryRestrictionsByCustomerIdGQLTAG = `query getDietaryRestrictionsTypes($pCustomerId: String!) {\r\n  getDietaryRestrictionsTypes(pChefId: null, pCustomerId: $pCustomerId) {\r\n    totalCount\r\n    nodes {\r\n      dietaryRestrictionsTypeId\r\n      dietaryRestrictionsTypeName\r\n      dietaryRestrictionsTypeDesc\r\n      statusId\r\n      isManuallyYn\r\n      chefId\r\n      customerId\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n`\r\n  /**\r\n   {\r\n  \"pCustomerId\": \"db4b6464-196b-47c9-ac8b-8c5d0b9d4da1\"\r\n}\r\n   */","export const allKitchenEquipmentsGQLTAG = `query allKitchenEquipmentTypeMasters {\r\n  allKitchenEquipmentTypeMasters(orderBy: CREATED_AT_DESC) {\r\n    nodes {\r\n      kitchenEquipmentTypeId\r\n      kitchenEquipmentTypeName\r\n      kitchenEquipmentTypeDesc\r\n      createdAt\r\n      updatedAt\r\n      chefId\r\n      customerId\r\n      isManuallyYn\r\n      statusId\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n","export const allKitchenEquipmentsByStatusGQLTAG = `query allKitchenEquipmentTypeMasters($statusId:String!) {\r\n  allKitchenEquipmentTypeMasters(\r\n    orderBy: CREATED_AT_DESC\r\n    filter: { statusId: { eq: $statusId } }\r\n  ) {\r\n    nodes {\r\n      kitchenEquipmentTypeId\r\n      kitchenEquipmentTypeName\r\n      kitchenEquipmentTypeDesc\r\n      createdAt\r\n      updatedAt\r\n      chefId\r\n      customerId\r\n      isManuallyYn\r\n      statusId\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n  /*{\r\n  \"statusId\": \"APPROVED\" //PENDING // REJECTED\r\n}*/","export const kitchenEquipmentsByCustomerIdGQLTAG = `query getKitchenEquipmentTypes($pCustomerId: String) {\r\n  getKitchenEquipmentTypes(pChefId: null, pCustomerId: $pCustomerId) {\r\n    totalCount\r\n    nodes {\r\n      kitchenEquipmentTypeId\r\n      kitchenEquipmentTypeName\r\n      kitchenEquipmentTypeDesc\r\n      createdAt\r\n      updatedAt\r\n      chefId\r\n      customerId\r\n      isManuallyYn\r\n      statusId\r\n    }\r\n  }\r\n}\r\n`\r\n  /**\r\n   {\r\n  \"pCustomerId\": \"db4b6464-196b-47c9-ac8b-8c5d0b9d4da1\"\r\n}\r\n   */","export const questionsByAreaTypeGQLTAG = `\r\n    query allQuestionMasters($areaType: String!) {\r\n        allQuestionMasters(\r\n        filter: { questionAreaType: { eq: $areaType } }\r\n        orderBy: QUESTION_ORDER_ASC\r\n        ) {\r\n        totalCount\r\n        nodes {\r\n            questionId\r\n            questionDesc\r\n            questionAreaType\r\n            questionOrder\r\n            questionScreenNo\r\n            questionMode\r\n            questionOptionMastersByQuestionId(orderBy: QUESTION_OPTION_ORDER_ASC) {\r\n            totalCount\r\n            nodes {\r\n                questionOptionId\r\n                questionOptionDesc\r\n                questionOptionOrder\r\n            }\r\n            }\r\n        }\r\n        }\r\n    }  \r\n`;\r\n\r\n// Query Variables\r\n/*\r\n{\r\n  \"areaType\": \"CHEF_REGISTER\"\r\n}\r\n*/","export const allCertificateTypeMastersGQLTAG = `query allCertificateTypeMasters {\r\n    allCertificateTypeMasters(orderBy: CREATED_AT_DESC) {\r\n      totalCount\r\n      nodes {\r\n        certificateTypeId\r\n        certificateTypeName\r\n        certificateTypeDesc\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n  `","export const allAdditionalServiceTypeMastersGQLTAG = `query allAdditionalServiceTypeMasters {\r\n  allAdditionalServiceTypeMasters(\r\n    filter: { statusId: { eq: \"APPROVED\" } }\r\n    orderBy: CREATED_AT_DESC\r\n  ) {\r\n    totalCount\r\n    nodes {\r\n      additionalServiceTypeId\r\n      additionalServiceTypeName\r\n      additionalServiceTypeDesc\r\n      statusId\r\n      createdAt\r\n    }\r\n  }\r\n}`","export const allAdditionalServiceTypeMastersByStatusGQLTAG = `query allAdditionalServiceTypeMasters($statusId: String!) {\r\n    allAdditionalServiceTypeMasters(\r\n      filter: { statusId: { eq: $statusId } }\r\n      orderBy: CREATED_AT_DESC\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        additionalServiceTypeId\r\n        additionalServiceTypeName\r\n        additionalServiceTypeDesc\r\n        createdAt\r\n      }\r\n    }\r\n  }`","export const storeTypeGQLTAG = `query allStoreTypeMasters {\r\n    allStoreTypeMasters(orderBy: STORE_TYPE_NAME_ASC) {\r\n      nodes {\r\n        storeTypeId\r\n        storeTypeName\r\n        storeTypeDesc\r\n      }\r\n    }\r\n  }`;\r\n\r\n// Query Variables\r\n/*\r\n{\r\n  \"areaType\": \"CHEF_REGISTER\"\r\n}\r\n*/","export const paymentByCustomerIdGQLTAG = `query allPaymentHistories(\r\n  $paymentDoneByCustomerId: String!\r\n  $first: Int\r\n  $offset: Int\r\n) {\r\n  allPaymentHistories(\r\n    orderBy: CREATED_AT_DESC\r\n    first: $first\r\n    offset: $offset\r\n    filter: { paymentDoneByCustomerId: { eq: $paymentDoneByCustomerId } }\r\n  ) {\r\n    nodes {\r\n      paymentHistId\r\n      bookingHistId\r\n      paymentId\r\n      paymentStripeCustomerId\r\n      paymentCardId\r\n      paymentOrderId\r\n      paymentType\r\n      bookingHistId\r\n      paymentTransactionId\r\n      paymentStatusId\r\n      paymentMethod\r\n      paymentActualAmount\r\n      paymentTotalAmountUnit\r\n      paymentReceiptUrl\r\n      paymentDoneByCustomerId\r\n      paymentDoneForChefId\r\n      paymentOriginalPriceValueFormat\r\n      paymentOriginalPriceUnitFormat\r\n      createdAt\r\n      chefBookingHistoryByBookingHistId {\r\n        chefBookingHistId\r\n        chefBookingFromTime\r\n        chefBookingToTime\r\n        chefBookingStatusId\r\n        paymentHistId\r\n        chefBookingPriceValue\r\n        chefBookingPriceUnit\r\n        chefBookingServiceChargePriceValue\r\n        chefBookingServiceChargePriceUnit\r\n        chefBookingCommissionPriceValue\r\n        chefBookingCommissionPriceUnit\r\n        chefBookingTotalPriceValue\r\n        chefBookingTotalPriceUnit\r\n      }\r\n      customerProfileByPaymentDoneByCustomerId {\r\n        customerId\r\n        fullName\r\n        customerPicId\r\n      }\r\n      chefProfileByPaymentDoneForChefId {\r\n        chefId\r\n        fullName\r\n        chefPicId\r\n        chefProfileExtendedsByChefId {\r\n          nodes {\r\n            chefLocationAddress\r\n            chefCity\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n/*\r\n{\r\n  \"paymentDoneByCustomerId\": \"\",\r\n  \"first\": 1,\r\n  \"offset\": 2\r\n}\r\n*/\r\n","export const paymentByChefIdGQLTAG = `query allBankTransferHistories($chefId: String!, $first: Int, $offset: Int) {\r\n  allBankTransferHistories(\r\n    orderBy:CREATED_AT_DESC\r\n    first: $first\r\n    offset: $offset\r\n    filter: { chefId: { eq: $chefId } }\r\n  ) {\r\n    nodes {\r\n      bankTransferHistId\r\n      bankTransferAmt\r\n      bankTransferAmtCurrency\r\n      bookingHistId\r\n      adminId\r\n      chefId\r\n      chefStripeUserId\r\n      createdAt\r\n      customerDetails {\r\n        totalCount\r\n        nodes {\r\n          customerId\r\n          fullName\r\n          customerPicId\r\n          customerProfileExtendedsByCustomerId{\r\n            nodes{\r\n              customerLocationAddress\r\n            }\r\n          }\r\n        }\r\n      }\r\n      chefBookingHistoryByBookingHistId {\r\n        chefBookingHistId\r\n        chefBookingFromTime\r\n        chefBookingToTime\r\n        chefBookingStatusId\r\n        paymentHistId\r\n        chefBookingPriceValue\r\n        chefBookingPriceUnit\r\n        chefBookingServiceChargePriceValue\r\n        chefBookingServiceChargePriceUnit\r\n        chefBookingCommissionPriceValue\r\n        chefBookingCommissionPriceUnit\r\n        chefBookingTotalPriceValue\r\n        chefBookingTotalPriceUnit\r\n        chefProfileByChefId {\r\n          fullName\r\n          chefPicId\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n/*{\r\n  \"chefId\": \"\",\r\n  \"first\": 1,\r\n  \"offset\": 2\r\n}*/\r\n","export const filterByChefIdGQLTAG =`query allNotificationHistories($chefId: String!, $first: Int!, $offset: Int!) {\r\n  allNotificationHistories(\r\n    first: $first\r\n    offset: $offset\r\n\torderBy:CREATED_AT_DESC\r\n    filter: {\r\n      chefId: { eq: $chefId }\r\n      notificationStatusId: { nin: [\"DISMISSED\"] }\r\n      notificationAreaType: {\r\n        in: [\r\n          \"CUSTOMER_REQUESTED_BOOKING\",\r\n          \"CHEF_ACCEPTED_BOOKING\",\r\n          \"CHEF_REJECTED_BOOKING\",\r\n          \"CHEF_CANCELLED_BOOKING\",\r\n          \"CUSTOMER_CANCELLED_BOOKING\",\r\n          \"CHEF_COMPLETED_BOOKING\",\r\n          \"CHEF_REQUESTED_BOOKING_AMOUNT\",\r\n          \"CUSTOMER_REFUND_AMOUNT_SUCCESS\",\r\n          \"CUSTOMER_REFUND_AMOUNT_FAILED\",\r\n          \"CHEF_AMOUNT_TRANSFER_SUCCESS\",\r\n          \"CHEF_AMOUNT_TRANSFER_FAILED\",\r\n          \"NEW_MESSAGE\"\r\n        ]\r\n      }\r\n    }\r\n  ) {\r\n    totalCount\r\n    nodes {\r\n      notificationHistId\r\n      notificationAreaType\r\n      notificationTitle\r\n      notificationSubTitle\r\n      notificationDescription\r\n      notificationStatusId\r\n      createdAt\r\n      notificationDetails\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\n/*\r\n{\r\n  \"chefId\": \"\",\r\n  \"offset\":0,\r\n  \"first\":2\r\n}\r\n*/","export const filterByCustomerIdGQLTAG = `query allNotificationHistories(\r\n  $customerId: String!\r\n  $first: Int!\r\n  $offset: Int!\r\n) {\r\n  allNotificationHistories(\r\n    first: $first\r\n    offset: $offset\r\n\torderBy:CREATED_AT_DESC\r\n    filter: {\r\n      customerId: { eq: $customerId }\r\n      notificationStatusId: { nin: [\"DISMISSED\"] }\r\n      notificationAreaType: {\r\n        in: [\r\n          \"CUSTOMER_REQUESTED_BOOKING\",\r\n          \"CHEF_ACCEPTED_BOOKING\",\r\n          \"CHEF_REJECTED_BOOKING\",\r\n          \"CHEF_CANCELLED_BOOKING\",\r\n          \"CUSTOMER_CANCELLED_BOOKING\",\r\n          \"CHEF_COMPLETED_BOOKING\",\r\n          \"CHEF_REQUESTED_BOOKING_AMOUNT\",\r\n          \"CUSTOMER_REFUND_AMOUNT_SUCCESS\",\r\n          \"CUSTOMER_REFUND_AMOUNT_FAILED\",\r\n          \"CHEF_AMOUNT_TRANSFER_SUCCESS\",\r\n          \"CHEF_AMOUNT_TRANSFER_FAILED\",\r\n          \"NEW_MESSAGE\"\r\n        ]\r\n      }\r\n    }\r\n  ) {\r\n    totalCount\r\n    nodes {\r\n      notificationHistId\r\n      notificationAreaType\r\n      notificationTitle\r\n      notificationSubTitle\r\n      notificationDescription\r\n      notificationStatusId\r\n      createdAt\r\n      notificationDetails\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\n/*\r\n{\r\n  \"customerId\": \"\",\r\n  \"offset\":0,\r\n  \"first\":2\r\n}\r\n*/","export const filterByAdminIdGQLTAG =`\r\nquery allNotificationHistories($adminId: String!) {\r\n    allNotificationHistories(filter: { \r\n        adminId: { eq: $adminId } \r\n        notificationStatusId: { nin: [\"DISMISSED\"] }\r\n        notificationAreaType: {\r\n          in: [\r\n            \"CUSTOMER_REQUESTED_BOOKING\"\r\n            \"CHEF_ACCEPTED_BOOKING\"\r\n            \"CHEF_REJECTED_BOOKING\"\r\n            \"CHEF_CANCELLED_BOOKING\"\r\n            \"CUSTOMER_CANCELLED_BOOKING\"\r\n            \"CHEF_COMPLETED_BOOKING\"\r\n            \"NEW_MESSAGE\"\r\n          ]\r\n        }\r\n      }) {\r\n        totalCount\r\n        nodes {\r\n        notificationHistId\r\n        notificationAreaType\r\n        notificationTitle\r\n        notificationSubTitle\r\n        notificationDescription\r\n        notificationStatusId\r\n        createdAt\r\n        notificationDetails\r\n      }\r\n    }\r\n  }  \r\n`;\r\n\r\n/*\r\n{\r\n  \"adminId\": \"\"\r\n}\r\n*/","export function listWithFiltersGQLTAG(params) {\r\n\r\n  let filterParams = ``;\r\n  let offsetParams = ``;\r\n  let orderByParams = ``;\r\n  let firstParams = ``;\r\n\r\n  let filterStr = ``;\r\n\r\n  // Check if time is passed\r\n  if (params.hasOwnProperty('fromTime') && params.hasOwnProperty('toTime')) {\r\n    if (params.fromTime != null && params.toTime != null) {\r\n      filterStr = filterStr + `\r\n        createdAt: { gte: \"${params.fromTime}\", lte: \"${params.toTime}\" }\r\n      `;\r\n    }\r\n  }\r\n\r\n  // OrderBy\r\n  if (params.hasOwnProperty('orderBy')) {\r\n    orderByParams = `orderBy: ${params.orderBy}`\r\n  } else {\r\n    orderByParams = `orderBy: CREATED_AT_DESC`\r\n  }\r\n\r\n  // First\r\n  if (params.hasOwnProperty('first')) {\r\n    firstParams = `first: ${params.first}`\r\n  } else {\r\n    firstParams = `first: 10`\r\n  }\r\n\r\n  // Offset\r\n  if (params.hasOwnProperty('offset')) {\r\n    offsetParams = `offset: ${params.offset}`\r\n  } else {\r\n    offsetParams = `offset: 0`\r\n  }\r\n\r\n  if (filterStr !== '') {\r\n    filterParams = `filter: { \r\n        ${filterStr} \r\n      }`\r\n  }\r\n\r\n  let gqlStr = `query allReviewHistories {\r\n      allReviewHistories(\r\n        ${filterParams}\r\n        ${orderByParams}\r\n        ${firstParams}\r\n        ${offsetParams}\r\n      ) {\r\n        totalCount\r\n        nodes {\r\n          reviewHistId\r\n          chefId\r\n          customerId\r\n          reviewDesc\r\n          reviewPoint\r\n          reviewStatusId\r\n          createdAt\r\n          isReviewedByChefYn\r\n          isReviewedByCustomerYn\r\n          customerProfileByCustomerId {\r\n            customerPicId\r\n            fullName\r\n          }\r\n          chefProfileByChefId {\r\n            chefPicId\r\n            fullName\r\n          }\r\n        }\r\n      }\r\n    }\r\n    `;\r\n\r\n  return gqlStr;\r\n\r\n}\r\n/*\r\n {\r\n  \"pFromTime\":  \"2019-09-20 10:47:51.319025\",\r\n  \"pToTime\": \"2019-09-25 10:47:51.319025\",\r\n  \"offset\": 0,\r\n  \"first\": 3\r\n}\r\n */","export const byIdGQLTAG = `query reviewHistoryByReviewHistId($reviewHistId: String!) {\r\n    reviewHistoryByReviewHistId(reviewHistId: $reviewHistId) {\r\n      reviewPoint\r\n      reviewDesc\r\n      chefId\r\n      customerId\r\n      isReviewedByChefYn\r\n      isReviewedByCustomerYn\r\n      createdAt\r\n      chefProfileByChefId {\r\n        chefId\r\n        fullName\r\n      }\r\n      customerProfileByCustomerId {\r\n        customerId\r\n        fullName\r\n      }\r\n    }\r\n  }  \r\n  `\r\n\r\n  /*\r\n  {\r\n  \"reviewHistId\":\"8a54e861-be7e-407d-8611-c88d1361936c\"\r\n}\r\n */","export const filterMgmtByAdminIdGQLTAG = `query allCommissionManagementHistories(\r\n  $offset: Int!\r\n  $first: Int!\r\n) {\r\n  allCommissionManagementHistories(\r\n    offset: $offset\r\n    first: $first\r\n    orderBy:CREATED_AT_DESC\r\n    \r\n  ) {\r\n    totalCount\r\n    nodes {\r\n      commissionManagementHistId\r\n      commissionValue\r\n      commissionUnit\r\n      adminId\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n\r\n  `\r\n\r\n  /* {\r\n  \"offset\":0,\r\n  \"first\":2\r\n} */","export function filterEarnedHistByAdminIdGQLTAG(params) {\r\n\r\n  let filterParams = ``;\r\n  let offsetParams = ``;\r\n  let orderByParams = ``;\r\n  let firstParams = ``;\r\n\r\n  let filterStr = ``;\r\n\r\n  // Check if time is passed\r\n  if (params.hasOwnProperty('pFromTime') && params.hasOwnProperty('pToTime')) {\r\n    if (params.pFromTime != null && params.pToTime != null) {\r\n      filterStr = filterStr + `\r\n        createdAt: { gte: \"${params.pFromTime}\", lte: \"${params.pToTime}\" }\r\n      `;\r\n    }\r\n  }\r\n\r\n  // OrderBy\r\n  if (params.hasOwnProperty('orderBy')) {\r\n    orderByParams = `orderBy: ${params.orderBy}`\r\n  } else {\r\n    orderByParams = `orderBy: CREATED_AT_DESC`\r\n  }\r\n\r\n  // First\r\n  if (params.hasOwnProperty('first')) {\r\n    firstParams = `first: ${params.first}`\r\n  } else {\r\n    firstParams = `first: 10`\r\n  }\r\n\r\n  // Offset\r\n  if (params.hasOwnProperty('offset')) {\r\n    offsetParams = `offset: ${params.offset}`\r\n  } else {\r\n    offsetParams = `offset: 0`\r\n  }\r\n\r\n  if (filterStr !== '') {\r\n    filterParams = `filter: { \r\n        ${filterStr} \r\n      }`\r\n  }\r\n\r\n  let gqlStr =`query allCommissionEarnedHistories{\r\n    allCommissionEarnedHistories(\r\n      ${filterParams}\r\n      ${orderByParams}\r\n      ${firstParams}\r\n      ${offsetParams}\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        adminId\r\n        commissionEarnedValue\r\n        commissionEarnedUnit\r\n        createdAt\r\n      }\r\n    }\r\n  }`;\r\n  return gqlStr;\r\n}\r\n  /*\r\n  {\r\n    \"adminId\": \"4c425664-79e6-46d6-867f-1c4f4b9932c7\",\r\n    \"pFromTime\":\"2019-09-01 00:00:00\"\r\n    \"pToTime\":\"2019-09-30 23:59:59\"\r\n  } */","export const customerDetailsGQLTAG = `query stripeGetCustomerDetails($customerId: String!) {\r\n    stripeGetCustomerDetails(customerId: $customerId) {\r\n      data\r\n    }\r\n  }`;\r\n\r\n\r\n/*\r\n{\r\n  \"customerId\":\"cus_FsE3cd7FxvBhKt\"\r\n}\r\n*/","export const cardDetailsGQLTAG = `query stripeGetCardDetails($customerId: String!, $cardId: String!) {\r\n    stripeGetCardDetails(customerId: $customerId, cardId: $cardId) {\r\n      data\r\n    }\r\n  }`;\r\n\r\n\r\n/*\r\n  {\r\n  \"customerId\":\"cus_FsE3cd7FxvBhKt\",\r\n  \"cardId\": \"card_1FMTcMAZeKBPGDhHQosbdITs\"\r\n}\r\n*/","export const customerCardsGQLTAG = `query stripeGetCustomerCards(\r\n    $customerId: String!\r\n    $limit: Int!\r\n  ) {\r\n    stripeGetCustomerCards(\r\n      customerId: $customerId\r\n      limit: $limit\r\n    ) {\r\n      data\r\n    }\r\n  }`;\r\n\r\n\r\n/*\r\n{\r\n  \"customerId\":\"cus_FsE3cd7FxvBhKt\",\r\n  \"limit\": 10\r\n}\r\n*/","export const accountDetailsGQLTAG = `query stripeGetAccountDetails($accountId:String!){\r\n    stripeGetAccountDetails(accountId:$accountId){\r\n      data\r\n    }\r\n  }`\r\n\r\n  /*\r\n  {\r\n\"accountId\":\"acct_1FZH0CEGlttdcTZk\"\r\n} */","export const accountDetailsByChefIdGQLTAG = `query stripeGetChefAccounts($chefId: String!) {\r\n    stripeGetChefAccounts(chefId: $chefId) {\r\n      data\r\n    }\r\n  }`\r\n\r\n\r\n  /*{\r\n  \"chefId\": \"\"\r\n}\r\n */","export const byIdGQLTAG = `query feedbackHistoryByFeedbackHistId($feedbackHistId: String!) {\r\n    feedbackHistoryByFeedbackHistId(feedbackHistId: $feedbackHistId) {\r\n      chefId\r\n      customerId\r\n      feedbackDesc\r\n      feedbackGivenByChefYn\r\n      feedbackGivenByCustomerYn\r\n      createdAt\r\n      chefProfileByChefId {\r\n        chefPicId\r\n        fullName\r\n      }\r\n      customerProfileByCustomerId {\r\n        customerPicId\r\n        fullName\r\n      }\r\n    }\r\n  }\r\n  `\r\n  \r\n  /*\r\n  {\r\n  \"feedbackHistId\": \"8b85eef6-fb97-489e-930b-fbf94f73ccca\"\r\n} */","export const listWithFiltersGQLTAG = `query allFeedbackHistories(\r\n    $pFromTime: Datetime!\r\n    $pToTime: Datetime!\r\n    $offset: Int!\r\n    $first: Int!\r\n  ) {\r\n    allFeedbackHistories(\r\n      offset: $offset\r\n      first: $first\r\n      orderBy: CREATED_AT_DESC\r\n      filter: { createdAt: { gte: $pFromTime, lte: $pToTime } }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        feedbackHistId\r\n        chefId\r\n        customerId\r\n        feedbackDesc\r\n        feedbackGivenByChefYn\r\n        feedbackGivenByCustomerYn\r\n        createdAt\r\n        chefProfileByChefId {\r\n          chefPicId\r\n          fullName\r\n        }\r\n        customerProfileByCustomerId {\r\n          customerPicId\r\n          fullName\r\n        }\r\n      }\r\n    }\r\n  }`\r\n  \r\n  \r\n/*{\r\n  \"pFromTime\": \"2019-09-20 10:47:51.319025\",\r\n  \"pToTime\": \"2019-09-25 10:47:51.319025\",\r\n  \"offset\": 0,\r\n  \"first\": 3\r\n} */","  export const profileByIdGQLTAG = `query adminProfileByAdminId(\r\n    $adminId: String!\r\n    $pFromTime: Datetime\r\n    $pToTime: Datetime\r\n  ) {\r\n    adminProfileByAdminId(adminId: $adminId) {\r\n      adminId\r\n      adminSalutation\r\n      adminFirstName\r\n      adminLastName\r\n      adminMobileNumber\r\n      adminMobileCountryCode\r\n      mobileNoWithCountryCode\r\n      commissionEarnedHisStartDate\r\n      fullName\r\n      latestCommissionValue\r\n      adminDob\r\n      adminGender\r\n      adminPicId\r\n      adminEmail\r\n      adminMobileNumber\r\n      adminRoleTypeIds\r\n      adminStatusId\r\n      entityId\r\n      createdAt\r\n      totalCommissionEarned(pFromTime: $pFromTime, pToTime: $pToTime)\r\n    }\r\n  }  \r\n  `;\r\n  \r\n  // Query Variables\r\n  /*\r\n  {\r\n    \"adminId\": \"4c425664-79e6-46d6-867f-1c4f4b9932c7\",\r\n    \"pFromTime\":\"2019-09-01 00:00:00\"\r\n    \"pToTime\":\"2019-09-30 23:59:59\"\r\n  }\r\n  */","export const searchGQLTAG = ` query search($pSearchStr: String!) {\r\n    filterChefBySearchStr(pSearchStr: $pSearchStr) {\r\n      totalCount\r\n      nodes {\r\n        chefId\r\n        fullName\r\n        averageRating\r\n        totalReviewCount\r\n        chefGender\r\n        chefPicId\r\n        chefEmail\r\n        chefMobileNumber\r\n        chefSno\r\n        chefStatusId\r\n        cuisineTypeId\r\n        cuisineTypeDesc\r\n        dishTypeId\r\n        dishTypeDesc\r\n        createdAt\r\n        chefProfileExtendedsByChefId {\r\n          totalCount\r\n          nodes {\r\n            chefProfileExtendedId\r\n            chefExperience\r\n            chefDesc\r\n            chefDrivingLicenseNo\r\n            chefFacebookUrl\r\n            chefTwitterUrl\r\n            chefLocationAddress\r\n            chefLocationLat\r\n            chefLocationLng\r\n            chefAddrLine1\r\n            chefAddrLine2\r\n            chefState\r\n            chefCountry\r\n            chefCity\r\n            isCookingItemsNeededYn\r\n            chefPricePerHour\r\n            chefPriceUnit\r\n            chefAvailableAroundRadiusInValue\r\n            chefAvailableAroundRadiusInUnit\r\n            chefBusinessHoursFromTime\r\n            chefBusinessHoursToTime\r\n            chefStripeCustomerId\r\n          }\r\n        }\r\n        statusTypeMasterByChefStatusId {\r\n          statusTypeName\r\n        }\r\n      }\r\n    }\r\n    filterCustomerBySearchStr(pSearchStr: $pSearchStr) {\r\n      totalCount\r\n      nodes {\r\n        customerId\r\n        fullName\r\n        customerGender\r\n        customerEmail\r\n        customerMobileNumber\r\n        customerStatusId\r\n        customerPicId\r\n        createdAt\r\n        statusTypeMasterByCustomerStatusId {\r\n          statusTypeName\r\n        }\r\n        customerProfileExtendedsByCustomerId {\r\n          nodes {\r\n            customerProfileExtendedId\r\n            customerLocationAddress\r\n            customerLocationLat\r\n            customerLocationLng\r\n            customerAddrLine1\r\n            customerAddrLine2\r\n            customerState\r\n            customerCountry\r\n            customerCity\r\n            createdAt\r\n            customerStripeCustomerId\r\n            customerId\r\n            customerPostalCode\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n`;\r\n\r\n/*\r\n{\r\n  \"pSearchStr\": \"Naaziya\"\r\n}\r\n*/","export const checkUserAdminGQLTAG = `query checkUserIsAdmin($pAdminEmail: String!) {\r\n    checkUserIsAdmin(pEmail: $pAdminEmail)\r\n  }\r\n  `\r\n\r\n  /*{\r\n  \"pAdminEmail\": \"surendran@neosme.com\"\r\n} */","export const getSettingValueGQLTAG = `query getSettingValue($pSettingName: String!) {\r\n    getSettingValue(pSettingName: $pSettingName)\r\n  }\r\n  `\r\n\r\n  /*\r\n   {\r\n  \"pSettingName\": \"NO_OF_MINUTES_FOR_BOOKING_CANCEL\"\r\n}\r\n   */","export const conversationMessagesGQLTAG = `query allMessageHistories($conversationHistId: String! $first:Int! $offset:Int!) {\r\n  allMessageHistories(\r\n    first:$first\r\n    offset:$offset\r\n    orderBy: CREATED_AT_DESC\r\n    filter: { conversationHistId: { eq: $conversationHistId } }\r\n  ) {\r\n    nodes {\r\n      messageHistoryId\r\n      fromEntityId\r\n      conversationHistId\r\n      msgText\r\n      fromEntityDetails\r\n      createdAt\r\n    }\r\n  }\r\n}`\r\n\r\n// Query Variables\r\n/*\r\n{\r\n  \"conversationHistId\": \"a6666772-ff7b-41a0-91e8-75ea3d7c5aef\"\r\n}\r\n*/","export const getConversationListGQLTAG = `query getConversationList($pEntityId: String!, $first: Int!, $offset: Int!) {\r\n  getConversationList(pEntityId: $pEntityId, first: $first, offset: $offset) {\r\n    nodes {\r\n      conversationId\r\n      conversationName\r\n      conversationPic\r\n      conversationRefTableName\r\n      conversationRefTablePkId\r\n      conversationDate\r\n      conversationLastMessage\r\n      conversationLastMessageTimestamp\r\n      conversationDetails\r\n    }\r\n  }\r\n}`\r\n\r\n  /*\r\n  {\r\n  \"pEntityId\": \"\",\r\n  \"first\": 0,\r\n  \"offset\":1\r\n} */","export const ssoChefAuthtenticateGQLTAG = `mutation ssoAuthenticateChef(\r\n    $pEmail: String!\r\n    $pSsoUid: String!\r\n    $pSsoType: String!\r\n    $pType: String!\r\n    $pFirstName: String\r\n    $pLastName: String\r\n  ) {\r\n    ssoAuthenticateChef(\r\n      input: {\r\n        pEmail: $pEmail\r\n        pSsoUid: $pSsoUid\r\n        pSsoType: $pSsoType\r\n        pType: $pType\r\n        pFirstName: $pFirstName\r\n        pLastName: $pLastName\r\n      }\r\n    ) {\r\n      chefProfile {\r\n        chefId\r\n        fullName\r\n        chefEmail\r\n        chefStatusId\r\n        chefProfileExtendedsByChefId{\r\n          totalCount\r\n          nodes{\r\n            chefProfileExtendedId\r\n          }\r\n        }\r\n        chefSpecializationProfilesByChefId{\r\n          totalCount\r\n          nodes{\r\n            chefSpecializationId\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `;\r\n\r\n/*\r\n{\r\n  \"pEmail\": \"naa@gmail.com\",\r\n  \"pSsoUid\": \"111\",\r\n  \"pSsoType\": \"GOOGLE\" ,\r\n  \"pType\": \"REGISTER\",\r\n  \"pFirstName\": null,\r\n  \"pLastName\": null\r\n}\r\n*/\r\n","export const ssoCustomerAuthtenticateGQLTAG = `mutation ssoAuthenticateCustomer(\r\n    $pEmail: String!\r\n    $pSsoUid: String!\r\n    $pSsoType: String!\r\n    $pType: String!\r\n    $pFirstName: String\r\n    $pLastName: String\r\n  ) {\r\n    ssoAuthenticateCustomer(\r\n      input: {\r\n        pEmail: $pEmail\r\n        pSsoUid: $pSsoUid\r\n        pSsoType: $pSsoType\r\n        pType: $pType\r\n        pFirstName: $pFirstName\r\n        pLastName: $pLastName\r\n      }\r\n    ) {\r\n      customerProfile{\r\n        customerId\r\n        fullName\r\n        customerEmail\r\n        customerStatusId\r\n        customerProfileExtendedsByCustomerId{\r\n          nodes{\r\n            customerProfileExtendedId\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }  \r\n  `;\r\n\r\n/*\r\n{\r\n  \"pEmail\": \"naa@gmail.com\",\r\n  \"pSsoUid\": \"111\",\r\n  \"pSsoType\": \"GOOGLE\" ,\r\n  \"pType\": \"REGISTER\",\r\n  \"pFirstName\": null,\r\n  \"pLastName\": null\r\n}\r\n*/\r\n","export const authtenticateGQLTAG = `mutation authenticate(\r\n    $token: String!\r\n    $roleType: String!\r\n    $authenticateType: String!\r\n    $extra: JSON\r\n  ) {\r\n    authenticate(\r\n      token: $token\r\n      roleType: $roleType\r\n      authenticateType: $authenticateType\r\n      extra: $extra\r\n    ) {\r\n      data\r\n    }\r\n  }\r\n  \r\n  `;\r\n\r\n/*\r\n{\r\n  \"token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjI5NGNlMzNhNWQ3MmI0NjYyNzI3ZGFiYmRhNzVjZjg4Y2Y5OTg4MGUiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiU3Jpbml2YXNhbiBTZWx2YXJhaiIsInBpY3R1cmUiOiJodHRwczovL2xoNC5nb29nbGV1c2VyY29udGVudC5jb20vLVo0b3M2bkpGeEc4L0FBQUFBQUFBQUFJL0FBQUFBQUFBQUFBL0FDSGkzcmM5QWtGejl5Y1hFMDBPaS1YdENpeUdJVVdNX1Evczk2LWMvcGhvdG8uanBnIiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL3JvY2tvbHktZGV2IiwiYXVkIjoicm9ja29seS1kZXYiLCJhdXRoX3RpbWUiOjE1Njk5MzE5MzgsInVzZXJfaWQiOiJXVmZuUmNpYmZOZHgwNnFpb0swMFoyMlhEQTgzIiwic3ViIjoiV1ZmblJjaWJmTmR4MDZxaW9LMDBaMjJYREE4MyIsImlhdCI6MTU2OTkzMTkzOCwiZXhwIjoxNTY5OTM1NTM4LCJlbWFpbCI6InNyaW5pdmFzYW5AbmVvc21lLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJmaXJlYmFzZSI6eyJpZGVudGl0aWVzIjp7Imdvb2dsZS5jb20iOlsiMTE0MTQ3ODM5NTgzODg1MjExNjc2Il0sImVtYWlsIjpbInNyaW5pdmFzYW5AbmVvc21lLmNvbSJdfSwic2lnbl9pbl9wcm92aWRlciI6Imdvb2dsZS5jb20ifX0.k37-73tqLnN1167zTFor3q_NjOw4vBxa9WSe4HqUTRMr_uCCtntdQgKaswd4anHhTrXETO09NMoVJS5pdZhLwgdG3tegloTWER8C0bo5G8dwY0ym7a1DCLRdBjP_W527dDOlxQ-fD45rUVU8L1-fW9f-rmV93hZ4BiVC0aoMHhAnaHJb25tq95NTdunnVhDWsmdspoZ0iNamv6xnxtH4xevYm2FNkP3aXP6AcjngvsPY-xYhjOwQp1uFFFWtdO_ibs0gvRmLImiV6Zi5eJQMwoTpRIToG1buyEaMavxmHOYlqHubqItBKWXC9DVOowXnR4xJiovz0z8OmtCV9tlOhg\",\r\n  \"roleType\": \"CHEF/CUSTOMER/ADMIN\",\r\n  \"authenticateType\": \"LOGIN/REGISTER\",\r\n  \"extra\":null\r\n}\r\n*/\r\n","export const switchRoleGQLTAG = `mutation switchUserByRole(\r\n    $pEmail: String\r\n    $pSwitchFrom: String!\r\n    $pSwitchTo: String!\r\n  ) {\r\n    switchUserByRole(\r\n      input: { pEmail: $pEmail, pSwitchFrom: $pSwitchFrom, pSwitchTo: $pSwitchTo }\r\n    ) {\r\n      json\r\n    }\r\n  }`\r\n\r\n  /*\r\n    {\r\n  \"pEmail\": \"\",\r\n  \"pSwitchFrom\": \"CHEF / CUSTOMER\",\r\n  \"pSwitchTo\":  \"CHEF / CUSTOMER\"\r\n} */","export const updateGQLTAG = `mutation updateChefBookingHistoryByChefBookingHistId(\r\n    $chefBookingHistId: String!\r\n    $chefBookingStatusId: String\r\n    $chefBookingCompletedByCustomerYn: Boolean\r\n    $chefBookingCompletedByChefYn: Boolean\r\n    $chefBookingChefRejectOrCancelReason: String\r\n    $chefBookingCustomerRejectOrCancelReason: String\r\n  ) {\r\n    updateChefBookingHistoryByChefBookingHistId(\r\n      input: {\r\n        chefBookingHistId: $chefBookingHistId\r\n        chefBookingHistoryPatch: {\r\n          chefBookingStatusId: $chefBookingStatusId\r\n          chefBookingCompletedByCustomerYn: $chefBookingCompletedByCustomerYn\r\n          chefBookingCompletedByChefYn: $chefBookingCompletedByChefYn\r\n          chefBookingChefRejectOrCancelReason: $chefBookingChefRejectOrCancelReason\r\n          chefBookingCustomerRejectOrCancelReason: $chefBookingCustomerRejectOrCancelReason\r\n        }\r\n      }\r\n    ) {\r\n      chefBookingHistory {\r\n        chefBookingHistId\r\n        chefId\r\n        customerId\r\n        chefBookingFromTime\r\n        chefBookingToTime\r\n        chefBookingPriceValue\r\n        chefBookingPriceUnit\r\n        chefBookingStatusId\r\n        chefBookingCompletedByCustomerYn\r\n        chefBookingCompletedByChefYn\r\n        chefBookingChefRejectOrCancelReason\r\n        chefBookingCustomerRejectOrCancelReason\r\n        createdAt\r\n      }\r\n    }\r\n  }`;\r\n\r\n/*\r\n{\r\n  \"chefBookingHistId\": \"\",\r\n  \"chefBookingStatusId\": \"CHEF_ACCEPTED / CHEF_REJECTED / CANCELLED_BY_CHEF / CANCELLED_BY_CUSTOMER  \",\r\n  \"chefBookingCompletedByCustomerYn\":false (if customer mark as completed , then make it true),\r\n  \"chefBookingCompletedByChefYn\":false  (if chef mark as completed , then make it true),\r\n  \"chefBookingChefRejectOrCancelReason\":\"\",\r\n  \"chefBookingCustomerRejectOrCancelReason\":\"\"\r\n}\r\n*/","export const createGQLTAG = `mutation createBooking(\r\n  $stripeCustomerId: String!\r\n  $cardId: String!\r\n  $chefId: String!\r\n  $customerId: String!\r\n  $fromTime: String!\r\n  $toTime: String!\r\n  $summary: String\r\n  $allergyTypeIds: [String]\r\n  $otherAllergyTypes: JSON\r\n  $dietaryRestrictionsTypesIds: [String]\r\n  $otherDietaryRestrictionsTypes: JSON\r\n  $kitchenEquipmentTypeIds: [String]\r\n  $otherKitchenEquipmentTypes: JSON\r\n  $storeTypeIds: [String]\r\n  $otherStoreTypes: JSON\r\n  $noOfGuests: Int\r\n  $complexity: Float\r\n  $additionalServices: [additionalServicesType]\r\n  $notes: String\r\n  $dishTypeId: [String]\r\n  $locationAddress: String\r\n  $locationLat: String\r\n  $locationLng: String\r\n  $addrLine1: String\r\n  $addrLine2: String\r\n  $state: String\r\n  $country: String\r\n  $city: String\r\n  $postalCode: String\r\n) {\r\n  createBooking(\r\n    stripeCustomerId: $stripeCustomerId\r\n    cardId: $cardId\r\n    chefId: $chefId\r\n    customerId: $customerId\r\n    fromTime: $fromTime\r\n    toTime: $toTime\r\n    notes: $notes\r\n    dishTypeId: $dishTypeId\r\n    summary: $summary\r\n    allergyTypeIds: $allergyTypeIds\r\n    otherAllergyTypes: $otherAllergyTypes\r\n    dietaryRestrictionsTypesIds: $dietaryRestrictionsTypesIds\r\n    otherDietaryRestrictionsTypes: $otherDietaryRestrictionsTypes\r\n    kitchenEquipmentTypeIds: $kitchenEquipmentTypeIds\r\n    otherKitchenEquipmentTypes: $otherKitchenEquipmentTypes\r\n    storeTypeIds: $storeTypeIds\r\n    otherStoreTypes: $otherStoreTypes\r\n    noOfGuests: $noOfGuests\r\n    complexity: $complexity\r\n    additionalServices: $additionalServices\r\n    locationAddress: $locationAddress\r\n    locationLat: $locationLat\r\n    locationLng: $locationLng\r\n    addrLine1: $addrLine1\r\n    addrLine2: $addrLine2\r\n    state: $state\r\n    country: $country\r\n    city: $city\r\n    postalCode: $postalCode\r\n  ) {\r\n    data\r\n  }\r\n}\r\n`\r\n\r\n\r\n/*\r\n{\r\n  \"stripeCustomerId\":\"cus_G81Ncl2ZEC44Tb\",\r\n  \"cardId\":\"card_1FgmUzAZeKBPGDhHUBSA3afr\",\r\n  \"chefId\":\"9f749de7-dbc7-47f4-92d3-9c013e1788cf\",\r\n  \"customerId\":\"115be931-9b10-4982-acf1-b13d4a8a9b34\",\r\n  \"fromTime\":\"2019-11-10 11:00:00\",\r\n  \"toTime\":\"2019-11-10 12:00:00\",\r\n  \"notes\":null,\r\n  \"dishTypeId\": null,\r\n  \"summary\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\r\n  \"allergyTypeIds\": [\"WHEAT                               \",\"EGGS                                \"],\r\n  \"otherAllergyTypes\": \"tomato,potato,rice\",\r\n  \"dietaryRestrictionsTypesIds\": [\"PEANUT_ALLERGIES                    \",\"DIABETIC                            \"],\r\n  \"otherDietaryRestrictionsTypes\": \"tomato,potato,rice\",\r\n  \"kitchenEquipmentTypeIds\": [\"SLOW_COOKER                         \",\"HAND_JUICER                         \"],\r\n  \"otherKitchenEquipmentTypes\": \"tomato,potato,rice\",\r\n  \"storeTypeIds\": [\"WHOLE_FOODS                         \",\"PRICE_RITE                          \"],\r\n  \"otherStoreTypes\": \"tomato,potato,rice\",\r\n  \"noOfGuests\": 3,\r\n  \"complexity\": 2,\r\n  \"additionalServices\": [{\"service\": \"CLEANING\",\"price\": 100}],\r\n  \"locationAddress\":\"\",\r\n\"locationLat\":\"\",\r\n\"locationLng\":\"\",\r\n\"addrLine1\":\"\",\r\n\"addrLine2\":\"\",\r\n\"state\":\"\",\r\n\"country\":\"\",\r\n\"city\":\"\",\r\n\"postalCode\":\"\"\r\n}\r\n*/\r\n\r\n/*PASS IN HEADERS:\r\n\r\n{\r\n  \"token\":\"eyJhbGciOiJSUzI1NiIsImtpZCI6ImEwYjQwY2NjYmQ0OWQxNmVkMjg2MGRiNzIyNmQ3NDZiNmZhZmRmYzAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcm9ja29seS1kZXYiLCJhdWQiOiJyb2Nrb2x5LWRldiIsImF1dGhfdGltZSI6MTU3MjMyNzQwNiwidXNlcl9pZCI6IldSdHZFVkZBODVmSm9KNDVHWmsxWDZ1czdjUDIiLCJzdWIiOiJXUnR2RVZGQTg1ZkpvSjQ1R1prMVg2dXM3Y1AyIiwiaWF0IjoxNTcyMzQxMTUyLCJleHAiOjE1NzIzNDQ3NTIsImVtYWlsIjoia2lydXRoaWthQG5lb3NtZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsia2lydXRoaWthQG5lb3NtZS5jb20iXX0sInNpZ25faW5fcHJvdmlkZXIiOiJwYXNzd29yZCJ9fQ.PzvFa4HIUBd5F9Tj29HIjhUeKcX-d5ARh8epwmNHq9XtoRLJKQrdAFF9cUlvMdF2P0WCWAB0Wk7qN6SO3i_A1YXRHRrXziQbjL7OEOj1pTW1icapf7WT65NLMVNmqws15_RMFnNYX31WwY80JjoA7syRQH8Oz5QGkPUjenzwRhm_n5hNVyYpFRTeQOmpHJ-xlkLh0iHMIUzB0v45ti84uE1UKnEgTkudH7Gp7N6jDJMy821a1wnSHPY3se9mXmw2_U0A4crn8nEinA7_mdKbG7oflRgY1bInk0xSZ36DMTVTaiVYYz2GcESBO3BXmvoa5FpfiKGA7FGfTsKyuPf3Ig\"\r\n}\r\n*/","export const paymentGQLTAG = `mutation bookingPayment(\r\n    $stripeCustomerId: String!\r\n    $cardId: String!\r\n    $bookingHistId: String!\r\n    $chefId: String!\r\n    $price: Float!\r\n    $currecy: String!\r\n  ) {\r\n    bookingPayment(\r\n      stripeCustomerId: $stripeCustomerId\r\n      cardId: $cardId\r\n      bookingHistId: $bookingHistId\r\n      chefId: $chefId\r\n      price: $price\r\n      currecy: $currecy\r\n    ) {\r\n      data\r\n    }\r\n  }`\r\n\r\n/*\r\n{\r\n\"stripeCustomerId\":\"cus_G81Ncl2ZEC44Tb\",\r\n\"cardId\":\"card_1FblL6AZeKBPGDhHCYi75KRV\",\r\n\"bookingHistId\": \"5b90f1ec-2fa1-4052-bf95-069b3303a25c\",\r\n\"chefId\": \"9f749de7-dbc7-47f4-92d3-9c013e1788cf\",\r\n\"price\": 10,\r\n\"currecy\": \"USD\"\r\n}\r\n*/","export const completeGQLTAG = `mutation bookingComplete(\r\n    $bookingHistId: String!\r\n    $chefId: String!\r\n    $chefStripeUserId: String!\r\n  ) {\r\n    bookingComplete(\r\n      bookingHistId: $bookingHistId\r\n      chefId: $chefId\r\n      chefStripeUserId: $chefStripeUserId\r\n    ) {\r\n      data\r\n    }\r\n  }\r\n `\r\n\r\n  /*\r\n  {\r\n    \"chefId\":\"9f749de7-dbc7-47f4-92d3-9c013e1788cf\",\r\n    \"bookingHistId\":\"c1aa25be-fca3-4b2f-834d-16a84aacf6d3\",\r\n    \"chefStripeUserId\":\"acct_1Fc5WuBotB53egdF\"\r\n  } */","export const updateBookingCancelTimeGQLTAG = `mutation updateBookingCancelTime($pSettingValue:String!\r\n    ) {\r\n      updateBookingCancelTime(\r\n        input: {\r\n          pSettingValue: $pSettingValue\r\n        }\r\n      ) {\r\n         procedureResult{\r\n          success\r\n          message\r\n          json\r\n        }\r\n      }\r\n    }`\r\n\r\n    /*{\r\n  \"pSettingValue\": \"720\"\r\n} */","export const createRequestGQLTAG = `mutation createChefBookingRequestHistory(\r\n  $bookingHistId: String!\r\n  $chefId: String!\r\n  $customerId: String!\r\n  $chefBookingRequestNoOfPeople: Int\r\n  $chefBookingRequestComplexity: Float\r\n  $chefBookingRequestAdditionalServices: JSON\r\n  $chefBookingRequestTotalPriceValue: Float\r\n  $chefBookingRequestTotalPriceUnit: String\r\n  $chefBookingRequestCommissionPriceUnit: String\r\n  $chefBookingRequestCommissionPriceValue: Float\r\n  $chefBookingRequestServiceChargePriceUnit: String\r\n  $chefBookingRequestServiceChargePriceValue: Float\r\n) {\r\n  createChefBookingRequestHistory(\r\n    input: {\r\n      chefBookingRequestHistory: {\r\n        bookingHistId: $bookingHistId\r\n        chefId: $chefId\r\n        customerId: $customerId\r\n        chefBookingRequestNoOfPeople: $chefBookingRequestNoOfPeople\r\n        chefBookingRequestComplexity: $chefBookingRequestComplexity\r\n        chefBookingRequestAdditionalServices: $chefBookingRequestAdditionalServices\r\n        chefBookingRequestTotalPriceValue: $chefBookingRequestTotalPriceValue\r\n        chefBookingRequestTotalPriceUnit: $chefBookingRequestTotalPriceUnit\r\n        chefBookingRequestCommissionPriceUnit: $chefBookingRequestCommissionPriceUnit\r\n        chefBookingRequestCommissionPriceValue: $chefBookingRequestCommissionPriceValue\r\n        chefBookingRequestServiceChargePriceUnit: $chefBookingRequestServiceChargePriceUnit\r\n        chefBookingRequestServiceChargePriceValue: $chefBookingRequestServiceChargePriceValue\r\n      }\r\n    }\r\n  ) {\r\n    chefBookingRequestHistory {\r\n      chefBookingRequestHistId\r\n      bookingHistId\r\n      chefId\r\n      customerId\r\n      chefBookingRequestNoOfPeople\r\n      chefBookingRequestComplexity\r\n      chefBookingRequestAdditionalServices\r\n      chefBookingRequestTotalPriceUnit\r\n      chefBookingRequestTotalPriceValue\r\n      chefBookingRequestCommissionPriceUnit\r\n      chefBookingRequestCommissionPriceValue\r\n      chefBookingRequestServiceChargePriceUnit\r\n      chefBookingRequestServiceChargePriceValue\r\n    }\r\n  }\r\n}`","export const acceptChefRequestGQLTAG = `mutation customerAcceptChefBookingRequestedChanges($pData: JSON) {\r\n  customerAcceptChefBookingRequestedChanges(input: { pData: $pData }) {\r\n    procedureResult {\r\n      success\r\n      message\r\n      json\r\n    }\r\n  }\r\n}`\r\n\r\n\r\n/**\r\n{\r\n  pData :{\r\n    \"bookingHistId\": \"693b2811-f6d9-4fc4-85e8-258f2aa824ee\",\r\n    \"bookingPriceValue\": 60,\r\n    \"bookingCommissionPriceValue\": 1.25,\r\n    \"bookingTotalPriceValue\": 61.25,\r\n    \"bookingNoOfPeople\": 2,\r\n    \"bookingComplexity\": 3,\r\n    \"bookingAdditionalServices\": [\r\n      {\r\n        \"service\": \"CLEANING\",\r\n        \"price\": 12\r\n      }\r\n    ]\r\n  }\r\n}\r\n*/","export const acceptBookingGQLTAG = `# Write your query or mutation here\r\nmutation updateChefBookingHistoryByChefBookingHistId(\r\n  $chefBookingHistId: String!\r\n  $chefBookingStatusId: String\r\n  $chefBookingBlockFromTime: Datetime!\r\n  $chefBookingBlockToTime: Datetime!\r\n) {\r\n  updateChefBookingHistoryByChefBookingHistId(\r\n    input: {\r\n      chefBookingHistId: $chefBookingHistId\r\n      chefBookingHistoryPatch: {\r\n        chefBookingStatusId: $chefBookingStatusId\r\n        chefBookingBlockFromTime: $chefBookingBlockFromTime\r\n        chefBookingBlockToTime: $chefBookingBlockToTime\r\n      }\r\n    }\r\n  ) {\r\n    chefBookingHistory {\r\n      chefBookingHistId\r\n      chefId\r\n      customerId\r\n      chefBookingFromTime\r\n      chefBookingToTime\r\n      chefBookingBlockFromTime\r\n      chefBookingBlockToTime\r\n    }\r\n  }\r\n}`;\r\n\r\n/*\r\n{\r\n  \"chefBookingHistId\": \"\",\r\n  \"chefBookingStatusId\":,\r\n  \"chefBookingBlockFromTime\":\"2019-11-10 11:00:00\",\r\n  \"chefBookingBlockToTime\":\"2019-11-10 12:00:00\",\r\n}\r\n*/","export const saveIntroTourGQLTAG = `mutation createQuestionAnswerHistory(\r\n    $questionId: String!\r\n    $questionOptionId: String!\r\n    $chefId: String!\r\n  ) {\r\n    createQuestionAnswerHistory(\r\n      input: {\r\n        questionAnswerHistory: {\r\n          questionId: $questionId\r\n          questionOptionId: $questionOptionId\r\n          chefId: $chefId\r\n        }\r\n      }\r\n    ) {\r\n      questionAnswerHistory {\r\n        questionAnswerHistId\r\n        questionId\r\n        questionOptionId\r\n        chefId\r\n      }\r\n    }\r\n  }\r\n  `;\r\n\r\n/*\r\n{\r\n \"questionId\":\"fb055465-d87e-492e-817b-557817dfc3b2\",\r\n \"questionOptionId\":\"fad72efc-669f-4c9b-b4a7-13ab5826b289\",\r\n \"chefId\":\"07fe580f-416c-4125-b6a3-6a0aa589a1ad\"\r\n}\r\n*/","export const changeMobileNoGQLTag = `mutation updateChefProfileByChefId(\r\n  $chefId: String!\r\n  $chefMobileNumber: String!\r\n  $chefMobileCountryCode:String\r\n) {\r\n  updateChefProfileByChefId(\r\n    input: {\r\n      chefId: $chefId\r\n      chefProfilePatch: {\r\n        chefMobileCountryCode: $chefMobileCountryCode\r\n        chefMobileNumber: $chefMobileNumber\r\n      }\r\n    }\r\n  ) {\r\n    chefProfile {\r\n      chefId\r\n      fullName\r\n      chefMobileNumber\r\n      chefMobileCountryCode\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n/*\r\n{\r\n  \"chefMobileCountryCode\": \"+91\",\r\n \"chefMobileNumber\":\"92354\",\r\n \"chefId\":\"07fe580f-416c-4125-b6a3-6a0aa589a1ad\"\r\n}\r\n*/","export const changeLocationGQLTag = `mutation updateChefProfileExtendedByChefProfileExtendedId(\r\n  $chefProfileExtendedId: String!\r\n  $chefLocationAddress: String\r\n  $chefLocationLat: String\r\n  $chefLocationLng: String\r\n  $chefAddrLine1: String\r\n  $chefAddrLine2: String\r\n  $chefPostalCode: String\r\n  $chefCity: String\r\n  $chefState: String\r\n  $chefCountry: String\r\n  $chefAvailableAroundRadiusInValue: Float\r\n  $chefAvailableAroundRadiusInUnit: String\r\n) {\r\n  updateChefProfileExtendedByChefProfileExtendedId(\r\n    input: {\r\n      chefProfileExtendedId: $chefProfileExtendedId\r\n      chefProfileExtendedPatch: {\r\n        chefLocationAddress: $chefLocationAddress\r\n        chefLocationLat: $chefLocationLat\r\n        chefLocationLng: $chefLocationLng\r\n        chefAddrLine1: $chefAddrLine1\r\n        chefAddrLine2: $chefAddrLine2\r\n        chefCity: $chefCity\r\n        chefState: $chefState\r\n        chefCountry: $chefCountry\r\n        chefPostalCode: $chefPostalCode\r\n        chefAvailableAroundRadiusInValue: $chefAvailableAroundRadiusInValue\r\n        chefAvailableAroundRadiusInUnit: $chefAvailableAroundRadiusInUnit\r\n      }\r\n    }\r\n  ) {\r\n    chefProfileExtended {\r\n      chefProfileExtendedId\r\n      chefLocationAddress\r\n      chefLocationLat\r\n      chefLocationLng\r\n      chefAddrLine1\r\n      chefAddrLine2\r\n      chefPostalCode\r\n      chefCity\r\n      chefState\r\n      chefCountry\r\n      chefAvailableAroundRadiusInValue\r\n      chefAvailableAroundRadiusInUnit\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\n/*\r\n{\r\n  \"chefProfileExtendedId\":\"\",\r\n  \"chefLocationAddress\":\"\",\r\n  \"chefLocationLat\":\"\",\r\n  \"chefLocationLng\":\"\",\r\n  \"chefAddrLine1\":\"\",\r\n  \"chefAddrLine2\":\"\",\r\n  \"chefPostalCode\":\"\",\r\n  \"chefAvailableAroundRadiusInValue:\"\",\r\n  \"chefAvailableAroundRadiusInUnit:\"MILES\"\r\n}\r\n*/","export const updateSpecializationGQLTAG = `mutation updateChefSpecializationProfileByChefSpecializationId(\r\n  $chefSpecializationId: String!\r\n  $chefCuisineTypeId: [String]\r\n  $chefDishTypeId: [String]\r\n  $ingredientsDesc: JSON\r\n) {\r\n  updateChefSpecializationProfileByChefSpecializationId(\r\n    input: {\r\n      chefSpecializationId: $chefSpecializationId\r\n      chefSpecializationProfilePatch: {\r\n        chefCuisineTypeId: $chefCuisineTypeId\r\n        chefDishTypeId: $chefDishTypeId\r\n        ingredientsDesc: $ingredientsDesc\r\n      }\r\n    }\r\n  ) {\r\n    chefSpecializationProfile {\r\n      chefCuisineTypeId\r\n      chefDishTypeId\r\n      chefCuisineTypeDesc\r\n      chefDishTypeDesc\r\n      ingredientsDesc\r\n    }\r\n  }\r\n}\r\n\r\n  `;\r\n\r\n/*\r\n{\r\n  \"chefSpecializationId\": \"0a5319d9-9e7a-4247-a85e-99ed8d56371d\",\r\n  \"chefCuisineTypeId\": [\"LATVIAN_FOOD                        \"],\r\n  \"chefDishTypeId\": [\"TWINKIES                            \"]\r\n}\r\n*/","export const updateDetailsGQLTag = `mutation updateChefProfileExtendedByChefProfileExtendedId(\r\n  $chefProfileExtendedId: String!\r\n  $chefDesc: String\r\n  $chefExperience: String\r\n  $chefDrivingLicenseNo: String\r\n  $chefFacebookUrl: String\r\n  $chefTwitterUrl: String\r\n  $chefPricePerHour: Float\r\n  $chefPriceUnit: String\r\n  $chefBusinessHoursFromTime:Time\r\n  $chefBusinessHoursToTime:Time\r\n  $isIntroSlidesSeenYn:Boolean\r\n  $minimumNoOfMinutesForBooking:Int\r\n) {\r\n  updateChefProfileExtendedByChefProfileExtendedId(\r\n    input: {\r\n      chefProfileExtendedId: $chefProfileExtendedId\r\n      chefProfileExtendedPatch: {\r\n        chefDesc: $chefDesc\r\n        chefExperience: $chefExperience\r\n        chefDrivingLicenseNo: $chefDrivingLicenseNo\r\n        chefFacebookUrl: $chefFacebookUrl\r\n        chefTwitterUrl: $chefTwitterUrl\r\n        chefPricePerHour: $chefPricePerHour\r\n        chefPriceUnit: $chefPriceUnit\r\n       \r\n        chefBusinessHoursFromTime:$chefBusinessHoursFromTime\r\n        chefBusinessHoursToTime:$chefBusinessHoursToTime\r\n        \r\n        isIntroSlidesSeenYn:$isIntroSlidesSeenYn\r\n\r\n        minimumNoOfMinutesForBooking:$minimumNoOfMinutesForBooking\r\n      }\r\n    }\r\n  ) {\r\n    chefProfileExtended {\r\n      chefDesc\r\n      chefExperience\r\n      chefDrivingLicenseNo\r\n      chefFacebookUrl\r\n      chefTwitterUrl\r\n      chefPricePerHour\r\n      chefPriceUnit\r\n      chefBusinessHoursFromTime\r\n      chefBusinessHoursToTime\r\n      minimumNoOfMinutesForBooking\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n/*\r\n{\r\n  \"chefProfileExtendedId\":\"\",\r\n  \"chefDesc\":\"\",\r\n  \"chefExperience\":\"\",\r\n  \"chefDrivingLicenseNo\":\"\",\r\n  \"chefFacebookUrl\":\"\",\r\n  \"chefTwitterUrl\":\"\",\r\n  \"chefPricePerHour\":0,\r\n  \"chefPriceUnit\":\"\",\r\n  \"chefBusinessHoursFromTime\":\"\"\r\n  \"chefBusinessHoursToTime\":\"\"\r\n  \"chefAvailableAroundRadiusInValue\":\"\"\r\n  \"chefAvailableAroundRadiusInUnit\":\"\"\r\n  \"isIntroSlidesSeenYn\": true\r\n}\r\n*/","export const updateBasicInfoGQLTag = `mutation updateChefProfileByChefId(\r\n  $chefId: String!\r\n  $chefSalutation: String\r\n  $chefFirstName: String!\r\n  $chefLastName: String\r\n  $chefGender: String\r\n  $chefDob: Datetime\r\n  $chefMobileCountryCode:String\r\n  $chefMobileNumber: String\r\n  $chefPicId: String\r\n) {\r\n  updateChefProfileByChefId(\r\n    input: {\r\n      chefId: $chefId\r\n      chefProfilePatch: {\r\n        chefSalutation: $chefSalutation\r\n        chefFirstName: $chefFirstName\r\n        chefLastName: $chefLastName\r\n        chefGender: $chefGender\r\n        chefDob: $chefDob\r\n        chefMobileCountryCode:$chefMobileCountryCode\r\n        chefMobileNumber: $chefMobileNumber\r\n        chefPicId: $chefPicId\r\n      }\r\n    }\r\n  ) {\r\n    chefProfile {\r\n      chefSalutation\r\n      chefFirstName\r\n      chefLastName\r\n      chefGender\r\n      chefDob\r\n      chefMobileCountryCode\r\n      chefMobileNumber\r\n      chefPicId\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n  `;\r\n\r\n   /*\r\n    {\r\n  \"chefId\":\"5e0661ac-9dd0-4f7e-bde4-ea0d4312d355\",\r\n  \"chefSalutation\":\"MR\",\r\n  \"chefFirstName\":\"Saravana\",\r\n  \"chefLastName\":\"Kannan\",\r\n  \"chefGender\": \"MALE\",\r\n  \"chefDob\": \"1994-04-19T13:53:14.263854\",\r\n  \"chefMobileNumber\": \"9442639487\",\r\n  \"chefPicId\": \"https://firebasestorage.googleapis.com/v0/b/rockoly-dev.appspot.com/o/profile%2Fcooking-775503_1920.jpg?alt=media&token=85a7b12e-d5d8-44be-a825-86455921b2b7\"\r\n}\r\n  */","export const updateStatusByChefIdGQLTAG = `mutation updateStatusByChefId($pStatusId: String!, $pData: JSON!) {\r\n  updateStatusByChefId(input: { pStatusId: $pStatusId, pData: $pData }) {\r\n    procedureResult {\r\n      message\r\n      success\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n/*\r\n{\r\n  \"pStatusId\": \"BLOCKED\",\r\n  \"pData\": \"[{\\\"pId\\\":\\\"8393af57-2e32-4140-9d41-53152f09f3c2\\\",\\\"pReason\\\":\"Test\"},{\\\"pId\\\":\\\"aa75d9fd-0743-432e-bc16-7008a9c6ae9c\\\",\\\"pReason\\\":\"Test\"}]\"\r\n}\r\n*/","export const updateAllGQLTAG =`\r\nmutation updateChefDetails(\r\n    $chefId: String!\r\n    $chefSpecializationId: String!\r\n    $chefProfileExtendedId: String!\r\n    $chefSalutation: String\r\n    $chefFirstName: String!\r\n    $chefLastName: String\r\n    $chefGender: String\r\n    $chefDob: Datetime\r\n    $chefDesc: String\r\n    $chefExperience: String\r\n    $chefDrivingLicenseNo: String\r\n    $chefFacebookUrl: String\r\n    $chefTwitterUrl: String\r\n    $chefPricePerHour: Float\r\n    $chefPriceUnit: String\r\n    $minimumNoOfMinutesForBooking:Int\r\n    $chefCuisineTypeId: [String]\r\n    $chefDishTypeId: [String]\r\n    $chefBusinessHoursFromTime:Time\r\n    $chefBusinessHoursToTime:Time\r\n    $chefAttachments:JSON\r\n    $pAttachmentAreaSection:String\r\n    $ingredientsDesc: JSON\r\n  ) {\r\n    updateChefProfileByChefId(\r\n      input: {\r\n        chefId: $chefId\r\n        chefProfilePatch: {\r\n          chefSalutation: $chefSalutation\r\n          chefFirstName: $chefFirstName\r\n          chefLastName: $chefLastName\r\n          chefGender: $chefGender\r\n          chefDob: $chefDob\r\n        }\r\n      }\r\n    ) {\r\n      chefProfile {\r\n        chefSalutation\r\n        chefFirstName\r\n        chefLastName\r\n        chefGender\r\n        chefDob\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n    updateChefProfileExtendedByChefProfileExtendedId(\r\n      input: {\r\n        chefProfileExtendedId: $chefProfileExtendedId\r\n        chefProfileExtendedPatch: {\r\n          chefDesc: $chefDesc\r\n          chefExperience: $chefExperience\r\n          chefDrivingLicenseNo: $chefDrivingLicenseNo\r\n          chefFacebookUrl: $chefFacebookUrl\r\n          chefTwitterUrl: $chefTwitterUrl\r\n          chefPricePerHour: $chefPricePerHour\r\n          chefPriceUnit: $chefPriceUnit\r\n          chefBusinessHoursFromTime:$chefBusinessHoursFromTime\r\n          chefBusinessHoursToTime:$chefBusinessHoursToTime\r\n          minimumNoOfMinutesForBooking:$minimumNoOfMinutesForBooking\r\n        }\r\n      }\r\n    ) {\r\n      chefProfileExtended {\r\n        chefDesc\r\n        chefExperience\r\n        chefDrivingLicenseNo\r\n        chefFacebookUrl\r\n        chefTwitterUrl\r\n        chefPricePerHour\r\n        chefPriceUnit\r\n        chefBusinessHoursFromTime\r\n        chefBusinessHoursToTime\r\n        isIntroSlidesSeenYn\r\n        minimumNoOfMinutesForBooking\r\n      }\r\n    }\r\n    updateChefSpecializationProfileByChefSpecializationId(\r\n      input: {\r\n        chefSpecializationId: $chefSpecializationId\r\n        chefSpecializationProfilePatch: {\r\n          chefCuisineTypeId: $chefCuisineTypeId\r\n          chefDishTypeId: $chefDishTypeId\r\n          ingredientsDesc: $ingredientsDesc\r\n        }\r\n      }\r\n    ) {\r\n      chefSpecializationProfile {\r\n        chefCuisineTypeId\r\n        chefDishTypeId\r\n        chefCuisineTypeDesc\r\n        chefDishTypeDesc\r\n        ingredientsDesc\r\n      }\r\n    }\r\n    updateChefAttachment(\r\n      input: {  pChefId: $chefId\r\n        pAttachmentAreaSection: $pAttachmentAreaSection\r\n        pChefAttachments: $chefAttachments }\r\n    ) {\r\n      chefAttachmentProfiles {\r\n        chefId\r\n        chefAttachmentDesc\r\n        chefAttachmentType\r\n        chefAttachmentUrl\r\n      }\r\n    }\r\n  }  \r\n`;\r\n\r\n// chefAttachments need to passed as json stringify, then only it will work\r\n/*\r\n{\r\n  \"chefId\":\"07fe580f-416c-4125-b6a3-6a0aa589a1ad\",\r\n  \"chefProfileExtendedId\":\"ee84b5e8-9521-44c8-8ebd-7cd78ff658f1\",\r\n  \"chefSpecializationId\": \"0a5319d9-9e7a-4247-a85e-99ed8d56371d\",\r\n  \"chefSalutation\":null,\r\n  \"chefFirstName\":\"Naaziya\",\r\n  \"chefLastName\":\"Nayeem\",\r\n  \"chefGender\": \"FEMALE\",\r\n  \"chefDob\": \"1994-04-19T13:53:14.263854\",\r\n  \"chefDesc\":null,\r\n  \"chefExperience\":null,\r\n  \"chefDrivingLicenseNo\":null,\r\n  \"chefFacebookUrl\":null,\r\n  \"chefTwitterUrl\":null,\r\n  \"chefPricePerHour\":0,\r\n  \"chefPriceUnit\":null,\r\n  \"chefBusinessHoursFromTime\":null,\r\n  \"chefBusinessHoursToTime\":null,\r\n  \"chefCuisineTypeId\": [\"LATVIAN_FOOD                        \",\"LATVIAN_FOOD                        \"],\r\n  \"chefDishTypeId\": [\"TWINKIES                            \"],\r\n  \"chefAttachments\":\"[\\n  {\\n    \\\"pAttachmentType\\\": \\\"IMAGE\\\",\\n    \\\"pAttachmentUrl\\\": \\\"rffff\\\"\\n  },\\n  {\\n    \\\"pAttachmentType\\\": \\\"IMAGE\\\",\\n    \\\"pAttachmentUrl\\\": \\\"33333r333\\\"\\n  },\\n  {\\n    \\\"pAttachmentType\\\": \\\"IMAGE\\\",\\n    \\\"pAttachmentUrl\\\": \\\"vfrvrvrvrv\\\"\\n  },\\n  {\\n    \\\"pAttachmentType\\\": \\\"IMAGE\\\",\\n    \\\"pAttachmentUrl\\\": \\\"frfrfrfr\\\"\\n  },\\n  {\\n    \\\"pAttachmentType\\\": \\\"IMAGE\\\",\\n    \\\"pAttachmentUrl\\\": \\\"frfrfrfrf\\\"\\n  }\\n]\",\r\n}\r\n*/","export const updateAttachmentGQLTag=`mutation updateChefAttachment(\r\n  $pChefId: String!\r\n  $pAttachmentAreaSection: String!\r\n  $pChefAttachments: JSON!\r\n) {\r\n  updateChefAttachment(\r\n    input: {\r\n      pChefId: $pChefId\r\n      pAttachmentAreaSection: $pAttachmentAreaSection\r\n      pChefAttachments: $pChefAttachments\r\n    }\r\n  ) {\r\n    chefAttachmentProfiles {\r\n      chefId\r\n      chefAttachmentDesc\r\n      chefAttachmentType\r\n      chefAttachmentUrl\r\n      chefAttachmentsAreaSection\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\n// pChefAttachments need to passed as json stringify, then only it will work\r\n// pAttachmentType = IMAGE / DOCUMENT /VIDEO\r\n// pAttachmentUrl = firebase image url\r\n// pAttachmentAreaSection = GALLERY/LICENSE/CERTIFICATION/OTHERS\r\n/*\r\n{\r\n  \"pChefId\": \"5d4c99c6-1ff4-4dc3-a4f7-a1afad8af26e\",\r\n  \"pChefAttachments\":\"[\\n  {\\n    \\\"pAttachmentType\\\": \\\"IMAGE\\\",\\n    \\\"pAttachmentUrl\\\": \\\"rffff\\\",\\n     \\\"pAttachmentAreaSection\\\": \\\"LICENCE\\\"\\n   },\\n  {\\n    \\\"pAttachmentType\\\": \\\"IMAGE\\\",\\n    \\\"pAttachmentUrl\\\": \\\"33333r333\\\"\\n  },\\n  {\\n    \\\"pAttachmentType\\\": \\\"IMAGE\\\",\\n    \\\"pAttachmentUrl\\\": \\\"vfrvrvrvrv\\\"\\n  },\\n  {\\n    \\\"pAttachmentType\\\": \\\"IMAGE\\\",\\n    \\\"pAttachmentUrl\\\": \\\"frfrfrfr\\\"\\n  },\\n  {\\n    \\\"pAttachmentType\\\": \\\"IMAGE\\\",\\n    \\\"pAttachmentUrl\\\": \\\"frfrfrfrf\\\"\\n  }\\n]\"\r\n}\r\n*/","export const updateAvailabilityGQLTAG = `mutation updateChefAvailability($pChefId: String, $pData: JSON) {\r\n  updateChefAvailability(input: { pChefId: $pChefId, pData: $pData }) {\r\n    chefAvailabilityProfiles {\r\n      chefAvailId\r\n      chefId\r\n      chefAvailDow\r\n      chefAvailDate\r\n      chefAvailFromTime\r\n      chefAvailToTime\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n/*\r\n{\r\n  \"pChefId\": \"9b8abf23-0dd1-4c09-9306-4d39da33013e\",\r\n  \"pData\":\"[\\n  {\\n    \\\"dow\\\": 1,\\n    \\\"fromTime\\\": \\\"10:00:00\\\",\\n    \\\"toTime\\\": \\\"23:00:00\\\",\\n    \\\"type\\\": \\\"AVAILABLE\\\"\\n  },\\n  {\\n    \\\"dow\\\": 2,\\n    \\\"fromTime\\\": \\\"10:00:00\\\",\\n    \\\"toTime\\\": \\\"23:00:00\\\",\\n    \\\"type\\\": \\\"AVAILABLE\\\"\\n  },\\n  {\\n    \\\"dow\\\": 3,\\n    \\\"fromTime\\\": \\\"10:00:00\\\",\\n    \\\"toTime\\\": \\\"23:00:00\\\",\\n    \\\"type\\\": \\\"AVAILABLE\\\"\\n  },\\n  {\\n    \\\"dow\\\": 4,\\n    \\\"fromTime\\\": \\\"10:00:00\\\",\\n    \\\"toTime\\\": \\\"23:00:00\\\",\\n    \\\"type\\\": \\\"AVAILABLE\\\"\\n  },\\n  {\\n    \\\"dow\\\": 5,\\n    \\\"fromTime\\\": \\\"10:00:00\\\",\\n    \\\"toTime\\\": \\\"23:00:00\\\",\\n    \\\"type\\\": \\\"NOT_AVAILABLE\\\"\\n  },\\n  {\\n    \\\"dow\\\": 6,\\n    \\\"fromTime\\\": \\\"00:00:00\\\",\\n    \\\"toTime\\\": \\\"23:59:59\\\",\\n    \\\"type\\\": \\\"AVAILABLE\\\"\\n  },\\n  {\\n    \\\"dow\\\": 7,\\n    \\\"fromTime\\\": \\\"00:00:00\\\",\\n    \\\"toTime\\\": \\\"23:59:59\\\",\\n    \\\"type\\\": \\\"NOT_AVAILABLE\\\"\\n  }\\n]\"\r\n}\r\n*/","export const updateNotAvailabilityGQLTAG = `mutation updateChefNotAvailability(\r\n  $pChefId: String!\r\n  $pDate: Date\r\n  $pFromTime: Time!\r\n  $pToTime: Time!\r\n  $pType: String!\r\n  $pChefNotAvailId: String\r\n  $pNotes: String\r\n  $pFrequency: String\r\n) {\r\n  updateChefNotAvailability(\r\n    input: {\r\n      pChefId: $pChefId\r\n      pDate: $pDate\r\n      pFromTime: $pFromTime\r\n      pToTime: $pToTime\r\n      pType: $pType\r\n      pChefNotAvailId: $pChefNotAvailId\r\n      pNotes: $pNotes\r\n      pFrequency: $pFrequency\r\n    }\r\n  ) {\r\n    chefNotAvailabilityProfile {\r\n      chefNotAvailId\r\n      chefId\r\n      chefNotAvailDow\r\n      chefNotAvailDate\r\n      chefNotAvailFromTime\r\n      chefNotAvailToTime\r\n      chefNotAvailNotes\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n  `\r\n\r\n  /**\r\n   {\r\n  \"pChefId\": \"d0d6e768-195e-4b03-8bcb-d8200ddd1d8b\",\r\n  \"pDate\": \"2019-09-20\",\r\n  \"pFromTime\": \"10:00:00\",\r\n  \"pToTime\": \"17:00:00\",\r\n  \"pType\": \"DELETE\",\r\n  \"pChefNotAvailId\": \"\",\r\n  \"pNotes\":null,\r\n  \"pFrequency\": null\r\n}\r\n   */","export const submitForReviewGQLTAG = `mutation updateChefProfileByChefId($pChefId: String!) {\r\n  updateChefProfileByChefId(\r\n    input: {\r\n      chefId: $pChefId\r\n      chefProfilePatch: { chefStatusId: \"SUBMITTED_FOR_REVIEW\" }\r\n    }\r\n  ) {\r\n    chefProfile {\r\n      chefStatusId\r\n    }\r\n  }\r\n}`\r\n\r\n  /*\r\n  {\r\n  \"pChefId\": \"07fe580f-416c-4125-b6a3-6a0aa589a1ad\"\r\n} */","export const saveChefBankDetailsGQLTAG = `mutation saveChefBankDetails($chefId: String!, $token: String!) {\r\n    saveChefBankDetails(chefId: $chefId, token: $token) {\r\n      data\r\n    }\r\n  }\r\n   \r\n  `\r\n\r\n  /*\r\n  {\r\n  \"chefId\": \"23fe20cc-6097-4526-9536-5068c1b36b93\",\r\n  \"token\": \"ac_G5MnjEepWqglwr3qf9b8y9PMQkQIfmr1\"\r\n} */\r\n\r\n/*\r\nUSE IN HEADERS:\r\n{\r\n  \"token\":\"eyJhbGciOiJSUzI1NiIsImtpZCI6ImEwYjQwY2NjYmQ0OWQxNmVkMjg2MGRiNzIyNmQ3NDZiNmZhZmRmYzAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcm9ja29seS1kZXYiLCJhdWQiOiJyb2Nrb2x5LWRldiIsImF1dGhfdGltZSI6MTU3MjQxMzIwOSwidXNlcl9pZCI6IldSdHZFVkZBODVmSm9KNDVHWmsxWDZ1czdjUDIiLCJzdWIiOiJXUnR2RVZGQTg1ZkpvSjQ1R1prMVg2dXM3Y1AyIiwiaWF0IjoxNTcyNDE5ODA3LCJleHAiOjE1NzI0MjM0MDcsImVtYWlsIjoia2lydXRoaWthQG5lb3NtZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsia2lydXRoaWthQG5lb3NtZS5jb20iXX0sInNpZ25faW5fcHJvdmlkZXIiOiJwYXNzd29yZCJ9fQ.e9_0F0rO7GUh51g5NIOHMp_eGv_d8foDyrepg7OGjm-ePC7pCeEM3i3MxEyr-ktz3zWotWmKeFbqqpEBHQXzqCAQvXvyDXy8OFutCXCmRASXl36JYyRR1IlD34Js8-Vl0RO_nrizL1YQVkDV3MHUSAnGoUas0aTjOL1FKcCpwqiD8Lbf1XONmM-GJ5VsECLMARaQD7IPzJ0ReVq0wl-N2Rottk9bf3pzLA_eGdWj0rLHEiUyrQvBnJVidaDl0zEUuWrh0QjSdKcr4o8oB0NbF-muS30e37oRflwnDn3rB-lDkl1wtbtZW7KQG2CJGAL7xB6ovzm9JHrIHKNTwdLkzA\"\r\n} */","export const updateDefaultBankProfileGQLTAG = `mutation updateChefBankProfileByChefBankProfileId(\r\n    $chefBankProfileId: String!\r\n    $isDefaultYn: Boolean\r\n  ) {\r\n    updateChefBankProfileByChefBankProfileId(\r\n      input: {\r\n        chefBankProfileId: $chefBankProfileId\r\n        chefBankProfilePatch: { isDefaultYn: $isDefaultYn }\r\n      }\r\n    ) {\r\n      chefBankProfile {\r\n        isDefaultYn\r\n      }\r\n    }\r\n  }`\r\n\r\n  /*\r\n  {\r\n  \"chefBankProfileId\": \"\",\r\n  \"isDefaultYn\": true //false\r\n}\r\n  */\r\n","export const updateNotificationGQLTAG =`mutation updateChefProfileByChefId(\r\n    $chefId: String!\r\n    $isNotificationYn: Boolean\r\n  ) {\r\n    updateChefProfileByChefId(\r\n      input: {\r\n        chefId: $chefId\r\n        chefProfilePatch: { isNotificationYn: $isNotificationYn }\r\n      }\r\n    ) {\r\n      chefProfile {\r\n        isNotificationYn\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\n  /*\r\n  {\r\n  \"chefId\": \"1e2e76da-3526-4fac-8b65-f31f7b1fc5ea\",\r\n  \"isNotificationYn\":  true \r\n} */","export const updatePriceForBookingGQLTAG = `mutation updatePriceForBooking(\r\n  $chefProfileExtendedId: String!\r\n  $chefPricePerHour: Float\r\n  $chefGratuity: Float\r\n  $noOfGuestsMin: Int\r\n  $noOfGuestsMax: Int\r\n  $noOfGuestsCanServe: Int\r\n  $discount: Float\r\n  $personsCount: Int\r\n) {\r\n  updateChefProfileExtendedByChefProfileExtendedId(\r\n    input: {\r\n      chefProfileExtendedId: $chefProfileExtendedId\r\n      chefProfileExtendedPatch: {\r\n        chefPricePerHour: $chefPricePerHour\r\n        chefGratuity: $chefGratuity\r\n        noOfGuestsMin: $noOfGuestsMin\r\n        noOfGuestsMax: $noOfGuestsMax\r\n        noOfGuestsCanServe: $noOfGuestsCanServe\r\n        discount: $discount\r\n        personsCount: $personsCount\r\n      }\r\n    }\r\n  ) {\r\n    chefProfileExtended {\r\n      chefPricePerHour\r\n      chefGratuity\r\n      noOfGuestsMin\r\n      noOfGuestsMax\r\n      noOfGuestsCanServe\r\n      discount\r\n      personsCount\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n\r\n  /*\r\n{\r\n  \"chefProfileExtendedId\": \"\",\r\n  \"chefPricePerHour\": 100,\r\n  \"chefGratuity\": 2.5,\r\n  \"noOfGuestsMin\": 1,\r\n  \"noOfGuestsMax\": 2,\r\n  \"noOfGuestsCanServe\": 2\r\n}\r\n */","export const updateComplexityGQLTAG = `mutation updateComplexity(\r\n    $chefProfileExtendedId: String!\r\n    $chefComplexity: JSON\r\n  ) {\r\n    updateChefProfileExtendedByChefProfileExtendedId(\r\n      input: {\r\n        chefProfileExtendedId: $chefProfileExtendedId\r\n        chefProfileExtendedPatch: { chefComplexity: $chefComplexity }\r\n      }\r\n    ) {\r\n      chefProfileExtended {\r\n        chefComplexity\r\n      }\r\n    }\r\n  }`\r\n\r\n\r\n  /*\r\n  {\r\n  \"chefProfileExtendedId\": \"\",\r\n  \"chefComplexity\": 2.5\r\n} */","export const updateChefExperienceDetailsGQLTAG = `mutation updateChefExperienceDetails(\r\n    $chefProfileExtendedId: String!\r\n    $chefAwards: JSON\r\n    $chefCertificateType: [String]\r\n  ) {\t\r\n    updateChefProfileExtendedByChefProfileExtendedId(\r\n      input: {\r\n        chefProfileExtendedId: $chefProfileExtendedId\r\n        chefProfileExtendedPatch: {\r\n          chefAwards: $chefAwards\r\n          chefCertificateType: $chefCertificateType\r\n        }\r\n      }\r\n    ) {\r\n      chefProfileExtended {\r\n        chefAwards\r\n        certificationsTypes {\r\n          nodes {\r\n            certificateTypeId\r\n            certificateTypeName\r\n            certificateTypeDesc\r\n            createdAt\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\n  /*\r\n  {\r\n  \"chefProfileExtendedId\": \"\",\r\n  \"chefAwards\": \"\",\r\n  \"chefCertificateType\": \"\"\r\n} */","export const updateChefProfilePicGQLTAG = `mutation updateChefProfilePic($chefId: String!, $chefPicId: String) {\r\n    updateChefProfileByChefId(\r\n      input: { chefId: $chefId, chefProfilePatch: { chefPicId: $chefPicId } }\r\n    ) {\r\n      chefProfile {\r\n        chefPicId\r\n      }\r\n    }\r\n  }`\r\n\r\n  /*\r\n  {\r\n  \"chefId\": \"\",\r\n  \"chefPicId\": \"\"\r\n} */","export const updateChefWorkDetailsGQLTAG = `mutation updateChefWorkDetails(\r\n  $chefProfileExtendedId: String!\r\n  $chefDesc: String\r\n  $chefSpecializationId: String!\r\n  $chefDishTypeId: [String]\r\n  $chefCuisineTypeId: [String]\r\n) {\r\n  updateChefProfileExtendedByChefProfileExtendedId(\r\n    input: {\r\n      chefProfileExtendedId: $chefProfileExtendedId\r\n      chefProfileExtendedPatch: { chefDesc: $chefDesc }\r\n    }\r\n  ) {\r\n    chefProfileExtended {\r\n      chefDesc\r\n    }\r\n  }\r\n  updateChefSpecializationProfileByChefSpecializationId(\r\n    input: {\r\n      chefSpecializationId: $chefSpecializationId\r\n      chefSpecializationProfilePatch: { \r\n        chefCuisineTypeId: $chefCuisineTypeId \r\n        chefDishTypeId: $chefDishTypeId\r\n      }\r\n    }\r\n  ) {\r\n    chefSpecializationProfile {\r\n      chefCuisineTypeId\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n  /*\r\n  {\r\n  \"chefProfileExtendedId\": \"\",\r\n  \"chefDesc\": \"\",\r\n  \"chefSpecializationId\": \"\",\r\n  \"chefCuisineTypeId\": \"\"\r\n}\r\n */","export const updateServiceGQLTAG = `mutation updateService(\r\n    $chefProfileExtendedId: String!\r\n    $chefAdditionalServices: JSON\r\n    $isChefEnabledShoppingLocationYn: Boolean\r\n  ) {\r\n    updateChefProfileExtendedByChefProfileExtendedId(\r\n      input: {\r\n        chefProfileExtendedId: $chefProfileExtendedId\r\n        chefProfileExtendedPatch: {\r\n          chefAdditionalServices: $chefAdditionalServices\r\n          isChefEnabledShoppingLocationYn: $isChefEnabledShoppingLocationYn\r\n        }\r\n      }\r\n    ) {\r\n      chefProfileExtended {\r\n        chefAdditionalServices\r\n        isChefEnabledShoppingLocationYn\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\n  /*\r\n  {\r\n  \"chefProfileExtendedId\": \"\",\r\n  \"chefAdditionalServices\": \"\",\r\n  \"isChefEnabledShoppingLocationYn\": true\r\n}\r\n */","export const updateRegistrationFlag = `mutation updateRegistrationFlag(\r\n    $chefId: String!\r\n    $isRegistrationCompletedYn: Boolean\r\n  ) {\r\n    updateChefProfileByChefId(\r\n      input: {\r\n        chefId: $chefId\r\n        chefProfilePatch: {\r\n          isRegistrationCompletedYn: $isRegistrationCompletedYn\r\n        }\r\n      }\r\n    ) {\r\n      chefProfile {\r\n        isRegistrationCompletedYn\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\n  /*\r\n{\r\n  \"chefId\": \"1e2e76da-3526-4fac-8b65-f31f7b1fc5ea\",\r\n  \"isRegistrationCompletedYn\":  true \r\n}  */","export const updateScreensGQLTAG = `mutation updateRegistrationFlag(\r\n    $chefId: String!\r\n    $chefUpdatedScreens: [String]\r\n  ) {\r\n    updateChefProfileByChefId(\r\n      input: {\r\n        chefId: $chefId\r\n        chefProfilePatch: {\r\n          chefUpdatedScreens: $chefUpdatedScreens\r\n        }\r\n      }\r\n    ) {\r\n      chefProfile {\r\n        chefUpdatedScreens\r\n      }\r\n    }\r\n  }`\r\n\r\n  /*\r\n  {\r\n  \"chefId\": \"\",\r\n  \"chefUpdatedScreens\": \"\"\r\n} */","export const updateIsEmailVerifiedYnGQLTAG = `mutation updateIsEmailVerifiedYn(\r\n  $chefId: String!\r\n  $isEmailVerifiedYn: Boolean\r\n) {\r\n  updateChefProfileByChefId(\r\n    input: {\r\n      chefId: $chefId\r\n      chefProfilePatch: { isEmailVerifiedYn: $isEmailVerifiedYn }\r\n    }\r\n  ) {\r\n    chefProfile {\r\n      isEmailVerifiedYn\r\n    }\r\n  }\r\n}`\r\n\r\n/*\r\n{\r\n  \"chefId\":\"\",\r\n  \"isEmailVerifiedYn\"\r\n}\r\n*/","export const updateIsMobileNoVerifiedYnGQLTAG = `mutation updateIsMobileNoVerifiedYn(\r\n  $chefId: String!\r\n  $isMobileNoVerifiedYn: Boolean\r\n) {\r\n  updateChefProfileByChefId(\r\n    input: {\r\n      chefId: $chefId\r\n      chefProfilePatch: { isMobileNoVerifiedYn: $isMobileNoVerifiedYn }\r\n    }\r\n  ) {\r\n    chefProfile {\r\n      isMobileNoVerifiedYn\r\n    }\r\n  }\r\n}`\r\n\r\n/*\r\n{\r\n  \"chefId\":\"\",\r\n  \"isMobileNoVerifiedYn\"\r\n}\r\n*/","export const sendEmailGQLTAG = `mutation sendEmail($email: String!, $subject: String!, $message: String!) {\r\n    sendEmail(email: $email, subject: $subject, message: $message) {\r\n      data\r\n    }\r\n  }`\r\n\r\n\r\n  /*\r\n  {\r\n  \"email\": \"naaziya@neosme.com\",\r\n  \"subject\": \"Test Email\",\r\n  \"message\": \"TEST TEST TEST TEST\"\r\n} */","export const changeMobileNoGQLTag = `mutation updateCustomerProfileByCustomerId(\r\n  $customerId: String!\r\n  $customerMobileNumber: String!\r\n) {\r\n  updateCustomerProfileByCustomerId(\r\n    input: {\r\n      customerId: $customerId\r\n      customerProfilePatch: { customerMobileNumber: $customerMobileNumber }\r\n    }\r\n  ) {\r\n    customerProfile {\r\n      customerId\r\n      fullName\r\n      customerMobileNumber\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n/*\r\n{\r\n \"customerMobileNumber\":\"111111111\",\r\n \"customerId\": \"07fe580f-416c-4125-b6a3-6a0aa589a1ad\"\r\n}\r\n*/","export const changeLocationGQLTag = `mutation updateCustomerProfileExtendedByCustomerProfileExtendedId(\r\n  $customerProfileExtendedId: String!\r\n  $customerLocationAddress: String\r\n  $customerLocationLat: String\r\n  $customerLocationLng: String\r\n  $customerAddrLine1: String\r\n  $customerAddrLine2: String\r\n  $customerCity: String\r\n  $customerState: String\r\n  $customerCountry: String\r\n  $customerPostalCode: String\r\n) {\r\n  updateCustomerProfileExtendedByCustomerProfileExtendedId(\r\n    input: {\r\n      customerProfileExtendedId: $customerProfileExtendedId\r\n      customerProfileExtendedPatch: {\r\n        customerLocationAddress: $customerLocationAddress\r\n        customerLocationLat: $customerLocationLat\r\n        customerLocationLng: $customerLocationLng\r\n        customerAddrLine1: $customerAddrLine1\r\n        customerAddrLine2: $customerAddrLine2\r\n        customerCity: $customerCity\r\n        customerState: $customerState\r\n        customerCountry: $customerCountry\r\n        customerPostalCode: $customerPostalCode\r\n      }\r\n    }\r\n  ) {\r\n    customerProfileExtended {\r\n      customerProfileExtendedId\r\n      customerLocationAddress\r\n      customerLocationLat\r\n      customerLocationLng\r\n      customerAddrLine1\r\n      customerAddrLine2\r\n      customerCity\r\n      customerState\r\n      customerCountry\r\n      customerPostalCode\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\n/*\r\n{\r\n  \"customercustomerProfileExtendedId\":\"\",\r\n  \"customerLocationAddress\":\"\",\r\n  \"customerLocationLat\":\"\",\r\n  \"customerLocationLng\":\"\",\r\n  \"customerAddrLine1\":\"\",\r\n  \"customerAddrLine2\":\"\",\r\n  \"customerPostalCode\":\"\"\r\n}\r\n*/","export const updateBasicInfoGQLTag = `mutation updateCustomerProfileByCustomerId(\r\n  $customerId: String!\r\n  $customerSalutation: String\r\n  $customerFirstName: String!\r\n  $customerLastName: String\r\n  $customerGender: String\r\n  $customerDob: Datetime\r\n  $customerMobileCountryCode:String\r\n  $customerMobileNumber: String\r\n  $customerPicId:String\r\n) {\r\n  updateCustomerProfileByCustomerId(\r\n    input: {\r\n      customerId: $customerId\r\n      customerProfilePatch: {\r\n        customerSalutation: $customerSalutation\r\n        customerFirstName: $customerFirstName\r\n        customerLastName: $customerLastName\r\n        customerGender: $customerGender\r\n        customerDob: $customerDob\r\n        customerMobileCountryCode:$customerMobileCountryCode \r\n        customerMobileNumber: $customerMobileNumber\r\n        customerPicId:$customerPicId\r\n      }\r\n    }\r\n  ) {\r\n    customerProfile {\r\n      customerSalutation\r\n      customerFirstName\r\n      customerLastName\r\n      customerGender\r\n      customerDob\r\n      customerMobileCountryCode\r\n      customerMobileNumber\r\n      customerPicId\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n\r\n\r\n  `\r\n  \r\n  /*\r\n  {\r\n  \"customerId\":\"824373e4-46aa-459c-a819-5d76bede77b7\",\r\n  \"customerSalutation\":\"MR\",\r\n  \"customerFirstName\": \"Saravana\",\r\n  \"customerLastName\": \"Kannan\", \r\n  \"customerGender\":  \"MALE\",\r\n  \"customerDob\": \"1994-04-19T13:53:14.263854\",\r\n  \"customerMobileNumber\": '9442639487'\r\n  \"customerPicId\": \"https://firebasestorage.googleapis.com/v0/b/rockoly-dev.appspot.com/o/profile%2Fcooking-775503_1920.jpg?alt=media&token=85a7b12e-d5d8-44be-a825-86455921b2b7\"\r\n}\r\n  */","export const updateStatusByCustomerIdGQLTAG = `mutation updateStatusByCustomerId($pStatusId: String!, $pData: JSON!) {\r\n  updateStatusByCustomerId(input: { pStatusId: $pStatusId, pData: $pData }) {\r\n    procedureResult {\r\n      message\r\n      success\r\n    }\r\n  }\r\n}`\r\n\r\n/*\r\n{\r\n  \"pStatusId\": \"BLOCKED\",\r\n  \"pData\": \"[{\\\"pId\\\":\\\"8393af57-2e32-4140-9d41-53152f09f3c2\\\",\\\"pReason\\\":null},{\\\"pId\\\":\\\"aa75d9fd-0743-432e-bc16-7008a9c6ae9c\\\",\\\"pReason\\\":null}]\"\r\n}\r\n */","export const updateAllGQLTAG = ` mutation updateCustomerDetails(\r\n    $customerId: String!\r\n    $customerProfileExtendedId: String!\r\n\r\n    # Basic Info\r\n    $customerSalutation: String\r\n    $customerFirstName: String!\r\n    $customerLastName: String\r\n    $customerGender: String\r\n    $customerDob: Datetime\r\n    $customerMobileNumber: String!\r\n\r\n    # Location\r\n    $customerLocationAddress: String\r\n    $customerLocationLat: String\r\n    $customerLocationLng: String\r\n    $customerAddrLine1: String\r\n    $customerAddrLine2: String\r\n    $customerState: String\r\n    $customerCountry: String\r\n    $customerCity: String\r\n    $customerPostalCode: String\r\n  ) {\r\n    \r\n    updateCustomerProfileByCustomerId(\r\n        input: {\r\n          customerId: $customerId\r\n          customerProfilePatch: {\r\n            customerSalutation: $customerSalutation\r\n            customerFirstName: $customerFirstName\r\n            customerLastName: $customerLastName\r\n            customerGender: $customerGender\r\n            customerDob: $customerDob\r\n            customerMobileNumber:$customerMobileNumber\r\n          }\r\n        }\r\n      ) {\r\n        customerProfile {\r\n            customerId\r\n            customerSalutation\r\n            customerFirstName\r\n            customerLastName\r\n            customerGender\r\n            customerDob\r\n            customerMobileNumber\r\n            createdAt\r\n        }\r\n    }\r\n\r\n    updateCustomerProfileExtendedByCustomerProfileExtendedId(\r\n        input: {\r\n            customerProfileExtendedId: $customerProfileExtendedId\r\n            customerProfileExtendedPatch: {\r\n                customerLocationAddress: $customerLocationAddress\r\n                customerLocationLat: $customerLocationLat\r\n                customerLocationLng: $customerLocationLng\r\n                customerAddrLine1: $customerAddrLine1\r\n                customerAddrLine2: $customerAddrLine2\r\n                customerState: $customerState\r\n                customerCountry: $customerCountry\r\n                customerCity: $customerCity\r\n                customerPostalCode:$customerPostalCode\r\n            }\r\n        }\r\n    ) {\r\n        customerProfileExtended {\r\n            customerProfileExtendedId\r\n            customerLocationAddress\r\n            customerLocationLat\r\n            customerLocationLng\r\n            customerAddrLine1\r\n            customerAddrLine2\r\n            customerState\r\n            customerCountry\r\n            customerCity\r\n            customerPostalCode\r\n        }\r\n    }\r\n  }  \r\n`;\r\n// chefAttachments need to passed as json stringify, then only it will work\r\n/*\r\n{\r\n    \"customerId\":\"07fe580f-416c-4125-b6a3-6a0aa589a1ad\",\r\n    \"customerProfileExtendedId\":\"ee84b5e8-9521-44c8-8ebd-7cd78ff658f1\",\r\n    \"customerSalutation\":null,\r\n    \"customerFirstName\":null,\r\n    \"customerLastName\":null,\r\n    \"customerGender\":null,\r\n    \"customerDob\":null,\r\n    \"customerMobileNumber\":null,\r\n    \"customerLocationAddress\":null,\r\n    \"customerLocationLat\":null,\r\n    \"customerLocationLng\":null,\r\n    \"customerAddrLine1\":null,\r\n    \"customerAddrLine2\":null,\r\n    \"customerState\":null,\r\n    \"customerCountry\":null,\r\n    \"customerCity\":null,\r\n    \"customerPostalCode\":null\r\n}\r\n*/","export const updateNotificationGQLTAG = `mutation updateCustomerProfileByCustomerId(\r\n    $customerId: String!\r\n    $isNotificationYn: Boolean\r\n  ) {\r\n    updateCustomerProfileByCustomerId(\r\n      input: {\r\n        customerId: $customerId\r\n        customerProfilePatch: { isNotificationYn: $isNotificationYn }\r\n      }\r\n    ) {\r\n      customerProfile {\r\n        isNotificationYn\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\n  /*\r\n  {\r\n  \"customerId\": \"\",\r\n  \"isNotificationYn\":  true \r\n} */","export const updatePreferencesGQLTAG = `mutation updateCustomerPreferenceProfileByCustomerPreferenceId(\r\n  $customerPreferenceId: String!\r\n  $customerCuisineTypeId: [String]\r\n  $customerOtherCuisineTypes: JSON\r\n  $customerAllergyTypeId: [String]\r\n  $customerOtherAllergyTypes: JSON\r\n  $customerDietaryRestrictionsTypeId: [String]\r\n  $customerOtherDietaryRestrictionsTypes: JSON\r\n  $customerKitchenEquipmentTypeId: [String]\r\n  $customerOtherKitchenEquipmentTypes: JSON\r\n) {\r\n  updateCustomerPreferenceProfileByCustomerPreferenceId(\r\n    input: {\r\n      customerPreferenceId: $customerPreferenceId\r\n      customerPreferenceProfilePatch: {\r\n        customerCuisineTypeId: $customerCuisineTypeId\r\n        customerOtherCuisineTypes: $customerOtherCuisineTypes\r\n        customerAllergyTypeId: $customerAllergyTypeId\r\n        customerOtherAllergyTypes: $customerOtherAllergyTypes\r\n        customerDietaryRestrictionsTypeId: $customerDietaryRestrictionsTypeId\r\n        customerOtherDietaryRestrictionsTypes: $customerOtherDietaryRestrictionsTypes\r\n        customerKitchenEquipmentTypeId: $customerKitchenEquipmentTypeId\r\n        customerOtherKitchenEquipmentTypes: $customerOtherKitchenEquipmentTypes\r\n      }\r\n    }\r\n  ) {\r\n    customerPreferenceProfile {\r\n      customerPreferenceId\r\n      customerId\r\n      customerCuisineTypeId\r\n      customerOtherCuisineTypes\r\n      customerAllergyTypeId\r\n      customerOtherAllergyTypes\r\n      customerDietaryRestrictionsTypeId\r\n      customerOtherDietaryRestrictionsTypes\r\n      customerKitchenEquipmentTypeId\r\n      customerOtherKitchenEquipmentTypes\r\n      allergyTypes {\r\n        totalCount\r\n        nodes {\r\n          allergyTypeId\r\n          allergyTypeName\r\n        }\r\n      }\r\n      cuisineTypes {\r\n        totalCount\r\n        nodes {\r\n          cuisineTypeId\r\n          cusineTypeName\r\n        }\r\n      }\r\n      dietaryRestrictionsTypes {\r\n        totalCount\r\n        nodes {\r\n          dietaryRestrictionsTypeId\r\n          dietaryRestrictionsTypeName\r\n        }\r\n      }\r\n      kitchenEquipmentTypes {\r\n        totalCount\r\n        nodes {\r\n          kitchenEquipmentTypeId\r\n          kitchenEquipmentTypeName\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n/*\r\n{\r\n  customerPreferenceId: String!\r\n  customerCuisineTypeId: [String]\r\n  customerOtherCuisineTypes: JSON\r\n  customerAllergyTypeId: [String]\r\n  customerOtherAllergyTypes: JSON\r\n  customerDietaryRestrictionsTypeId: [String]\r\n  customerOtherDietaryRestrictionsTypes: JSON\r\n  customerKitchenEquipmentTypeId: [String]\r\n  customerOtherKitchenEquipmentTypes: JSON\r\n}\r\n*/","export const updateCustomerProfilePicGQLTAG = `mutation updateCustomerProfilePic(\r\n    $customerId: String!\r\n    $customerPicId: String\r\n  ) {\r\n    updateCustomerProfileByCustomerId(\r\n      input: {\r\n        customerId: $customerId\r\n        customerProfilePatch: { customerPicId: $customerPicId }\r\n      }\r\n    ) {\r\n      customerProfile {\r\n        customerPicId\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\n\r\n  /*\r\n  {\r\n   \"customerId\": \"\"\r\n} */","export const updateRegistrationGQLTAG = `mutation updateRegistrationFlag(\r\n  $customerId: String!\r\n  $isRegistrationCompletedYn: Boolean\r\n) {\r\n  updateCustomerProfileByCustomerId(\r\n    input: {\r\n      customerId: $customerId\r\n      customerProfilePatch: {\r\n        isRegistrationCompletedYn: $isRegistrationCompletedYn\r\n      }\r\n    }\r\n  ) {\r\n    customerProfile {\r\n      isRegistrationCompletedYn\r\n    }\r\n  }\r\n}\r\n\r\n  `\r\n\r\n  /*\r\n {\r\n  \"customerId\": \"1e2e76da-3526-4fac-8b65-f31f7b1fc5ea\",\r\n  \"isRegistrationCompletedYn\":  true \r\n} */","export const updateScreensGQLTAG = `mutation updateRegistrationFlag(\r\n    $customerId: String!\r\n    $customerUpdatedScreens: [String]\r\n  ) {\r\n    updateCustomerProfileByCustomerId(\r\n      input: {\r\n        customerId: $customerId\r\n        customerProfilePatch: {\r\n          customerUpdatedScreens: $customerUpdatedScreens\r\n        }\r\n      }\r\n    ) {\r\n      customerProfile {\r\n        customerUpdatedScreens\r\n      }\r\n    }\r\n  }`\r\n\r\n  /*{\r\n  \"customerId\": \"\",\r\n  \"customerUpdatedScreens\": \"\"\r\n} */","export const updateIsEmailVerifiedYnGQLTAG = `mutation updateIsEmailVerifiedYn(\r\n  $customerId: String!\r\n  $isEmailVerifiedYn: Boolean\r\n) {\r\n  updateCustomerProfileByCustomerId(\r\n    input: {\r\n      customerId: $customerId\r\n      customerProfilePatch: { isEmailVerifiedYn: $isEmailVerifiedYn }\r\n    }\r\n  ) {\r\n    customerProfile {\r\n      isEmailVerifiedYn\r\n    }\r\n  }\r\n}`\r\n\r\n/*\r\n{\r\n  \"customerId\":\"\",\r\n  \"isEmailVerifiedYn\"\r\n}\r\n*/","export const updateIsMobileNoVerifiedYnGQLTAG = `mutation updateIsMobileNoVerifiedYn(\r\n  $customerId: String!\r\n  $isMobileNoVerifiedYn: Boolean\r\n) {\r\n  updateCustomerProfileByCustomerId(\r\n    input: {\r\n      customerId: $customerId\r\n      customerProfilePatch: { isMobileNoVerifiedYn: $isMobileNoVerifiedYn }\r\n    }\r\n  ) {\r\n    customerProfile {\r\n      isMobileNoVerifiedYn\r\n    }\r\n  }\r\n}`\r\n\r\n/*\r\n{\r\n  \"customerId\":\"\",\r\n  \"isMobileNoVerifiedYn\"\r\n}\r\n*/","export const updateBasicInfoGQLTag = `mutation updateAdminProfileByAdminId(\r\n    $adminId: String!\r\n    $adminSalutation: String\r\n    $adminFirstName: String!\r\n    $adminLastName: String\r\n    $adminDob: Datetime\r\n    $adminGender: String\r\n    $adminMobileNumber: String\r\n  ) {\r\n    updateAdminProfileByAdminId(\r\n      input: {\r\n        adminId: $adminId\r\n        adminProfilePatch: {\r\n          adminSalutation: $adminSalutation\r\n          adminFirstName: $adminFirstName\r\n          adminLastName: $adminLastName\r\n          adminDob: $adminDob\r\n          adminGender: $adminGender\r\n          adminMobileNumber: $adminMobileNumber\r\n        }\r\n      }\r\n    ) {\r\n      adminProfile {\r\n        adminId\r\n        adminSalutation\r\n        adminFirstName\r\n        adminLastName\r\n        adminDob\r\n        adminGender\r\n        adminPicId\r\n        adminEmail\r\n        adminMobileNumber\r\n        adminRoleTypeIds\r\n      }\r\n    }\r\n  }\r\n  `;","export const transferAmountGQLTAG = `mutation stripeTransferAmt(\r\n    $chefStripeUserId: String!\r\n    $bookingHistId: String!\r\n    $adminId: String\r\n    $chefId: String!\r\n  ) {\r\n    stripeTransferAmt(\r\n      chefStripeUserId: $chefStripeUserId\r\n      bookingHistId: $bookingHistId\r\n      adminId: $adminId\r\n      chefId: $chefId\r\n    ) {\r\n      data\r\n    }\r\n  }`\r\n\r\n  /*\r\n  {\r\n\"amount\":1,\r\n\"currency\": \"USD\",\r\n\"chefStripeUserId\": \"acct_1FW0LOFNoi5XElNk\",\r\n\"bookingHistId\": \"8e996fac-1d5f-4988-b572-84c0bd9cfa3b\",\r\n\"adminId\": \"8298d543-6ede-491a-a0b6-13e2f7531719\",\r\n\"chefId\":\"9f749de7-dbc7-47f4-92d3-9c013e1788cf\"\r\n} */\r\n\r\n/*\r\nUSE IN HEADERS:\r\n{\r\n  \"token\":\"eyJhbGciOiJSUzI1NiIsImtpZCI6ImEwYjQwY2NjYmQ0OWQxNmVkMjg2MGRiNzIyNmQ3NDZiNmZhZmRmYzAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcm9ja29seS1kZXYiLCJhdWQiOiJyb2Nrb2x5LWRldiIsImF1dGhfdGltZSI6MTU3MjMyNzQwNiwidXNlcl9pZCI6IldSdHZFVkZBODVmSm9KNDVHWmsxWDZ1czdjUDIiLCJzdWIiOiJXUnR2RVZGQTg1ZkpvSjQ1R1prMVg2dXM3Y1AyIiwiaWF0IjoxNTcyMzQxMTUyLCJleHAiOjE1NzIzNDQ3NTIsImVtYWlsIjoia2lydXRoaWthQG5lb3NtZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsia2lydXRoaWthQG5lb3NtZS5jb20iXX0sInNpZ25faW5fcHJvdmlkZXIiOiJwYXNzd29yZCJ9fQ.PzvFa4HIUBd5F9Tj29HIjhUeKcX-d5ARh8epwmNHq9XtoRLJKQrdAFF9cUlvMdF2P0WCWAB0Wk7qN6SO3i_A1YXRHRrXziQbjL7OEOj1pTW1icapf7WT65NLMVNmqws15_RMFnNYX31WwY80JjoA7syRQH8Oz5QGkPUjenzwRhm_n5hNVyYpFRTeQOmpHJ-xlkLh0iHMIUzB0v45ti84uE1UKnEgTkudH7Gp7N6jDJMy821a1wnSHPY3se9mXmw2_U0A4crn8nEinA7_mdKbG7oflRgY1bInk0xSZ36DMTVTaiVYYz2GcESBO3BXmvoa5FpfiKGA7FGfTsKyuPf3Ig\"\r\n} */\r\n","export const refundAmountGQLTAG = `mutation stripeRefundAmtToCustomer(\r\n  $bookingHistId: String!\r\n  $adminId: String!\r\n  $customerId: String!\r\n) {\r\n  stripeRefundAmtToCustomer(\r\n    bookingHistId: $bookingHistId\r\n    adminId: $adminId\r\n    customerId: $customerId\r\n  ) {\r\n    data\r\n  }\r\n}\r\n`\r\n\r\n  /*\r\n  {\r\nbookingHistId: \"\",\r\nadminId:\"\",\r\ncustomerId: \"\",\r\n} */\r\n\r\n/*\r\nUSE IN HEADERS:\r\n{\r\n  \"token\":\"eyJhbGciOiJSUzI1NiIsImtpZCI6ImEwYjQwY2NjYmQ0OWQxNmVkMjg2MGRiNzIyNmQ3NDZiNmZhZmRmYzAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcm9ja29seS1kZXYiLCJhdWQiOiJyb2Nrb2x5LWRldiIsImF1dGhfdGltZSI6MTU3MjMyNzQwNiwidXNlcl9pZCI6IldSdHZFVkZBODVmSm9KNDVHWmsxWDZ1czdjUDIiLCJzdWIiOiJXUnR2RVZGQTg1ZkpvSjQ1R1prMVg2dXM3Y1AyIiwiaWF0IjoxNTcyMzQxMTUyLCJleHAiOjE1NzIzNDQ3NTIsImVtYWlsIjoia2lydXRoaWthQG5lb3NtZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsia2lydXRoaWthQG5lb3NtZS5jb20iXX0sInNpZ25faW5fcHJvdmlkZXIiOiJwYXNzd29yZCJ9fQ.PzvFa4HIUBd5F9Tj29HIjhUeKcX-d5ARh8epwmNHq9XtoRLJKQrdAFF9cUlvMdF2P0WCWAB0Wk7qN6SO3i_A1YXRHRrXziQbjL7OEOj1pTW1icapf7WT65NLMVNmqws15_RMFnNYX31WwY80JjoA7syRQH8Oz5QGkPUjenzwRhm_n5hNVyYpFRTeQOmpHJ-xlkLh0iHMIUzB0v45ti84uE1UKnEgTkudH7Gp7N6jDJMy821a1wnSHPY3se9mXmw2_U0A4crn8nEinA7_mdKbG7oflRgY1bInk0xSZ36DMTVTaiVYYz2GcESBO3BXmvoa5FpfiKGA7FGfTsKyuPf3Ig\"\r\n} */\r\n","export const chefFollowOrUnFollowGQLTAG = `mutation followOrUnfollowChef(\r\n  $pChefId: String!\r\n  $pCustomerId: String!\r\n  $pType: String!\r\n) {\r\n  followOrUnfollowChef(\r\n    input: { \r\n      pChefId: $pChefId, \r\n      pCustomerId: $pCustomerId, \r\n      pType: $pType \r\n    }\r\n  ) {\r\n    customerFollowChefs {\r\n      nodeId\r\n      chefId\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\n/*\r\n{\r\n  \"pChefId\":\"07fe580f-416c-4125-b6a3-6a0aa589a1ad\",\r\n  \"pCustomerId\":\"824373e4-46aa-459c-a819-5d76bede77b7\",\r\n  \"pType\":\"FOLLOW\" / \"UNFOLLOW\"\r\n}\r\n*/","export const updateStatusGQLTag = `\r\nmutation updateNotificationStatusByParams(\r\n    $pChefId: String\r\n    $pCustomerId: String\r\n    $pAdminId: String\r\n    $pStatusId: String\r\n    $pNotificationId: String\r\n  ) {\r\n    updateNotificationStatusByParams(\r\n      input: {\r\n        pChefId: $pChefId\r\n        pCustomerId: $pCustomerId\r\n        pAdminId: $pAdminId\r\n        pStatusId: $pStatusId\r\n        pNotificationId: $pNotificationId\r\n      }\r\n    ) {\r\n      notificationHistories {\r\n        notificationHistId\r\n        notificationAreaType\r\n        notificationTitle\r\n        notificationSubTitle\r\n        notificationDescription\r\n        notificationStatusId\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/*\r\n\r\n// Single Notification \r\n\r\n// For Chef\r\n{\r\n      \"pChefId\": \"\",\r\n      \"pCustomerId\": null,\r\n      \"pAdminId\": null,\r\n      \"pStatusId\": \"SEEN / DISMISSED\",\r\n      \"pNotificationId\": \"\"\r\n}\r\n\r\n// For Customer\r\n{\r\n      \"pChefId\": null,\r\n      \"pCustomerId\": \"\",\r\n      \"pAdminId\": null,\r\n      \"pStatusId\": \"SEEN / DISMISSED\",\r\n      \"pNotificationId\": \"\"\r\n}\r\n\r\n// For Admin\r\n{\r\n      \"pChefId\": null,\r\n      \"pCustomerId\": null,\r\n      \"pAdminId\": \"\",\r\n      \"pStatusId\": \"SEEN / DISMISSED\",\r\n      \"pNotificationId\": \"\"\r\n}\r\n\r\n// Multiple Notification\r\n\r\n// For Chef\r\n{\r\n      \"pChefId\": \"\",\r\n      \"pCustomerId\": null,\r\n      \"pAdminId\": null,\r\n      \"pStatusId\": \"SEEN / DISMISSED\",\r\n      \"pNotificationId\": null\r\n}\r\n\r\n// For Customer\r\n{\r\n      \"pChefId\": null,\r\n      \"pCustomerId\": \"\",\r\n      \"pAdminId\": null,\r\n      \"pStatusId\": \"SEEN / DISMISSED\",\r\n      \"pNotificationId\": null\r\n}\r\n\r\n// For Admin\r\n{\r\n      \"pChefId\": null,\r\n      \"pCustomerId\": null,\r\n      \"pAdminId\": \"\",\r\n      \"pStatusId\": \"SEEN / DISMISSED\",\r\n      \"pNotificationId\": null\r\n}\r\n*/","export const createGQLTAG = `mutation createReviewHistory(\r\n  $reviewPoint: Float!\r\n  $reviewDesc: String!\r\n  $reviewComplaintsDesc: [String]\r\n  $chefId: String!\r\n  $customerId: String!\r\n  $isReviewedByChefYn: Boolean!\r\n  $isReviewedByCustomerYn: Boolean!\r\n  $reviewRefTablePkId:String!\r\n  $reviewRefTableName:String!\r\n) {\r\n  createReviewHistory(\r\n    input: {\r\n      reviewHistory: {\r\n        reviewPoint: $reviewPoint\r\n        reviewDesc: $reviewDesc\r\n        reviewComplimentsDesc: $reviewComplaintsDesc\r\n        chefId: $chefId\r\n        customerId: $customerId\r\n        isReviewedByChefYn: $isReviewedByChefYn\r\n        isReviewedByCustomerYn: $isReviewedByCustomerYn\r\n        reviewRefTablePkId:$reviewRefTablePkId\r\n        reviewRefTableName:$reviewRefTableName\r\n      }\r\n    }\r\n  ) {\r\n    reviewHistory {\r\n      reviewHistId\r\n      reviewPoint\r\n      reviewComplimentsDesc\r\n      chefId\r\n      customerId\r\n      isReviewedByChefYn\r\n      isReviewedByCustomerYn\r\n      reviewRefTablePkId\r\n      reviewRefTableName\r\n    }\r\n  }\r\n}\r\n  `\r\n\r\n  /* {\r\n  \"reviewPoint\": 1.4,\r\n  \"reviewDesc\": \"Test\",\r\n  \"reviewComplaintsDesc\" : [\"good\",\"nice\"]\r\n  \"chefId\": \"8393af57-2e32-4140-9d41-53152f09f3c2 or null\",\r\n  \"customerId\": \"048d2184-bf3f-42a4-a108-568874fcbbfd or null\",\r\n  \"isReviewedByChefYn\": true or false,\r\n  \"isReviewedByCustomerYn\": false or false,\r\n  \"reviewRefTablePkId\": \"booking_hist_id else null\"\r\n  \"reviewRefTableName\":\"chef_booking_history else null \"\r\n} */","export const updateStatusByReviewIdGQLTAG = `mutation updateStatusByReviewId($pStatusId: String!, $pData: JSON!) {\r\n  updateStatusByReviewId(input: { pStatusId: $pStatusId, pData: $pData }) {\r\n    procedureResult {\r\n      message\r\n      success\r\n    }\r\n  }\r\n}`\r\n\r\n/*\r\n{\r\n  \"pStatusId\": \"BLOCKED\",\r\n  \"pData\": \"[{\\\"pId\\\":\\\"8393af57-2e32-4140-9d41-53152f09f3c2\\\",\\\"pReason\\\":null},{\\\"pId\\\":\\\"aa75d9fd-0743-432e-bc16-7008a9c6ae9c\\\",\\\"pReason\\\":null}]\"\r\n}\r\n*/","export const createMgmtHistGQLTAG = `mutation createCommissionManagementHistory(\r\n    $commissionValue: Float!\r\n    $commissionUnit: String!\r\n    $adminId: String!\r\n  ) {\r\n    createCommissionManagementHistory(\r\n      input: {\r\n        commissionManagementHistory: {\r\n          commissionValue: $commissionValue\r\n          commissionUnit: $commissionUnit\r\n          adminId: $adminId\r\n        }\r\n      }\r\n    ) {\r\n      commissionManagementHistory {\r\n        commissionManagementHistId\r\n        commissionValue\r\n        commissionUnit\r\n        adminId\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\n  /*{\r\n  \"commissionValue\": 1,\r\n  \"commissionUnit\": \"%\",\r\n  \"userId\": \"1ab7d2fb-999e-4ab3-aa69-00fa3116d896\"\r\n} */","export const createCustomerGQLTAG = `mutation stripeCreateCustomer(\r\n    $name: String!\r\n    $email: String!\r\n    $personChefId: String\r\n    $personCustomerId: String\r\n  ) {\r\n    stripeCreateCustomer(\r\n      name: $name\r\n      email: $email\r\n      personChefId: $personChefId\r\n      personCustomerId: $personCustomerId\r\n    ) {\r\n      data\r\n    }\r\n  }`;\r\n\r\n\r\n  /*\r\n  {\r\n  \"name\":\"Naaziya1\",\r\n  \"email\":\"naaziya1@neosme.com\",\r\n  \"personChefId\": \"5d4c99c6-1ff4-4dc3-a4f7-a1afad8af26e\",\r\n  \"personCustomerId\": \"3abc04c2-1633-4578-a348-74ce9951f4f5\"\r\n   }\r\n  */","export const attachCardToCustomerTAG = `mutation stripeAttachCardToCustomer(\r\n  $email: String\r\n  $customerId: String, \r\n  $cardToken: String!\r\n  ) {\r\n  stripeAttachCardToCustomer(\r\n    email:$email\r\n    customerId: $customerId, \r\n    cardToken: $cardToken\r\n    ) {\r\n    data\r\n  }\r\n}`;\r\n\r\n\r\n/*\r\n{\r\n  // If firebase has no email in \r\n  \"email\":null,\r\n  \"customerId\":null,\r\n  \"cardToken\":\"tok_visa\"\r\n}\r\n*/\r\n\r\n// Add token in headers\r\n/*\r\n{\r\n  \"token\":\"eyJhbGciOiJSUzI1NiIsImtpZCI6IjI5NGNlMzNhNWQ3MmI0NjYyNzI3ZGFiYmRhNzVjZjg4Y2Y5OTg4MGUiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZS5jb20vcm9ja29seS1kZXYiLCJhdWQiOiJyb2Nrb2x5LWRldiIsImF1dGhfdGltZSI6MTU3MDI4MTc0MSwidXNlcl9pZCI6IldSdHZFVkZBODVmSm9KNDVHWmsxWDZ1czdjUDIiLCJzdWIiOiJXUnR2RVZGQTg1ZkpvSjQ1R1prMVg2dXM3Y1AyIiwiaWF0IjoxNTcwMjgxNzQxLCJleHAiOjE1NzAyODUzNDEsImVtYWlsIjoia2lydXRoaWthQG5lb3NtZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImZpcmViYXNlIjp7ImlkZW50aXRpZXMiOnsiZW1haWwiOlsia2lydXRoaWthQG5lb3NtZS5jb20iXX0sInNpZ25faW5fcHJvdmlkZXIiOiJwYXNzd29yZCJ9fQ.bvaYHeL0AUGTW5HDwXPXRCtVZ23ODOqOSZ2y2GJqdMIMvWSpkmOmTNTGHOLqDolFCDskoYs6P0Yv8lEXizEaONB3zn6tTzFxmcf3HJQLn91KaU1nLd5up2-fKbThT0P3oUbrOUuplVp8kcDB7Lu6qUkrrQeRaJILSD0slA3ALzUUlK9BwyVW_nqNjyjnmWBtluwV_kb0qS7I-S9OrOJb7yMKSr_QM81er5Ydpx4XQLntu4ROWl6VgA3f-DF3Ls9LF1xtjhQ7Gr3vtMiBqISWWOZ98GGucxEqECXeZcJ1gyJIF_4ZudcOYXUOzhFfd00WmR67WxC-ebfr2p79BsgVdw\"\r\n}\r\n*/","export const editCardGQLTAG = `mutation stripeEditCard(\r\n    $customerId: String!\r\n    $cardId: String!\r\n    $name: String!\r\n    $addressCity: String\r\n    $addressCountry: String\r\n    $addressLine1: String\r\n    $addressLine2: String\r\n    $addressState: String\r\n    $addressZip: String\r\n    $expMonth: Int!\r\n    $expYear: Int!\r\n  ) {\r\n    stripeEditCard(\r\n      customerId: $customerId\r\n      cardId: $cardId\r\n      name: $name\r\n      addressCity: $addressCity\r\n      addressCountry: $addressCountry\r\n      addressLine1: $addressLine1\r\n      addressLine2: $addressLine2\r\n      addressState: $addressState\r\n      addressZip: $addressZip\r\n      expMonth: $expMonth\r\n      expYear: $expYear\r\n    ) {\r\n      data\r\n    }\r\n  }`;\r\n\r\n  /*\r\n  {\r\n  \"customerId\": \"cus_FsNbPK6tMGOdDq\",\r\n  \"cardId\": \"card_1FMdaRAZeKBPGDhHdZoBBBVz\",\r\n  \"name\": \"Naaziya\",\r\n  \"addressCity\": \"Salem\",\r\n  \"addressCountry\": \"INDIA\",\r\n  \"addressLine1\": \"Nehru Street\",\r\n  \"addressLine2\": \"Old Suarmangalam\",\r\n  \"addressState\": \"Tamil Nadu\",\r\n  \"addressZip\": \"636005\",\r\n  \"expMonth\": 10,\r\n  \"expYear\": 2024\r\n}\r\n  */","export const removeCardGQLTAG = `mutation stripeRemoveCard($customerId: String!, $cardId: String!) {\r\n    stripeRemoveCard(customerId: $customerId, cardId: $cardId) {\r\n      data\r\n    }\r\n  }`;\r\n\r\n/*\r\n{\r\n  \"customerId\": \"cus_FsNbPK6tMGOdDq\",\r\n  \"cardId\": \"card_1FMdBYAZeKBPGDhHWiVXNGKE\"\r\n}\r\n*/","export const chargeCardGQLTAG = `mutation stripeChargeCard(\r\n    $customerId: String!\r\n    $cardId: String!\r\n    $amount: Float!\r\n    $unit: String!\r\n  ) {\r\n    stripeChargeCard(\r\n      customerId: $customerId\r\n      cardId: $cardId\r\n      amount: $amount\r\n      unit: $unit\r\n    ) {\r\n      data\r\n    }\r\n  }`;\r\n\r\n\r\n/*\r\n  {\r\n  \"customerId\":\"cus_Fw4XsFWDSXwGpK\",\r\n  \"cardId\":\"card_1FQCOuAZeKBPGDhH1nTHJUeP\",\r\n  \"amount\": 100,\r\n  \"unit\": \"USD\"\r\n}\r\n  */","export const removeChefAccountGQLTAG = `mutation stripeRemoveChefAccount($chefId: String!, $accountId: String!) {\r\n    stripeRemoveChefAccount(chefId: $chefId, accountId: $accountId) {\r\n      data\r\n    }\r\n  }`\r\n\r\n  /*\r\n  {\r\n  \"chefId\": \"\",\r\n  \"accountId\":\"\"\r\n} */","export const createGQLTAG=`mutation createFeedbackHistory(\r\n    $chefId: String!\r\n    $customerId: String!\r\n    $feedbackDesc: String!\r\n    $feedbackGivenByCustomerYn: Boolean\r\n    $feedbackGivenByChefYn: Boolean\r\n  ) {\r\n    createFeedbackHistory(\r\n      input: {\r\n        feedbackHistory: {\r\n          chefId: $chefId\r\n          customerId: $customerId\r\n          feedbackDesc: $feedbackDesc\r\n          feedbackGivenByChefYn: $feedbackGivenByChefYn\r\n          feedbackGivenByCustomerYn: $feedbackGivenByCustomerYn\r\n        }\r\n      }\r\n    ) {\r\n      feedbackHistory {\r\n        feedbackHistId\r\n        chefId\r\n        customerId\r\n        feedbackDesc\r\n        feedbackGivenByChefYn\r\n        feedbackGivenByCustomerYn\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\n  /*{\r\n  \"chefId\": \"3d90c4f6-a37a-4057-8a19-745b277a65a5\",\r\n  \"customerId\": \"388fe4d2-d747-4479-ac42-91431313ce1f\",\r\n  \"feedbackDesc\": \"Test Desc\",\r\n  \"feedbackGivenByCustomerYn\": true,\r\n  \"feedbackGivenByChefYn\": false\r\n  } */","export const addUserDeviceTokenGQLTAG = `mutation createUserDeviceToken(\r\n    $userId: String!\r\n    $userDeviceType: String!\r\n    $userDeviceToken: String!\r\n  ) {\r\n    createUserDeviceToken(\r\n      input: {\r\n        userDeviceToken: {\r\n          userId: $userId\r\n          userDeviceType: $userDeviceType\r\n          userDeviceToken: $userDeviceToken\r\n        }\r\n      }\r\n    ) {\r\n      userDeviceToken {\r\n        userDeviceTokenId\r\n        userDeviceType\r\n        userDeviceToken\r\n      }\r\n    }\r\n  }`\r\n\r\n  /*{\r\n  \"userId\":  \"\",\r\n  \"userDeviceType\": \"ANDROID / IOS\",\r\n  \"userDeviceToken\": \"jcdhcgdhgdhgch\"\r\n}*/","export const removeUserDeviceTokenGQLTAG = `mutation removeDeviceToken($pDeviceToken: String!) {\r\n    removeUserDeviceToken(input: { pDeviceToken: $pDeviceToken }) {\r\n      procedureResult {\r\n        success\r\n        message\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n/*\r\n{\r\n  \"pDeviceToken\": \"\"\r\n}\r\n*/","export const createCuisineTypeGQLTAG = `mutation createCuisineTypeMaster(\r\n  $cusineTypeName: String!\r\n  $chefId: String\r\n  $customerId: String\r\n) {\r\n  createCuisineTypeMaster(\r\n    input: {\r\n      cuisineTypeMaster: {\r\n        cusineTypeName: $cusineTypeName\r\n        cuisineTypeDesc: $cusineTypeName\r\n        isManuallyYn: true\r\n        chefId: $chefId\r\n        customerId: $customerId\r\n      }\r\n    }\r\n  ) {\r\n    cuisineTypeMaster {\r\n      cuisineTypeId\r\n      cusineTypeName\r\n      cuisineTypeDesc\r\n      isManuallyYn\r\n      chefId\r\n      customerId\r\n      isAdminApprovedYn\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n/*\r\n   {\r\n  \"cusineTypeName\": \"\",\r\n  \"chefId\": \"\",\r\n  \"customerId\":\"\"\r\n}\r\n   */\r\n","export const createDishTypeGQLTAG = `mutation createDishTypeMaster(\r\n    $dishTypeName: String!\r\n    $chefId: String\r\n    $customerId:String\r\n  ) {\r\n    createDishTypeMaster(\r\n      input: {\r\n        dishTypeMaster: {\r\n          dishTypeName: $dishTypeName\r\n          dishTypeDesc: $dishTypeName\r\n          isManuallyYn: true\r\n          chefId: $chefId\r\n          customerId: $customerId\r\n        }\r\n      }\r\n    ) {\r\n      dishTypeMaster {\r\n        dishTypeId\r\n        dishTypeName\r\n        dishTypeDesc\r\n        isManuallyYn\r\n        chefId\r\n        isAdminApprovedYn\r\n        createdAt\r\n        updatedAt\r\n        customerId\r\n      }\r\n    }\r\n  }`;\r\n\r\n/*\r\n  {\r\n  \"dishTypeName\": \"Test Dish\",\r\n  \"chefId\": \"1e2e76da-3526-4fac-8b65-f31f7b1fc5ea\" / null,\r\n  \"customerId\":\"1e2e76da-3526-4fac-8b65-f31f7b1fc5ea\" / null,\r\n}\r\n  */\r\n","export const updateCuisineTypeGQLTAG = `mutation updateCuisineTypeMasterByCuisineTypeId(\r\n    $cuisineTypeId: String!\r\n    $statusId: String!\r\n  ) {\r\n    updateCuisineTypeMasterByCuisineTypeId(\r\n      input: {\r\n        cuisineTypeId: $cuisineTypeId\r\n        cuisineTypeMasterPatch: { statusId: $statusId }\r\n      }\r\n    ) {\r\n      cuisineTypeMaster {\r\n        statusId\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\n  /*\r\n  {\r\n  \"cuisineTypeId\": \"fec272fd-38e2-42a3-8495-f83fa174eff1\",\r\n  \"statusId\": \"APPROVED\" / \"REJECTED\"\r\n} */","export const updateDishTypeGQLTAG = `mutation updateDishTypeMasterByDishTypeId(\r\n    $dishTypeId: String!\r\n    $statusId: String!\r\n  ) {\r\n    updateDishTypeMasterByDishTypeId(\r\n      input: {\r\n        dishTypeId: $dishTypeId\r\n        dishTypeMasterPatch: { statusId: $statusId }\r\n      }\r\n    ) {\r\n      dishTypeMaster {\r\n        isAdminApprovedYn\r\n      }\r\n    }\r\n  }\r\n  \r\n    `\r\n\r\n    /*\r\n    {\r\n \t\"dishTypeId\": \"\",\r\n  \"statusId\": \"APPROVED\" / \"REJECTED\"\r\n} */","export const createAllergyTypeGQLTAG = `mutation createAllergyTypeMaster(\r\n  $allergyTypeName: String!\r\n  $chefId: String\r\n  $customerId: String\r\n) {\r\n  createAllergyTypeMaster(\r\n    input: {\r\n      allergyTypeMaster: {\r\n        allergyTypeName: $allergyTypeName\r\n        allergyTypeDesc: $allergyTypeName\r\n        isManuallyYn: true\r\n        chefId: $chefId\r\n        customerId: $customerId\r\n      }\r\n    }\r\n  ) {\r\n    allergyTypeMaster {\r\n      allergyTypeId\r\n      allergyTypeName\r\n      allergyTypeDesc\r\n      statusId\r\n      isManuallyYn\r\n      chefId\r\n      customerId\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n}`;\r\n\r\n/*\r\n  {\r\n  \"allergyTypeName\": \"Test Dish\",\r\n  \"chefId\": \"1e2e76da-3526-4fac-8b65-f31f7b1fc5ea\" / null,\r\n  \"customerId\":\"1e2e76da-3526-4fac-8b65-f31f7b1fc5ea\" / null,\r\n}\r\n  */\r\n","export const createDietaryRestrictionsTypeGQLTAG = `mutation createDietaryRestrictionsTypeMaster(\r\n  $dietaryRestrictionsTypeName: String!\r\n  $chefId: String\r\n  $customerId: String\r\n) {\r\n  createDietaryRestrictionsTypeMaster(\r\n    input: {\r\n      dietaryRestrictionsTypeMaster: {\r\n        dietaryRestrictionsTypeName: $dietaryRestrictionsTypeName\r\n        dietaryRestrictionsTypeDesc: $dietaryRestrictionsTypeName\r\n        isManuallyYn: true\r\n        chefId: $chefId\r\n        customerId: $customerId\r\n      }\r\n    }\r\n  ) {\r\n    dietaryRestrictionsTypeMaster {\r\n      dietaryRestrictionsTypeId\r\n      dietaryRestrictionsTypeName\r\n      dietaryRestrictionsTypeDesc\r\n      statusId\r\n      isManuallyYn\r\n      chefId\r\n      customerId\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n/*\r\n  {\r\n  \"dietaryRestrictionsTypeName\": \"Test Dish\",\r\n  \"chefId\": \"1e2e76da-3526-4fac-8b65-f31f7b1fc5ea\" / null,\r\n  \"customerId\":\"1e2e76da-3526-4fac-8b65-f31f7b1fc5ea\" / null,\r\n}\r\n  */\r\n","export const createKitchenEquipmentTypesGQLTAG = `mutation createKitchenEquipmentTypeMaster(\r\n  $kitchenEquipmentTypeName: String!\r\n  $chefId: String\r\n  $customerId: String\r\n) {\r\n  createKitchenEquipmentTypeMaster(\r\n    input: {\r\n      kitchenEquipmentTypeMaster: {\r\n        kitchenEquipmentTypeName: $kitchenEquipmentTypeName\r\n        kitchenEquipmentTypeDesc: $kitchenEquipmentTypeName\r\n        isManuallyYn: true\r\n        chefId: $chefId\r\n        customerId: $customerId\r\n      }\r\n    }\r\n  ) {\r\n    kitchenEquipmentTypeMaster {\r\n      kitchenEquipmentTypeId\r\n      kitchenEquipmentTypeName\r\n      kitchenEquipmentTypeDesc\r\n      statusId\r\n      isManuallyYn\r\n      chefId\r\n      customerId\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n}`;\r\n\r\n/*\r\n{\r\n  \"kitchenEquipmentTypeName\": \"Test Dish\",\r\n  \"chefId\": \"1e2e76da-3526-4fac-8b65-f31f7b1fc5ea\" / null,\r\n  \"customerId\":\"1e2e76da-3526-4fac-8b65-f31f7b1fc5ea\" / null,\r\n}\r\n*/\r\n","export const createAdditionalServiceTypeGQLTAG = `mutation createAdditionalServiceTypeMaster(\r\n  $additionalServiceTypeName: String!\r\n  $statusId: String!\r\n) {\r\n  createAdditionalServiceTypeMaster(\r\n    input: {\r\n      additionalServiceTypeMaster: {\r\n        additionalServiceTypeName: $additionalServiceTypeName\r\n        additionalServiceTypeDesc: $additionalServiceTypeName\r\n        statusId: $statusId\r\n      }\r\n    }\r\n  ) {\r\n    additionalServiceTypeMaster {\r\n      nodeId\r\n      additionalServiceTypeId\r\n      additionalServiceTypeName\r\n      additionalServiceTypeDesc\r\n      statusId\r\n      statusTypeMasterByStatusId {\r\n        statusTypeId\r\n        statusTypeName\r\n        statusTypeDesc\r\n      }\r\n    }\r\n  }\r\n}`;\r\n\r\n  /* \r\n  {\r\n    \"additionalServiceTypeName\": \"ddddddd\",\r\n    \"statusId\":\"APPROVED\"\r\n  }\r\n  */","export const updateAdditionalServiceTypeGQLTAG = `mutation updateAdditionalServiceTypeMasterByAdditionalServiceTypeId(\r\n    $additionalServiceTypeId: String!\r\n    $additionalServiceTypeName: String!\r\n    $statusId: String!\r\n  ) {\r\n    updateAdditionalServiceTypeMasterByAdditionalServiceTypeId(\r\n      input: {\r\n        additionalServiceTypeId: $additionalServiceTypeId\r\n        additionalServiceTypeMasterPatch: {\r\n          additionalServiceTypeName: $additionalServiceTypeName\r\n          additionalServiceTypeDesc: $additionalServiceTypeName\r\n          statusId: $statusId\r\n        }\r\n      }\r\n    ) {\r\n      additionalServiceTypeMaster {\r\n        nodeId\r\n        additionalServiceTypeId\r\n        additionalServiceTypeName\r\n        additionalServiceTypeDesc\r\n        statusId\r\n        statusTypeMasterByStatusId {\r\n          statusTypeId\r\n          statusTypeName\r\n          statusTypeDesc\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `;\r\n\r\n/**\r\n {\r\n  additionalServiceTypeId: \"\"\r\n  additionalServiceTypeName: \"\"\r\n  statusId: \"\"\r\n }\r\n */","export const createNotesGQLTAG=`mutation createNotesHistory(\r\n    $notesDescription: String!\r\n    $tablePkId: String!\r\n    $chefId: String\r\n    $customerId: String\r\n  ) {\r\n    createNotesHistory(\r\n      input: {\r\n        notesHistory: {\r\n          notesDescription: $notesDescription\r\n          tableName: \"chef_booking_history\"\r\n          tablePkId: $tablePkId\r\n          chefId: $chefId\r\n          customerId: $customerId\r\n        }\r\n      }\r\n    ) {\r\n      notesHistory {\r\n        notesHistId\r\n        notesDescription\r\n        tableName\r\n        tablePkId\r\n        chefId\r\n        customerId\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\n  /*\r\n  {\r\n  \"notesDescription\": \"Test\",\r\n  \"tablePkId\": \"f7e99d4f-f744-42ab-a4c4-ae6b13adb9d4\",\r\n  \"chefId\": \"38f3741a-d661-457a-8313-3ea61ca40870\"\r\n} */","export const createMsgGQLTAG = `mutation createMessageHistory(\r\n  $fromEntityId: String!\r\n  $conversationHistId: String!\r\n  $msgText: String!\r\n) {\r\n  createMessageHistory(\r\n    input: {\r\n      messageHistory: {\r\n        fromEntityId: $fromEntityId\r\n        conversationHistId: $conversationHistId\r\n        msgText: $msgText\r\n      }\r\n    }\r\n  ) {\r\n    messageHistory {\r\n      messageHistoryId\r\n      fromEntityId\r\n      conversationHistId\r\n      msgText\r\n      fromEntityDetails\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n/*{\r\n  \"fromEntityId\": \"\",\r\n  \"conversationHistId\": \"\",\r\n  \"msgText\": \"\"\r\n} */","/** @format */\r\n\r\nexport default {\r\n  SUCCESS: 'success',\r\n  FAIL: 'fail',\r\n  NOT_ADMIN: 'You are not an admin',\r\n  LINK_SENT: 'Reset password link has been sent to your mail',\r\n  LINK_SENT_USERS: 'Reset password link has been sent to their mail',\r\n  EMAIL_INVALID: 'auth/invalid-email',\r\n  EMAIL_INVALID_MESSAGE: 'The email address is not valid',\r\n  AUTH_INVALID: 'auth/wrong-password',\r\n  AUTH_INVALID_MESSAGE: 'Wrong username or password',\r\n  USER_NOT_FOUND: 'auth/user-not-found',\r\n  USER_NOT_FOUND_MESSAGE: 'User not found',\r\n  UPDATE_FAIL: 'Fail to update',\r\n  NETWORK_ONLY: 'network-only',\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  LOGIN,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  RESET_PASSWORD,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAIL,\r\n  FORGOT_PASSWORD,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_FAIL,\r\n} from './types.js'\r\nimport firebase from 'firebase'\r\nimport {message} from 'antd'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\nimport {StoreInLocal} from '../utils/localStorage'\r\n\r\nexport const loginAction = (params, client) => dispatch => {\r\n  dispatch({type: LOGIN})\r\n  try {\r\n    const settings = {timestampsInSnapshots: true}\r\n    const db = firebase.firestore()\r\n    firebase\r\n      .auth()\r\n      .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\n      .then(val => {\r\n        db.settings(settings)\r\n        firebase\r\n          .auth()\r\n          .signInWithEmailAndPassword(params.email, params.password)\r\n          .then(user => {\r\n            //get current user id\r\n            const current = firebase.auth().currentUser\r\n            //Fetch admin id from db\r\n            fetchAdminId\r\n              .storeAdminId(current, client)\r\n              .then(async val => {\r\n                StoreInLocal('uid', val)\r\n                setTimeout(() => {\r\n                  window.location.reload()\r\n                }, 1000)\r\n                //return dispatch({type: LOGIN_SUCCESS, payload: CommonLabels.SUCCESS})\r\n              })\r\n              .catch(err => {\r\n                return dispatch({type: LOGIN_FAIL, payload: CommonLabels.FAIL})\r\n              })\r\n          })\r\n          .catch(err => {\r\n            catchError(err)\r\n            return dispatch({type: LOGIN_FAIL, payload: CommonLabels.FAIL})\r\n          })\r\n      })\r\n      .catch(function(error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n      })\r\n  } catch (err) {\r\n    message.error(err.message)\r\n    return dispatch({type: LOGIN_FAIL, payload: err.message})\r\n  }\r\n}\r\nexport const resetPassword = (email, client) => async dispatch => {\r\n  console.log('emeil', email)\r\n  dispatch({type: RESET_PASSWORD})\r\n  try {\r\n    firebase\r\n      .auth()\r\n      .sendPasswordResetEmail(email)\r\n      .then(user => {\r\n        message.success(CommonLabels.LINK_SENT_USERS)\r\n        return dispatch({type: RESET_PASSWORD_SUCCESS, payload: CommonLabels.SUCCESS})\r\n      })\r\n      .catch(error => {\r\n        catchError(error)\r\n        return dispatch({type: RESET_PASSWORD_FAIL, payload: CommonLabels.FAIL})\r\n      })\r\n  } catch (err) {\r\n    return dispatch({type: RESET_PASSWORD_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const adminForgotPassword = (email, sentTo, client) => async dispatch => {\r\n  dispatch({type: FORGOT_PASSWORD})\r\n  try {\r\n    const gqlValue = gqlTag.query.admin.checkUserAdminGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {\r\n        pAdminEmail: email,\r\n      },\r\n    })\r\n\r\n    if (data && data.checkUserIsAdmin) {\r\n      firebase\r\n        .auth()\r\n        .sendPasswordResetEmail(email)\r\n        .then(user => {\r\n          if (sentTo === 'admin') {\r\n            message.success(CommonLabels.LINK_SENT)\r\n          } else {\r\n            message.success(CommonLabels.LINK_SENT_USERS)\r\n          }\r\n          return dispatch({type: FORGOT_PASSWORD_SUCCESS, payload: CommonLabels.SUCCESS})\r\n        })\r\n        .catch(error => {\r\n          catchError(error)\r\n          return dispatch({type: FORGOT_PASSWORD_FAIL, payload: CommonLabels.FAIL})\r\n        })\r\n    } else {\r\n      message.error(CommonLabels.NOT_ADMIN)\r\n      return dispatch({type: FORGOT_PASSWORD_FAIL, payload: CommonLabels.FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: FORGOT_PASSWORD_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nconst catchError = error => {\r\n  const errorCode = error.code\r\n  const errorMessage = error.message\r\n  switch (errorCode) {\r\n    case CommonLabels.EMAIL_INVALID:\r\n      message.error(CommonLabels.EMAIL_INVALID_MESSAGE)\r\n      break\r\n    case CommonLabels.AUTH_INVALID:\r\n      message.error(CommonLabels.AUTH_INVALID_MESSAGE)\r\n      break\r\n    case CommonLabels.USER_NOT_FOUND:\r\n      message.error(CommonLabels.USER_NOT_FOUND_MESSAGE)\r\n      break\r\n    default:\r\n      message.error(errorMessage)\r\n  }\r\n}\r\n\r\nconst fetchAdminId = {\r\n  storeAdminId: (current, client) => {\r\n    return new Promise((resolve, reject) => {\r\n      current\r\n        .getIdToken()\r\n        .then(async val => {\r\n          //Store firebase auth token in local storage\r\n          StoreInLocal('firebaseAuthToken', val)\r\n          const gqlValue = gqlTag.mutation.auth.authtenticateGQLTAG\r\n          const mutation = gql`\r\n            ${gqlValue}\r\n          `\r\n          const {data} = await client.mutate({\r\n            mutation,\r\n            variables: {\r\n              token: val,\r\n              roleType: 'ADMIN',\r\n              authenticateType: 'LOGIN',\r\n              extra: null,\r\n            },\r\n          })\r\n          if (\r\n            data &&\r\n            data.authenticate &&\r\n            data.authenticate.data &&\r\n            data.authenticate.data.adminId\r\n          ) {\r\n            resolve(data.authenticate.data.adminId)\r\n          } else {\r\n            message.error(CommonLabels.NOT_ADMIN)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          reject(err)\r\n        })\r\n    })\r\n  },\r\n}\r\n","/** @format */\r\n\r\nexport const LOGIN = 'login'\r\nexport const LOGIN_SUCCESS = 'login_success'\r\nexport const LOGIN_FAIL = 'login_fail'\r\n\r\nexport const FORGOT_PASSWORD = 'forgot_password_fail'\r\nexport const FORGOT_PASSWORD_SUCCESS = 'forgot_password_success'\r\nexport const FORGOT_PASSWORD_FAIL = 'forgot_password_fail'\r\n\r\nexport const RESET_PASSWORD = 'reset_password_fail'\r\nexport const RESET_PASSWORD_SUCCESS = 'reset_password_success'\r\nexport const RESET_PASSWORD_FAIL = 'reset_password_fail'\r\n\r\nexport const GET_CHEF = 'get_chef'\r\nexport const GET_CHEF_SUCCESS = 'get_chef_success'\r\nexport const GET_CHEF_FAIL = 'get_chef_fail'\r\n\r\nexport const GET_CHEF_CUISINE = 'get_chef_cuisine'\r\nexport const GET_CHEF_CUISINE_SUCCESS = 'get_chef__cuisine_success'\r\nexport const GET_CHEF_CUISINE_FAIL = 'get_chef__cuisine_fail'\r\n\r\nexport const GET_CHEF_DISH = 'get_chef_dish'\r\nexport const GET_CHEF_DISH_SUCCESS = 'get_chef_dish_success'\r\nexport const GET_CHEF_DISH_FAIL = 'get_chef_dish_fail'\r\n\r\nexport const GET_BOOKING_HISTORY = 'get_booking_history'\r\nexport const GET_BOOKING_HISTORY_SUCCESS = 'get_booking_history_success'\r\nexport const GET_BOOKING_HISTORY_FAIL = 'get_booking_history_fail'\r\n\r\nexport const GET_ADMIN_PROFILE = 'get_admin_profile'\r\nexport const GET_ADMIN_PROFILE_SUCCESS = 'get_admin_profile_success'\r\nexport const GET_ADMIN_PROFILE_FAIL = 'get_admin_profile_fail'\r\n\r\nexport const GET_CUSTOMER = 'get_customer'\r\nexport const GET_CUSTOMER_SUCCESS = 'get_customer_success'\r\nexport const GET_CUSTOMER_FAIL = 'get_customer_fail'\r\n\r\nexport const GET_CHEF_DETAILS = 'get_chef_details'\r\nexport const GET_CHEF_SUCCESS_DETAILS = 'get_chef_success_details'\r\nexport const GET_CHEF_FAIL_DETAILS = 'get_chef_fail_details'\r\n\r\nexport const GET_BOOKING_DETAILS = 'get_booking_details'\r\nexport const GET_BOOKING_SUCCESS_DETAILS = 'get_booking_success_details'\r\nexport const GET_BOOKING_FAIL_DETAILS = 'get_booking_fail_details'\r\n\r\nexport const GET_BOOKING_REQUESTED_DETAILS = 'get_booking_requested_details'\r\nexport const GET_BOOKING_REQUESTED_SUCCESS_DETAILS = 'get_booking_requested_success_details'\r\nexport const GET_BOOKING_REQUESTED_FAIL_DETAILS = 'get_booking_requested_fail_details'\r\n\r\nexport const GET_CUSTOMER_DETAILS = 'get_customer_details'\r\nexport const GET_CUSTOMER_SUCCESS_DETAILS = 'get_customer_success_details'\r\nexport const GET_CUSTOMER_FAIL_DETAILS = 'get_customer_fail_details'\r\n\r\nexport const UPDATE_CHEF_STATUS = 'update_chef_status'\r\nexport const UPDATE_CHEF_STATUS_SUCCESS = 'update_chef_status_success'\r\nexport const UPDATE_CHEF_STATUS_FAIL = 'update_chef_status_fail'\r\n\r\nexport const UPDATE_CUSINIE_STATUS = 'update_cusinie_status'\r\nexport const UPDATE_CUSINIE_STATUS_SUCCESS = 'update_cusinie_status_success'\r\nexport const UPDATE_CUSINIE_STATUS_FAIL = 'update_cusinie_status_fail'\r\n\r\nexport const UPDATE_DISH_STATUS = 'update_dish_status'\r\nexport const UPDATE_DISH_STATUS_SUCCESS = 'update_dish_status_success'\r\nexport const UPDATE_DISH_STATUS_FAIL = 'update_dish_status_fail'\r\n\r\nexport const UPDATE_CUSTOMER_STATUS = 'update_customer_status'\r\nexport const UPDATE_CUSTOMER_STATUS_SUCCESS = 'update_customer_status_success'\r\nexport const UPDATE_CUSTOMER_STATUS_FAIL = 'update_customer_status_fail'\r\n\r\nexport const UPDATE_COMMISSION = 'update_commission'\r\nexport const UPDATE_COMMISSION_SUCCESS = 'update_commission_success'\r\nexport const UPDATE_COMMISSION_FAIL = 'update_commission_fail'\r\n\r\nexport const GET_REVIEWS_AND_RATINGS_HISTORY = 'get_reviews_and_ratings_history'\r\nexport const GET_REVIEWS_AND_RATINGS_SUCCESS = 'get_reviews_and_ratings_success'\r\nexport const GET_REVIEWS_AND_RATINGS_FAIL = 'get_reviews_and_ratings_fail'\r\n\r\nexport const GET_COMMISSION = 'get_commission'\r\nexport const GET_COMMISSION_SUCCESS = 'get_commission_success'\r\nexport const GET_COMMISSION_FAIL = 'get_commission_fail'\r\n\r\nexport const GET_REVIEWS_AND_RATINGS_DETAILS = 'get reviews and ratings details'\r\nexport const GET_REVIEWS_AND_RATINGS_DETAILS_SUCCESS = 'get reviews and ratings success'\r\nexport const GET_REVIEWS_AND_RATINGS_DETAILS_FAIL = 'get reviews and ratings fail'\r\n\r\nexport const GET_TOTAL_COMMISON_EARNED = 'get total commision earned'\r\nexport const GET_TOTAL_COMMISON_EARNED_SUCCESS = 'get total commision earned success'\r\nexport const GET_TOTAL_COMMISON_EARNED_FAIL = 'get total commision earned fail'\r\n\r\nexport const UPDATE_REVIEW_STATUS = 'update review status'\r\nexport const UPDATE_REVIEW_STATUS_SUCCESS = 'update review status success'\r\nexport const UPDATE_REVIEW_STATUS_FAIL = 'update review status fail'\r\n\r\nexport const SEND_MAIL = 'send_mail'\r\nexport const SEND_MAIL_SUCCESS = 'send_mail_success'\r\nexport const SEND_MAIL_FAIL = 'send_mail_fail'\r\n\r\nexport const GET_BUSINESS_PROGRESS_DATA = 'get bussiness progress data'\r\nexport const GET_BUSINESS_PROGRESS_DATA_SUCCESS = 'get bussiness progress data success'\r\nexport const GET_BUSINESS_PROGRESS_DATA_FAIL = 'get bussiness progress data fail'\r\n\r\nexport const SEARCH = 'search'\r\nexport const SEARCH_SUCCESS = 'search_success'\r\nexport const SEARCH_FAIL = 'search_fail'\r\n\r\nexport const REFUND_TO_CUSTOMER = 'refund_to_customer'\r\nexport const REFUND_TO_CUSTOMER_SUCCESS = 'refund_to_customer_success'\r\nexport const REFUND_TO_CUSTOMER_FAIL = 'refund_to_customer_fail'\r\n\r\nexport const SENT_TO_CHEF = 'sent_to_chef'\r\nexport const SENT_TO_CHEF_SUCCESS = 'sent_to_chef_success'\r\nexport const SENT_TO_CHEF_FAIL = 'sent_to_chef_fail'\r\n\r\nexport const GET_CUISINES = 'get_cuisine'\r\nexport const GET_CUISINES_SUCCESS = 'get_cuisine_success'\r\nexport const GET_CUISINES_FAIL = 'get_cuisine_fail'\r\n\r\nexport const GET_ADDITIONAL_SERVICE = 'get_additional_service'\r\nexport const GET_ADDITIONAL_SERVICE_SUCCESS = 'get_additional_service_success'\r\nexport const GET_ADDITIONAL_SERVICE_FAIL = 'get_additional_service_fail'\r\n\r\nexport const GET_DISHES = 'get_dishes'\r\nexport const GET_DISHES_SUCCESS = 'get_dishes_success'\r\nexport const GET_DISHES_FAIL = 'get_dishes_fail'\r\n\r\nexport const GET_CANCELLATION_TIME = 'get_cancellation_time'\r\nexport const GET_CANCELLATION_TIME_SUCCESS = 'get_cancellation_time_success'\r\nexport const GET_CANCELLATION_TIME_FAIL = 'get_cancellation_time_fail'\r\n\r\nexport const UPDATE_CANCELLATION_TIME = 'update_cancellation_time'\r\nexport const UPDATE_CANCELLATION_TIME_SUCCESS = 'update_cancellation_time_success'\r\nexport const UPDATE_CANCELLATION_TIME_FAIL = 'update_cancellation_time_fail'\r\n\r\nexport const CREATE_ADDITIONAL_SERVICE = 'create_additional_service'\r\nexport const CREATE_ADDITIONAL_SERVICE_SUCCESS = 'create_additional_service_success'\r\nexport const CREATE_ADDITIONAL_SERVICE_FAIL = 'create_additional_service_fail'\r\n\r\nexport const DELETE_ADDITIONAL_SERVICE = 'delete_additional_service'\r\nexport const DELETE_ADDITIONAL_SERVICE_SUCCESS = 'delete_additional_service_success'\r\nexport const DELETE_ADDITIONAL_SERVICE_FAIL = 'delete_additional_service_fail'\r\n\r\nexport const UPDATE_ADDITIONAL_SERVICE = 'update_additional_service'\r\nexport const UPDATE_ADDITIONAL_SERVICE_SUCCESS = 'update_additional_service_success'\r\nexport const UPDATE_ADDITIONAL_SERVICE_FAIL = 'update_additional_service_fail'\r\n","/** @format */\r\n\r\nimport {\r\n  GET_CHEF,\r\n  GET_CHEF_SUCCESS,\r\n  GET_CHEF_FAIL,\r\n  GET_CHEF_DETAILS,\r\n  GET_CHEF_SUCCESS_DETAILS,\r\n  GET_CHEF_FAIL_DETAILS,\r\n  UPDATE_CHEF_STATUS,\r\n  UPDATE_CHEF_STATUS_SUCCESS,\r\n  UPDATE_CHEF_STATUS_FAIL,\r\n} from './types.js'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\n\r\nexport const getChefList = (client, offset, startTime, endTime, status) => async dispatch => {\r\n  dispatch({type: GET_CHEF})\r\n  try {\r\n    let filterValue = {}\r\n    if (startTime === null && endTime === null && status[0] === 'All') {\r\n      filterValue = {\r\n        first: offset,\r\n        offset: 0,\r\n      }\r\n    }\r\n    if (startTime === null && endTime === null && status[0] !== 'All') {\r\n      filterValue = {\r\n        first: offset,\r\n        offset: 0,\r\n        statusId: status,\r\n      }\r\n    }\r\n    if (startTime !== null && endTime !== null && status[0] !== 'All') {\r\n      filterValue = {\r\n        first: offset,\r\n        offset: 0,\r\n        fromTime: startTime,\r\n        toTime: endTime,\r\n        statusId: status,\r\n      }\r\n    }\r\n    if (startTime !== null && endTime !== null && status[0] === 'All') {\r\n      filterValue = {\r\n        first: offset,\r\n        offset: 0,\r\n        fromTime: startTime,\r\n        toTime: endTime,\r\n      }\r\n    }\r\n\r\n    const gqlValue = gqlTag.query.chef.listWithFiltersGQLTAG(filterValue)\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    const {nodes} = data.allChefProfiles\r\n    if (data.hasOwnProperty('allChefProfiles') && nodes) {\r\n      return dispatch({type: GET_CHEF_SUCCESS, payload: nodes})\r\n    } else {\r\n      return dispatch({type: GET_CHEF_FAIL, payload: []})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_CHEF_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const getChefDetails = (client, userId) => async dispatch => {\r\n  dispatch({type: GET_CHEF_DETAILS})\r\n  try {\r\n    const gqlValue = gqlTag.query.chef.profileByIdGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {\r\n        chefId: userId,\r\n      },\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    if (data.chefProfileByChefId) {\r\n      return dispatch({type: GET_CHEF_SUCCESS_DETAILS, payload: data.chefProfileByChefId})\r\n    } else {\r\n      return dispatch({type: GET_CHEF_FAIL_DETAILS, payload: {}})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_CHEF_FAIL_DETAILS, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const updateChefStatus = (value, status, client) => async dispatch => {\r\n  dispatch({type: UPDATE_CHEF_STATUS})\r\n  try {\r\n    const gqlValue = gqlTag.mutation.chef.updateStatusByChefIdGQLTAG\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: {\r\n        pStatusId: status,\r\n        pData: value,\r\n      },\r\n    })\r\n    if (\r\n      data &&\r\n      data.updateStatusByChefId &&\r\n      data.updateStatusByChefId.procedureResult &&\r\n      data.updateStatusByChefId.procedureResult.message\r\n    ) {\r\n      return dispatch({\r\n        type: UPDATE_CHEF_STATUS_SUCCESS,\r\n        payload: data.updateStatusByChefId.procedureResult.message,\r\n      })\r\n    } else {\r\n      return dispatch({type: UPDATE_CHEF_STATUS_FAIL, payload: CommonLabels.UPDATE_FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: UPDATE_CHEF_STATUS_FAIL, payload: err.message})\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_CUSTOMER,\r\n  GET_CUSTOMER_SUCCESS,\r\n  GET_CUSTOMER_FAIL,\r\n  GET_CUSTOMER_DETAILS,\r\n  GET_CUSTOMER_SUCCESS_DETAILS,\r\n  GET_CUSTOMER_FAIL_DETAILS,\r\n  UPDATE_CUSTOMER_STATUS,\r\n  UPDATE_CUSTOMER_STATUS_SUCCESS,\r\n  UPDATE_CUSTOMER_STATUS_FAIL,\r\n} from './types.js'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\n\r\nexport const getCustomerList = (client, offset, startTime, endTime) => async dispatch => {\r\n  dispatch({type: GET_CUSTOMER})\r\n  try {\r\n    let filterValue = {\r\n      first: offset,\r\n      offset: 0,\r\n      fromTime: startTime,\r\n      toTime: endTime,\r\n    }\r\n    if (startTime === null && endTime === null) {\r\n      filterValue = {\r\n        first: offset,\r\n        offset: 0,\r\n      }\r\n    }\r\n    const gqlValue = gqlTag.query.customer.listWithFiltersGQLTAG(filterValue)\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    const {nodes} = data.allCustomerProfiles\r\n    if (data.hasOwnProperty('allCustomerProfiles') && nodes) {\r\n      return dispatch({type: GET_CUSTOMER_SUCCESS, payload: nodes})\r\n    } else {\r\n      return dispatch({type: GET_CUSTOMER_FAIL, payload: []})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_CUSTOMER_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const getCustomerDetails = (client, userId) => async dispatch => {\r\n  dispatch({type: GET_CUSTOMER_DETAILS})\r\n  try {\r\n    const gqlValue = gqlTag.query.customer.profileByIdGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {\r\n        customerId: userId,\r\n      },\r\n    })\r\n\r\n    if (data.customerProfileByCustomerId) {\r\n      return dispatch({\r\n        type: GET_CUSTOMER_SUCCESS_DETAILS,\r\n        payload: data.customerProfileByCustomerId,\r\n      })\r\n    } else {\r\n      return dispatch({type: GET_CUSTOMER_FAIL_DETAILS, payload: {}})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_CUSTOMER_FAIL_DETAILS, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const updateCustomerStatus = (value, status, client) => async dispatch => {\r\n  dispatch({type: UPDATE_CUSTOMER_STATUS})\r\n  try {\r\n    const gqlValue = gqlTag.mutation.customer.updateStatusByCustomerIdGQLTAG\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: {\r\n        pStatusId: status,\r\n        pData: value,\r\n      },\r\n    })\r\n    if (\r\n      data &&\r\n      data.updateStatusByCustomerId &&\r\n      data.updateStatusByCustomerId.procedureResult &&\r\n      data.updateStatusByCustomerId.procedureResult.message\r\n    ) {\r\n      return dispatch({\r\n        type: UPDATE_CUSTOMER_STATUS_SUCCESS,\r\n        payload: data.updateStatusByCustomerId.procedureResult.message,\r\n      })\r\n    } else {\r\n      return dispatch({type: UPDATE_CUSTOMER_STATUS_FAIL, payload: CommonLabels.UPDATE_FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: UPDATE_CUSTOMER_STATUS_FAIL, payload: err.message})\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_BOOKING_HISTORY,\r\n  GET_BOOKING_HISTORY_SUCCESS,\r\n  GET_BOOKING_HISTORY_FAIL,\r\n  GET_BOOKING_REQUESTED_DETAILS,\r\n  GET_BOOKING_REQUESTED_SUCCESS_DETAILS,\r\n  GET_BOOKING_REQUESTED_FAIL_DETAILS,\r\n  GET_BOOKING_DETAILS,\r\n  GET_BOOKING_SUCCESS_DETAILS,\r\n  GET_BOOKING_FAIL_DETAILS,\r\n  REFUND_TO_CUSTOMER,\r\n  REFUND_TO_CUSTOMER_SUCCESS,\r\n  REFUND_TO_CUSTOMER_FAIL,\r\n  SENT_TO_CHEF,\r\n  SENT_TO_CHEF_SUCCESS,\r\n  SENT_TO_CHEF_FAIL,\r\n} from './types.js'\r\nimport {message} from 'antd'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\n\r\nexport const getBookingList = (client, offset, startTime, endTime) => async dispatch => {\r\n  dispatch({type: GET_BOOKING_HISTORY})\r\n  try {\r\n    let filterValue = {\r\n      first: offset,\r\n      offset: 0,\r\n      pFromTime: startTime,\r\n      pToTime: endTime,\r\n    }\r\n    if (startTime === null && endTime === null) {\r\n      filterValue = {\r\n        first: offset,\r\n        offset: 0,\r\n        pFromTime: null,\r\n        pToTime: null,\r\n      }\r\n    }\r\n    const gqlValue = gqlTag.query.booking.listWithFiltersGQLTAG(filterValue)\r\n\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    const {nodes} = data.listBookingByDateRange\r\n\r\n    if (nodes && nodes.length > 0) {\r\n      return dispatch({type: GET_BOOKING_HISTORY_SUCCESS, payload: nodes})\r\n    } else {\r\n      return dispatch({type: GET_BOOKING_HISTORY_FAIL, payload: []})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_BOOKING_HISTORY_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const getBookingListUnmount = () => dispatch => {\r\n  return dispatch({type: GET_BOOKING_HISTORY_SUCCESS, payload: []})\r\n}\r\n\r\nexport const getBookingDetails = (client, bookingId) => async dispatch => {\r\n  console.log('bookingId', bookingId)\r\n  dispatch({type: GET_BOOKING_DETAILS})\r\n  try {\r\n    const gqlValue = gqlTag.query.booking.byIdGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {\r\n        chefBookingHistId: bookingId,\r\n      },\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    if (data.chefBookingHistoryByChefBookingHistId) {\r\n      return dispatch({\r\n        type: GET_BOOKING_SUCCESS_DETAILS,\r\n        payload: data.chefBookingHistoryByChefBookingHistId,\r\n      })\r\n    } else {\r\n      return dispatch({type: GET_BOOKING_FAIL_DETAILS, payload: {}})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_BOOKING_FAIL_DETAILS, payload: err.message})\r\n  }\r\n}\r\nexport const getBookingRequestDetails = (client, bookingId) => async dispatch => {\r\n  dispatch({type: GET_BOOKING_REQUESTED_DETAILS})\r\n  try {\r\n    const gqlValue = gqlTag.query.booking.requestedBookingByIdGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data, error} = await client.query({\r\n      query,\r\n      variables: {\r\n        bookingHistId: bookingId,\r\n      },\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    if (data.allChefBookingRequestHistories) {\r\n      return dispatch({\r\n        type: GET_BOOKING_REQUESTED_SUCCESS_DETAILS,\r\n        payload: data.allChefBookingRequestHistories,\r\n      })\r\n    } else {\r\n      return dispatch({type: GET_BOOKING_REQUESTED_FAIL_DETAILS, payload: {}})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_BOOKING_REQUESTED_FAIL_DETAILS, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const sendAmountToChef = (client, value) => async dispatch => {\r\n  console.log('value', value.chefStripeUserId)\r\n  dispatch({type: SENT_TO_CHEF, payload: ''})\r\n  try {\r\n    const gqlValue = gqlTag.mutation.admin.transferAmountGQLTAG\r\n\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: {\r\n        chefStripeUserId: value.chefStripeUserId,\r\n        bookingHistId: value.bookingHistId,\r\n        adminId: value.adminId,\r\n        chefId: value.chefId,\r\n      },\r\n    })\r\n    console.log('data', data)\r\n    if (data && data.stripeTransferAmt && data.stripeTransferAmt.data) {\r\n      message.success('Payment success')\r\n      return dispatch({type: SENT_TO_CHEF_SUCCESS, payload: 'success'})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: SENT_TO_CHEF_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const refundAmoutToCustomer = (client, value) => async dispatch => {\r\n  dispatch({type: REFUND_TO_CUSTOMER, payload: ''})\r\n  try {\r\n    const gqlValue = gqlTag.mutation.admin.refundAmountGQLTAG\r\n\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: value,\r\n    })\r\n\r\n    if (data && data.stripeRefundAmtToCustomer && data.stripeRefundAmtToCustomer.data) {\r\n      message.success('Payment success')\r\n      return dispatch({type: REFUND_TO_CUSTOMER_SUCCESS, payload: 'success'})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: REFUND_TO_CUSTOMER_FAIL, payload: err.message})\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_BUSINESS_PROGRESS_DATA,\r\n  GET_BUSINESS_PROGRESS_DATA_SUCCESS,\r\n  GET_BUSINESS_PROGRESS_DATA_FAIL,\r\n} from './types.js'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\n\r\nexport const getBussinessProgressData = (client, uid, startTime, endTime) => async dispatch => {\r\n  dispatch({type: GET_BUSINESS_PROGRESS_DATA})\r\n  try {\r\n    let filterValue = {\r\n      adminId: uid,\r\n      pFromTime: startTime,\r\n      pToTime: endTime,\r\n    }\r\n    if (startTime === null && endTime === null) {\r\n      filterValue = {\r\n        adminId: uid,\r\n      }\r\n    }\r\n    const gqlValue = gqlTag.query.commission.filterEarnedHistByAdminIdGQLTAG(filterValue)\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n    })\r\n    if (\r\n      data &&\r\n      data.allCommissionEarnedHistories &&\r\n      data.allCommissionEarnedHistories !== undefined\r\n    ) {\r\n      return dispatch({\r\n        type: GET_BUSINESS_PROGRESS_DATA_SUCCESS,\r\n        payload: data.allCommissionEarnedHistories,\r\n      })\r\n    } else {\r\n      return dispatch({type: GET_BUSINESS_PROGRESS_DATA_FAIL, payload: CommonLabels.FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_BUSINESS_PROGRESS_DATA_FAIL, payload: err.message})\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {SEARCH, SEARCH_SUCCESS, SEARCH_FAIL} from './types'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\n\r\nexport const searchCommonData = (client, params) => async dispatch => {\r\n  dispatch({type: SEARCH})\r\n  try {\r\n    const gqlValue = gqlTag.query.admin.searchGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {\r\n        pSearchStr: params,\r\n      },\r\n    })\r\n    if (data.filterChefBySearchStr && data.filterCustomerBySearchStr) {\r\n      return dispatch({type: SEARCH_SUCCESS, payload: data})\r\n    } else {\r\n      return dispatch({type: SEARCH_FAIL, payload: CommonLabels.FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: SEARCH_FAIL, payload: err.message})\r\n  }\r\n}\r\n","export const status = {\r\n    SENT: 'SENT',\r\n    SEEN: 'SEEN',\r\n    DISMISSED: 'DISMISSED',\r\n    PENDING: 'PENDING',\r\n    CUSTOMER_REQUESTED: 'CUSTOMER_REQUESTED',\r\n    CHEF_ACCEPTED: 'CHEF_ACCEPTED',\r\n    CHEF_REJECTED: 'CHEF_REJECTED',\r\n    CANCELLED_BY_CHEF: 'CANCELLED_BY_CHEF',\r\n    CANCELLED_BY_CUSTOMER: 'CANCELLED_BY_CUSTOMER',\r\n    COMPLETED: 'COMPLETED',\r\n    CERTIFIED: 'CERTIFIED',\r\n    APPROVED: 'APPROVED',\r\n    REJECTED: 'REJECTED',\r\n    BLOCKED: 'BLOCKED',\r\n    UNBLOCKED: 'UNBLOCKED',\r\n    REVIEWED: 'REVIEWED',\r\n    PAY_TO_CHEF:'PAY_TO_CHEF',\r\n    REFUND_TO_CUSTOMER:'REFUND_TO_CUSTOMER',\r\n    COMPLETED_BY_CHEF:'COMPLETED_BY_CHEF',\r\n    COMPLETED_BY_CUSTOMER:'COMPLETED_BY_CUSTOMER',\r\n    BOTH_CHEF_AND_CUSTOMER_COMPLETED:'BOTH_CHEF_AND_CUSTOMER_COMPLETED',\r\n    PAYMENT_PENDING:'PAYMENT_PENDING',\r\n    SUBMITTED_FOR_REVIEW:'SUBMITTED_FOR_REVIEW',\r\n    AMOUNT_TRANSFER_SUCCESS:'AMOUNT_TRANSFER_SUCCESS',\r\n    AMOUNT_TRANSFER_FAILED:'AMOUNT_TRANSFER_FAILED'\r\n}","/** @format */\r\n\r\nimport {\r\n  GET_CUISINES,\r\n  GET_CUISINES_SUCCESS,\r\n  GET_CUISINES_FAIL,\r\n  GET_DISHES,\r\n  GET_DISHES_SUCCESS,\r\n  GET_DISHES_FAIL,\r\n  GET_CHEF_CUISINE,\r\n  GET_CHEF_CUISINE_SUCCESS,\r\n  GET_CHEF_CUISINE_FAIL,\r\n  GET_CHEF_DISH,\r\n  GET_CHEF_DISH_SUCCESS,\r\n  GET_CHEF_DISH_FAIL,\r\n  UPDATE_CUSINIE_STATUS,\r\n  UPDATE_CUSINIE_STATUS_SUCCESS,\r\n  UPDATE_CUSINIE_STATUS_FAIL,\r\n  UPDATE_DISH_STATUS,\r\n  UPDATE_DISH_STATUS_SUCCESS,\r\n  UPDATE_DISH_STATUS_FAIL,\r\n} from './types'\r\nimport {message} from 'antd'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlStatus from '../common/constants/constant.status'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\n\r\nexport const getAllCuisines = client => async dispatch => {\r\n  dispatch({type: GET_CUISINES})\r\n  try {\r\n    const gqlValue = gqlTag.query.master.allCuisinesByStatusGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {\r\n        statusId: gqlStatus.status.PENDING,\r\n      },\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    if (data && data.allCuisineTypeMasters && data.allCuisineTypeMasters.nodes) {\r\n      return dispatch({type: GET_CUISINES_SUCCESS, payload: data.allCuisineTypeMasters.nodes})\r\n    } else {\r\n      return dispatch({type: GET_CUISINES_FAIL, payload: CommonLabels.FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_DISHES_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const getAllDishes = client => async dispatch => {\r\n  dispatch({type: GET_DISHES})\r\n  try {\r\n    const gqlValue = gqlTag.query.master.allDishesByStatusGQLTAG\r\n    console.log('gqlValue', gqlValue)\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {\r\n        statusId: gqlStatus.status.PENDING,\r\n      },\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    console.log('data', data)\r\n    if (data && data.allDishTypeMasters && data.allDishTypeMasters.nodes) {\r\n      return dispatch({type: GET_DISHES_SUCCESS, payload: data.allDishTypeMasters.nodes})\r\n    } else {\r\n      return dispatch({type: GET_DISHES_FAIL, payload: CommonLabels.FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_DISHES_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const getCuisineType = client => async dispatch => {\r\n  dispatch({type: GET_CHEF_CUISINE})\r\n  try {\r\n    const gqlValue = gqlTag.query.master.allCuisinesByStatusGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {\r\n        statusId: gqlStatus.status.APPROVED,\r\n      },\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    if (data && data.allCuisineTypeMasters && data.allCuisineTypeMasters.nodes) {\r\n      return dispatch({type: GET_CHEF_CUISINE_SUCCESS, payload: data.allCuisineTypeMasters.nodes})\r\n    } else {\r\n      return dispatch({type: GET_CHEF_CUISINE_FAIL, payload: []})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_CHEF_DISH_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const getDishType = client => async dispatch => {\r\n  dispatch({type: GET_CHEF_DISH})\r\n  try {\r\n    const gqlValue = gqlTag.query.master.allDishesByStatusGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {\r\n        statusId: gqlStatus.status.APPROVED,\r\n      },\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    if (data && data.allDishTypeMasters && data.allDishTypeMasters.nodes) {\r\n      return dispatch({type: GET_CHEF_DISH_SUCCESS, payload: data.allDishTypeMasters.nodes})\r\n    } else {\r\n      return dispatch({type: GET_CHEF_DISH_FAIL, payload: []})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_CHEF_DISH_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const updateCuisineStatus = (value, client) => async dispatch => {\r\n  dispatch({type: UPDATE_CUSINIE_STATUS})\r\n  try {\r\n    const gqlValue = gqlTag.mutation.master.updateCuisineTypeGQLTAG\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: value,\r\n    })\r\n\r\n    if (\r\n      data &&\r\n      data.updateCuisineTypeMasterByCuisineTypeId &&\r\n      data.updateCuisineTypeMasterByCuisineTypeId.cuisineTypeMaster\r\n    ) {\r\n      message.success(value.statusId === 'APPROVED' ? 'Cuisine Approved' : 'Cuisine Rejected')\r\n      return dispatch({\r\n        type: UPDATE_CUSINIE_STATUS_SUCCESS,\r\n        payload: CommonLabels.SUCCESS,\r\n      })\r\n    } else {\r\n      return dispatch({type: UPDATE_CUSINIE_STATUS_FAIL, payload: CommonLabels.UPDATE_FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: UPDATE_CUSINIE_STATUS_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const updateDishStatus = (value, client) => async dispatch => {\r\n  dispatch({type: UPDATE_DISH_STATUS})\r\n  try {\r\n    const gqlValue = gqlTag.mutation.master.updateDishTypeGQLTAG\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: value,\r\n    })\r\n    if (\r\n      data &&\r\n      data.updateDishTypeMasterByDishTypeId &&\r\n      data.updateDishTypeMasterByDishTypeId.dishTypeMaster\r\n    ) {\r\n      message.success(value.statusId === 'APPROVED' ? 'Dish Approved' : 'Dish Rejected')\r\n      return dispatch({\r\n        type: UPDATE_DISH_STATUS_SUCCESS,\r\n        payload: CommonLabels.SUCCESS,\r\n      })\r\n    } else {\r\n      return dispatch({type: UPDATE_DISH_STATUS_FAIL, payload: CommonLabels.UPDATE_FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: UPDATE_DISH_STATUS_FAIL, payload: err.message})\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_CANCELLATION_TIME,\r\n  GET_CANCELLATION_TIME_SUCCESS,\r\n  GET_CANCELLATION_TIME_FAIL,\r\n  UPDATE_CANCELLATION_TIME,\r\n  UPDATE_CANCELLATION_TIME_SUCCESS,\r\n  UPDATE_CANCELLATION_TIME_FAIL,\r\n} from './types'\r\nimport {message} from 'antd'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\n\r\nexport const getCencellationTime = client => async dispatch => {\r\n  dispatch({type: GET_CANCELLATION_TIME})\r\n  console.log('getCencellationTime')\r\n  try {\r\n    const gqlValue = gqlTag.query.setting.getSettingValueGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {\r\n        pSettingName: 'NO_OF_MINUTES_FOR_BOOKING_CANCEL',\r\n      },\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n\r\n    console.log('data', data)\r\n\r\n    if (data && data.getSettingValue && data.getSettingValue) {\r\n      return dispatch({type: GET_CANCELLATION_TIME_SUCCESS, payload: data})\r\n    } else {\r\n      return dispatch({type: GET_CANCELLATION_TIME_FAIL, payload: CommonLabels.FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_CANCELLATION_TIME_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const updateCancellationTime = (client, params) => async dispatch => {\r\n  dispatch({type: UPDATE_CANCELLATION_TIME, payload: ''})\r\n  console.log('params', params)\r\n  try {\r\n    const gqlValue = gqlTag.mutation.booking.updateBookingCancelTimeGQLTAG\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: {\r\n        pSettingValue: params,\r\n      },\r\n    })\r\n\r\n    if (data && data.updateBookingCancelTime && data.updateBookingCancelTime.procedureResult) {\r\n      console.log('data', data)\r\n      return dispatch({type: UPDATE_CANCELLATION_TIME_SUCCESS, payload: CommonLabels.SUCCESS})\r\n    } else {\r\n      return dispatch({type: UPDATE_CANCELLATION_TIME_FAIL, payload: CommonLabels.FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: UPDATE_CANCELLATION_TIME_FAIL, payload: err.message})\r\n  }\r\n}\r\n","/** @format */\r\n\r\nexport default {\r\n  //sample\r\n  SAMPLE_DATE: '6 September, Friday',\r\n  SAMPLE_DURATION: 'From jan1 2019 till',\r\n  SAMPLE_COMMISSIOM_EARNED: '400000 Lac',\r\n  SAMPLE_FEEDBACK: `To solve this problem, we recommend asking customers to give you feedback on a\r\n  specific aspect of your business when you ask for a review. If you’re a car\r\n  dealership, you might ask about the cleanliness of the showroom or the length of\r\n  the car-buying process. If you’re a home services business, you might ask about\r\n  the friendliness or knowledge of your staff.`,\r\n\r\n  //Screen names\r\n  DASHBOARD: 'Dashboard',\r\n  CUSTOMERMANAGEMENT: 'Customer Management',\r\n  CHEFMANAGEMENT: 'Chef Management',\r\n  BOOKINGHISTORY: 'Booking History',\r\n  COMMISSIONMANAGEMENT: 'Commission Management',\r\n  REVIEWSRATINGS: 'Reviews and Ratings',\r\n  CUISINES_DISHES: 'Cuisines and Dishes',\r\n  PROFILEMANAGEMENT: 'Profile Management',\r\n  FEEDBACK: 'Feedback',\r\n  SETTINGS: 'Settings',\r\n\r\n  //Lables\r\n  NO_DATA: 'No Data',\r\n  REFER_DISH_TYPES: 'Refer Dish Types',\r\n  REFER_CUISINE_TYPES: 'Refer Cuisine Types',\r\n  CUISINES: 'Cuisines',\r\n  DISHES: 'Dishes:',\r\n  LOAD_MORE: 'Load More',\r\n  SEARCH: 'Search',\r\n  RESET: 'Reset',\r\n  RATINGS: 'Ratings',\r\n  STATUS_FILTER: 'Status Filter',\r\n  SERIAL_NUMBER: 'S.NO',\r\n  REVIEWER_NAME: 'Reviewer Name',\r\n  ADD_CHEF: 'Add New Chef',\r\n  ADD_CUSTOMER: 'Add New Customer',\r\n  NEW_CHEFS: 'New Chefs',\r\n  NO_NEW_CHEF: 'No new chefs',\r\n  NO_NEW_CUSTOMER: 'No new customers',\r\n  NEW_CUSTOMERS: 'New Customers',\r\n  CHEF_TITLE: `All Chef's`,\r\n  CUSTOMER_TITLE: 'All Customers',\r\n  SHOW: 'Show: ',\r\n  MONTH: 'Monthly',\r\n  CUSTOM: 'Custom',\r\n  WEEK: 'Weekly',\r\n  YEAR: 'Yearly',\r\n  BLOCK: 'Block',\r\n  UNBLOCK: 'Unblock',\r\n  APPROVE: 'Approve',\r\n  SUBMITTED_FOR_REVIEW: 'Submitted for Review',\r\n  REJECT: 'Reject',\r\n  VIEW: 'View',\r\n  PENDING: 'Pending',\r\n  STATUS: 'Status',\r\n  CUSTOMER_ID: 'Customer Id',\r\n  NAME: 'Name',\r\n  CHEF_NAME: 'Chef Name',\r\n  CUSTOMER_NAME: 'Customer Name',\r\n  CHEF: 'Chef',\r\n  ADMIN: 'Admin',\r\n  CUSTOMER: 'Customer',\r\n  DATE: 'Date',\r\n  TIME: 'Time',\r\n  BLOCK_UNBLOCK: 'Block/Unblock',\r\n  ACTION: 'Action',\r\n  USER: 'Users',\r\n  ACCEPT: 'Accept',\r\n  CANCEL: 'Cancel',\r\n  CHEF_ACCEPT: 'Chef accepted',\r\n  CHEF_CANCEL: 'Chef cancelled',\r\n  CUSTOMER_CANCEL: 'Customer cancelled',\r\n  SHOW_MORE: 'Show more',\r\n  REGISTER_DATE: 'Register Date:',\r\n  BUSINESS_PROGRESS: 'Business Progress',\r\n  BOOKING_HISTORY: 'Booking History',\r\n  BOOKINGDETAILS: 'Booking Details',\r\n  BOOKING_DESCRIPITION: 'Booking Descripition',\r\n  PAYMENT_DETAILS: 'Payment Details',\r\n  BOOKING_NOTES: 'Booking Notes',\r\n  BOOKING_ADDRESS: 'Booking Address:',\r\n  CHART_TYPE: 'line',\r\n  AMOUNT: 'Amount',\r\n  INR: 'INR ',\r\n  COMMISSION_MANAGEMENT: 'Commission Management',\r\n  COMMISSION: 'Commission',\r\n  UPDATE: 'Update',\r\n  UPDATE_COMMISSION: 'Update Commission',\r\n  COMMISSION_EARNED: 'Total Commission Earned',\r\n  REVIEW: 'Reviews',\r\n  REVIEWS_RATINGS: 'Reviews and Ratings',\r\n  PROFILE_TITLE: 'Profile Management',\r\n  EMAIL_ID: 'Email Id',\r\n  UPDATE_PASSWORD: 'Update Password',\r\n  ALL: 'All',\r\n  THIS_WEEK: 'This Week',\r\n  THIS_MONTH: 'This Month',\r\n  THIS_year: 'This Year',\r\n  ADD: 'Add',\r\n  CUSTOM_DATE: 'Custom',\r\n  AWARDS: 'Awards',\r\n  AWARDS_DES: 'Awards Descripition:',\r\n  BACK: 'Back',\r\n  PAYMENT: 'Payment',\r\n  NAME_LABEL: 'Name:',\r\n  EMAIL_LABEL: 'Email:',\r\n  GENDER_LABEL: 'Gender:',\r\n  REGISTERED_DATE_LABEL: 'Registered Date:',\r\n  REGISTERED_DATE: 'Registered Date',\r\n  REVIEWED_DATE: 'Reviewed Date',\r\n  REVIEWED_BY: 'Reviewed By',\r\n  REVIEWED_FOR: 'Reviewed For',\r\n  AVERAGE_RATING_LABEL: 'Average Ratings:',\r\n  PHONE_NUMBER_LABEL: 'Phone Number:',\r\n  PHONE_NUMBER: 'Phone Number',\r\n  CUISINE_TYPE_LABEL: 'Cuisine:',\r\n  DISHES_SPECIALITY: 'Dish Specialty:',\r\n  CERTIFICATION_LIST: 'Certification List',\r\n  ALLERGY_LIST: 'Allergy List:',\r\n  DIETARY_LIST: 'Dietary List:',\r\n  KITCHEN_EQUIPMENT: 'Kitchen Equipment List:',\r\n  EQUIPMENT: 'Kitchen Equipment:',\r\n  FOOD_COST: 'Food Cost:',\r\n  SERVICE_RATE: 'Service & Rate:',\r\n  DISH_TYPE_LABEL: 'Dishes:',\r\n  DESCRIPTION_LABEL: 'Description:',\r\n  LOCATION_LABEL: 'Location:',\r\n  BASE_RATE: 'Base Rate:',\r\n  GRATUITY: 'Gratuity:',\r\n  NO_OF_GUESTS: 'No of Guests:',\r\n  NO_OF_PEOPLE: 'No of People:',\r\n  PAYMENT_ID: 'Payment Id:',\r\n  NO_OF_ITEMS: 'No of items:',\r\n  ADDITIONAL_BASE_RATE: 'Each guest an additional X your base rate:',\r\n  DISCOUNT_FOR_GUEST: 'Discount for each guest after',\r\n  CHEF_TRAVEL: 'Chef can travel around',\r\n  PROVIDE_SERVICE: 'to provide the service.',\r\n  HOUR_LABEL: '/ hour',\r\n  MIN: 'Min:',\r\n  MAX: ' Max:',\r\n  CHEF_COOK: 'Chef can cook',\r\n  MEMBERS: 'members',\r\n  FOR: 'for',\r\n  PERSONS: 'Persons',\r\n  REQUESTED_TIME_LABEL: 'Requested Time:',\r\n  REQUESTED_DATE_LABEL: 'Requested Date:',\r\n  BUSINESS_HOURS: 'Booking Hours:',\r\n  CUSTOMER_REVIEW_LABLE: 'Customer Reviews and Ratings',\r\n  CENCELLATION_REASON: 'Cancellation Reason',\r\n  DOCUMENT_LABEL: 'Document',\r\n  CHEF_REVIEW_LABLE: 'Chef Reviews and Ratings',\r\n  FACEBOOK_LABEL: 'Facebook Url:',\r\n  TWITER_LABEL: 'Twitter Url:',\r\n  COST_UNIT_LABEL: 'Price Unit:',\r\n  COST_LABEL: 'Price:',\r\n  DRIVIG_LICENSE_LABEL: 'Driving License No:',\r\n  REVIEW_LABEL: ' review',\r\n  REVIEWS_LABEL: ' reviews',\r\n  WORK_GALLERY_LABEL: 'Work Gallery',\r\n  CONTACT_LABEL: 'Contact Details',\r\n  PERSONAL_LABEL: 'Personal Details',\r\n  SPECIALIZATION_LABEL: 'Specialization Details',\r\n  ADDITIONAL_SERVICE: 'Additional Service & Price',\r\n  ADDITIONAL: 'Additional Service:',\r\n  ADDITIONAL_SER: 'Additional Service',\r\n  COMPLEXITY_CHANGE: 'Complexity Changes:',\r\n  TOTAL_AMOUNT_EXTRA: 'Total Amount for Extra Services:',\r\n  CERTIFICATION_TYPE: 'Certification Types',\r\n  ALLERGY_TYPE: 'Allergy Types',\r\n  DIETARY_TYPE: 'Dietary Types',\r\n  KITCHEN_TYPE: 'Kitchen Equipment Types',\r\n  DOB_LABEL: 'DOB:',\r\n  BUSINESS_LABEL: 'Business Details',\r\n  COMPLEXITY: 'Complexity',\r\n  COMPLEXITY_LEVEL: 'Complexity Level:',\r\n  COMPLEXITY_CHARGE: 'Complexity Charge:',\r\n  ADDITIONAL_NO_OF_PEOPLE: 'Additional No of People:',\r\n  EXTRA_SERVICE_PROVIDER: 'Extra Service Provided:',\r\n  CHEF_TOTAL_CHARGE: 'Chef Total Charge:',\r\n  ROCKOLY_CHARGE: 'Rockoly Charge:',\r\n  TOTAL_AMOUNT: 'Total Amount:',\r\n  TOTAL_REMAINING_AMOUNT: 'Total Remaining Amount Paid:',\r\n  PAYMENT_STATUS: 'Payment Status:',\r\n  PAYMENT_DATE: 'Payment Date:',\r\n  PAYMENT_PRICE: 'Payment Price:',\r\n  BOOKING_STATUS: 'Booking Status:',\r\n  BUSSINESS_TIME_LABEL: 'Business Time:',\r\n  EXPERIANCE_LABEL: 'Experience:',\r\n  SERVICE_COST: 'Service Cost',\r\n  SERVICE_TIME: 'Service Time',\r\n  SERVICE_DATE: 'Service Date',\r\n  BOOKED_ON: 'Booked On',\r\n  PERCENT: '%',\r\n  REVIEW_DETAILS: 'Review Details',\r\n  REVIEW_DONE_BY: 'Review Done By:',\r\n  REVIEW_DONE_FOR: 'Review Done for:',\r\n  REVIEW_RATING: 'Review Rating:',\r\n  REVIEW_DESCRIPTION: 'Review Description:',\r\n  REVIEW_ON: 'Reviewed On:',\r\n  SEND_TO_CHEF: 'Send to Chef',\r\n  RESET_PASSWORD: 'Reset Password',\r\n  BOOKING_ID: 'Booking Id:',\r\n  BOOKING_SUMMARY: 'Summary:',\r\n  OTHERALLERGY: 'Other Allergies',\r\n  OTHER_DIETARY: 'Other Dietaries',\r\n  OTHER_KITCHEN_EQUIPMENTS: 'Other Kitchen Equipment',\r\n  NO_REVIEWS: 'No Reviews Yet',\r\n  SEND_MAIL: 'Send Mail',\r\n  ENTER_SUBJECT: 'Enter the Subject',\r\n  ENTER_CONTENT: 'Enter the Content',\r\n  ENTER_REASON: 'Enter the Reason',\r\n  TRACKORDERNO: 'trackOrderNo',\r\n  ASC: 'asc',\r\n  NOTES: 'Notes',\r\n  PROFILE_NOT_SUBMITTED: 'Profile Not Submitted',\r\n  CERTIFICATE: 'Certificate',\r\n  LICENSE: 'License',\r\n  OTHER_ATTACHMENT: 'Other Attachment',\r\n  OKTEXT: 'Yes',\r\n  CANCELTEXT: 'No',\r\n  CANCELLATION_SETTINGS_LABEL: 'Cancellation Settings',\r\n  CANCELLATION_TIME_LABEL: 'Cancellation Time:',\r\n  UPDATE_CANCELLATION_TIME: 'Update Cancellation Time In Hours',\r\n\r\n  CHEF_AMOUNT_TRANSFER_FAILED: 'Chef Amount Transfer Failed',\r\n  CHEF_REQUESTED_AMOUNT: 'Chef Rquested Amount',\r\n  AMOUNT_TRANSFER_FAILED: 'Amount Transfer Failed',\r\n  REVIEW_DONE_BY_CUSTOMER: 'Review Done By Customer',\r\n  REVIEW_DONE_BY_CHEF: 'Review Done By Chef',\r\n  CHEF_AMOUNT_TRANSFERRED_SUCCESS: 'Chef Amount Transferred Success',\r\n  COMPLETED: 'Completed',\r\n  PAYMENT_FAILED: 'Payment Failed',\r\n  AMOUNT_TRANSFER_SUCCESS: 'Amount Transfer Success',\r\n  PAYMENT_PENDING: 'Payment Pending',\r\n  CUSTOMER_REQUESTED: 'Customer Requested',\r\n  CHEF_ACCEPTED: 'Chef Accepted',\r\n  CHEF_REJECTED: 'Chef Rejected',\r\n  CANCELLED_BY_CHEF: 'Cancelled By Chef',\r\n  CANCELLED_BY_CUSTOMER: 'Cancelled By Customer',\r\n  COMPLETED_BY_CUSTOMER: 'Completed by Customer',\r\n  COMPLETED_BY_CHEF: 'Completed by Chef',\r\n  PAY_TO_CHEF: 'Pay to Chef',\r\n  REFUND_TO_CUSTOMER: 'Refund to Customer',\r\n  BOTH_CHEF_AND_CUSTOMER_COMPLETED: 'Both Chef and Customer Completed',\r\n  CUSTOMER_CENCELLATION_REASON: 'Customer Cencellation reason',\r\n  CHEF_CENCELLATION_REASON: 'Chef Cencellation or Rejection reason',\r\n  CUSTOMER_REFUND_TRANSFERRED_SUCCESS: 'Customer Refund Transferred Success',\r\n  CUSTOMER_REFUND_TRANSFER_FAILED: 'Customer Refund Transfer Failed',\r\n  REFUND_AMOUNT_SUCCESS: 'Refund Amount Success',\r\n\r\n  SINGLE_ACTION: 'Single action',\r\n  BULCK_ACTION: 'Bulk action',\r\n\r\n  //message:\r\n  INVALIDE_COMMISSION: 'Please enter the commission',\r\n  UPDATE_SUCCESSFULLY: 'Update successfully',\r\n\r\n  //Component labels\r\n  THEME: 'filled',\r\n  DOWNICON: 'caret-down',\r\n  ALTERNATE_PIC: 'profile',\r\n  OKTEXT: 'Yes',\r\n  CANCELTEXT: 'No',\r\n  PLACEMENT_LEFT: 'left',\r\n  PLACEMENT_BOTTOM: 'bottom',\r\n  BUTTOM_RIGHT: 'bottomRight',\r\n  VERTICAL: 'vertical',\r\n  SEARCH: 'Search',\r\n\r\n  //Icons\r\n  EDIT_ICON: 'edit',\r\n  DELETE_ICON: 'delete',\r\n  CLOSE_CIRCLE_ICON: 'close-circle',\r\n  CHECK_CIRCLE_ICON: 'check-circle',\r\n  CLOCK_CIRCLE_ICON: 'clock-circle',\r\n\r\n  //Messages\r\n  APPROVED: 'Approved',\r\n  REJECTED: 'Rejected',\r\n  BLOCKED: 'Blocked',\r\n  UNBLOCKED: 'Unblocked',\r\n  REVIEWED: 'Reviewed',\r\n  NO_MAIL: 'No mail id',\r\n  SENT_MAIL_SUCCESS: 'Mail sent successfully',\r\n  ERROR_CONTENT: 'Please enter the contant',\r\n  ERROR_SUBJECT: 'Please enter the subject',\r\n  ERROR_SUBJECT_ERROR_CONTENT: 'Please enter the subject and content',\r\n  ERROR_SELECT_REVIEWS: 'Please select the reviews',\r\n  SEARCH_ERROR: 'Please enter atleast three characters',\r\n  ENTER_NOTES: 'Please enter notes.',\r\n  CHEF_BANK_ACCOUNT: 'Pelase, Ask Chef to add bank account to transfer the payment',\r\n  WENT_WRONG: 'Something went wrong. Please try again later.',\r\n  CANCELLATION_TIME_ERROR: 'Please enter the cancellation time.',\r\n\r\n  REJECT_CUISINE_ALERT: 'Are you sure. You want to reject this cuisine.',\r\n  REJECT_DISH_ALERT: 'Are you sure. You want to reject this dish.',\r\n\r\n  //PopConfirm customer\r\n  CUSTOMER_DELETE_ALERT: 'Are you sure. You want to delete this customer.',\r\n  CUSTOMER_EDIT_ALERT: 'Are you sure. You want to edit this customer.',\r\n  CUSTOMER_SELECTED_BLOCK_ALERT: 'Are you sure. You want to block the selected customers.',\r\n  CUSTOMER_BLOCK_ALERT: 'Are you sure. You want to block this customer.',\r\n  CUSTOMER_REJECT_ALERT: 'Are you sure. You want to reject this customer.',\r\n  CUSTOMER_SELECT_BLOCK: 'Please select the customer. You want to block',\r\n  CUSTOMER_SELECT_UNBLOCK: 'Please select the customer. You want to unblock',\r\n  SELECT_CUSTOMER: 'Please select the customer',\r\n  ERROR_ENTER_REASON: 'Please enter the reason',\r\n\r\n  //Popconfirm chef\r\n  CHEF_DELETE_ALERT: 'Are you sure. You want to delete this chef.',\r\n  CHEF_EDIT_ALERT: 'Are you sure. You want to edit this chef.',\r\n  CHEF_SELECTED_BLOCK_ALERT: 'Are you sure. You want to block the selected chefs.',\r\n  CHEF_BLOCK_ALERT: 'Are you sure. You want to block this chefs.',\r\n  CHEF_REJECT_ALERT: 'Are you sure. You want to reject this chefs.',\r\n  CHEF_SELECT_BLOCK: 'Please select the chef. You want to block',\r\n  CHEF_SELECT_UNBLOCK: 'Please select the chef. You want to unblock',\r\n\r\n  //Popconfirm review\r\n  REVIEW_SELECTED_BLOCK_ALERT: 'Are you sure. You want to block the selected reviews.',\r\n  REVIEW_SELECTED_EDIT_ALERT: 'Are you sure. You want to edit the selected users.',\r\n  REVIEW_SELECTED_DELETE_ALERT: 'Are you sure. You want to delete the selected users.',\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport {Input, Modal, List, Divider, message} from 'antd'\r\nimport Styles from './styles'\r\nimport Labels from './labels'\r\nimport {searchCommonData} from '../../actions/index'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport n from '../routes/routesNames'\r\n\r\nconst {Search} = Input\r\n\r\nexport class SearchComponent extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      searchValue: '',\r\n      visible: false,\r\n      chefData: [],\r\n      customerData: [],\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.searchData) {\r\n      const data = nxtprops.searchData\r\n      if (\r\n        data.filterChefBySearchStr &&\r\n        data.filterChefBySearchStr.nodes &&\r\n        data.filterChefBySearchStr.nodes.length > 0\r\n      ) {\r\n        this.setState({chefData: data.filterChefBySearchStr.nodes})\r\n      }\r\n      if (\r\n        data.filterCustomerBySearchStr &&\r\n        data.filterCustomerBySearchStr.nodes &&\r\n        data.filterCustomerBySearchStr.nodes.length > 0\r\n      ) {\r\n        this.setState({customerData: data.filterCustomerBySearchStr.nodes})\r\n      }\r\n    }\r\n  }\r\n\r\n  inputSearch = () => {\r\n    if (this.state.searchValue.length > 2) {\r\n      const {client} = this.props\r\n      this.props.searchCommonData(client, this.state.searchValue)\r\n      this.setState({visible: true})\r\n    } else {\r\n      message.error(CommonLabels.SEARCH_ERROR)\r\n    }\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({visible: false, customerData: [], chefData: [], searchValue: ''})\r\n  }\r\n\r\n  openDetail = (val, path, screenPath) => {\r\n    this.setState({visible: false, searchValue: ''})\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push({\r\n        pathname: path,\r\n        state: {\r\n          uid: val,\r\n          screen: screenPath,\r\n          extraId: '',\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  searchInput = val => {\r\n    this.setState({searchValue: val.target.value})\r\n  }\r\n\r\n  render() {\r\n    const {chefData, customerData} = this.state\r\n    return (\r\n      <div>\r\n        <Search\r\n          className=\"searchClass\"\r\n          placeholder={Labels.SEARCH_PLACE_HOLDER}\r\n          enterButton={CommonLabels.SEARCH}\r\n          style={Styles.searchStyle}\r\n          value={this.state.searchValue}\r\n          onSearch={() => this.inputSearch()}\r\n          onChange={val => this.searchInput(val)}\r\n        />\r\n        <Modal visible={this.state.visible} onCancel={this.handleCancel} footer={false}>\r\n          <b>{CommonLabels.CHEF}</b>\r\n          <List\r\n            dataSource={chefData}\r\n            renderItem={item => (\r\n              <List.Item>\r\n                <a onClick={() => this.openDetail(item.chefId, n.CHEFDETAIL, n.CHEFMANAGEMENT)}>\r\n                  {item.fullName}\r\n                </a>\r\n              </List.Item>\r\n            )}\r\n          />\r\n          <Divider />\r\n          <b>{CommonLabels.CUSTOMER}</b>\r\n          <List\r\n            dataSource={customerData}\r\n            renderItem={item => (\r\n              <List.Item>\r\n                <a\r\n                  onClick={() =>\r\n                    this.openDetail(item.customerId, n.CUSTOMERDETAIL, n.CUSTOMERMANAGEMENT)\r\n                  }>\r\n                  {item.fullName}\r\n                </a>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {searchData, searchDataLoading, searchDataError} = state.search\r\n  return {\r\n    searchData,\r\n    searchDataLoading,\r\n    searchDataError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  searchCommonData,\r\n}\r\n\r\nexport default withApollo(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      mapDispatchToProps\r\n    )(SearchComponent)\r\n  )\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Layout} from 'antd'\r\nimport Styles from './styles'\r\nimport Labels from './labels'\r\nimport Logout from './logout'\r\nimport {themes} from '../../themes/themes'\r\n\r\nimport SearchComponent from './searchComponent'\r\n\r\nconst {Header} = Layout\r\nconst Strings = Labels\r\nexport class HeaderComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header style={Styles.headerStyle}>\r\n          <div style={Styles.headerConentStyle}>\r\n            <div style={Styles.subView}>\r\n              <img src={themes.app_logo} alt=\"Logo\" style={Styles.appLogoStyle} />\r\n              <p style={Styles.headerTextStyle}>{Strings.PROJECT_NAME}</p>\r\n              <SearchComponent />\r\n            </div>\r\n            <div style={Styles.logoutView}>\r\n              {/* <Badge dot style={Styles.badgeStyle}>\r\n                <Icon type={Strings.BELL_ICON} theme={Strings.THEME} style={Styles.bellIcon} />\r\n              </Badge> */}\r\n              <Logout />\r\n            </div>\r\n          </div>\r\n        </Header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HeaderComponent\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {message} from 'antd'\r\nimport {withApollo} from 'react-apollo'\r\nimport Styles from './styles'\r\nimport Strings from './labels'\r\nimport {getAdminProfile} from '../../actions/index'\r\nimport {GetValueFromLocal} from '../../utils/localStorage'\r\n\r\nexport class ProfileView extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      profileData: {},\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    GetValueFromLocal('uid')\r\n      .then(async uid => {\r\n        const {client} = this.props\r\n        await this.props.getAdminProfile(client, uid)\r\n      })\r\n      .catch(err => {\r\n        message.error(err)\r\n      })\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.adminProfile) {\r\n      this.setState({profileData: nxtprops.adminProfile})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {profileData} = this.state\r\n    return (\r\n      <div style={Styles.profileView}>\r\n        <img\r\n          style={Styles.imageStyle}\r\n          alt={Strings.ALTERNATE_PIC}\r\n          src={\r\n            profileData.adminPicId\r\n              ? profileData.adminPicId\r\n              : require('../../themes/images/user.png')\r\n          }\r\n        />\r\n        <div style={Styles.mailStyle}>\r\n          <p style={Styles.nameText}>{profileData.fullName ? profileData.fullName : '-'}</p>\r\n          <p style={Styles.emailText}>{profileData.adminEmail ? profileData.adminEmail : '-'}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {adminProfile, adminProfileLoading} = state.adminData\r\n  return {\r\n    adminProfile,\r\n    adminProfileLoading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getAdminProfile,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ProfileView)\r\n)\r\n","/** @format */\r\n\r\nimport {GET_ADMIN_PROFILE, GET_ADMIN_PROFILE_SUCCESS, GET_ADMIN_PROFILE_FAIL} from './types.js'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\n\r\nexport const getAdminProfile = (client, uid) => async dispatch => {\r\n  dispatch({type: GET_ADMIN_PROFILE})\r\n  try {\r\n    const gqlValue = gqlTag.query.admin.profileByIdGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {\r\n        adminId: uid,\r\n        fetchPolicy: 'network-only',\r\n      },\r\n    })\r\n    if (data && data.adminProfileByAdminId) {\r\n      return dispatch({type: GET_ADMIN_PROFILE_SUCCESS, payload: data.adminProfileByAdminId})\r\n    } else {\r\n      return dispatch({type: GET_ADMIN_PROFILE_FAIL, payload: CommonLabels.FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_ADMIN_PROFILE_FAIL, payload: err.message})\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Layout, Menu} from 'antd'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport Styles from './styles'\r\nimport Strings from './labels'\r\nimport n from '../routes/routesNames'\r\nimport CommonLables from '../common/commonLabel'\r\nimport ProfileView from './profileView'\r\n\r\nconst {Sider} = Layout\r\nconst menuItems = [\r\n  {\r\n    name: CommonLables.DASHBOARD,\r\n    value: n.DASHBOARD,\r\n    route: n.DASHBOARD,\r\n  },\r\n  {\r\n    name: CommonLables.CUSTOMERMANAGEMENT,\r\n    value: n.CUSTOMERMANAGEMENT,\r\n    route: n.CUSTOMERMANAGEMENT,\r\n  },\r\n  {\r\n    name: CommonLables.CHEFMANAGEMENT,\r\n    value: n.CHEFMANAGEMENT,\r\n    route: n.CHEFMANAGEMENT,\r\n  },\r\n  {\r\n    name: CommonLables.BOOKINGHISTORY,\r\n    value: n.BOOKINGHISTORY,\r\n    route: n.BOOKINGHISTORY,\r\n  },\r\n  {\r\n    name: CommonLables.COMMISSIONMANAGEMENT,\r\n    value: n.COMMISSIONMANAGEMENT,\r\n    route: n.COMMISSIONMANAGEMENT,\r\n  },\r\n  {\r\n    name: CommonLables.REVIEWSRATINGS,\r\n    value: n.REVIEWSRATINGS,\r\n    route: n.REVIEWSRATINGS,\r\n  },\r\n  {\r\n    name: CommonLables.CUISINES_DISHES,\r\n    value: n.CUISINES_DISHES,\r\n    route: n.CUISINES_DISHES,\r\n  },\r\n  {\r\n    name: CommonLables.ADDITIONAL_SER,\r\n    value: n.EXTRA_SERVICE,\r\n    route: n.EXTRA_SERVICE,\r\n  },\r\n  {\r\n    name: CommonLables.SETTINGS,\r\n    value: n.SETTINGS,\r\n    route: n.SETTINGS,\r\n  },\r\n  // {\r\n  //   name: CommonLables.PROFILEMANAGEMENT,\r\n  //   value: 7,\r\n  //   route: n.PROFILEMANAGEMENT,\r\n  // },\r\n  // {\r\n  //   name: CommonLables.FEEDBACK,\r\n  //   value: 7,\r\n  //   route: n.FEEDBACK,\r\n  // },\r\n]\r\n\r\nexport class SideMenu extends Component {\r\n  render() {\r\n    return (\r\n      <Sider>\r\n        <Menu\r\n          mode={Strings.MENU_MODE}\r\n          selectedKeys={\r\n            this.props.location.pathname === n.CHEFDETAIL\r\n              ? n.CHEFMANAGEMENT\r\n              : this.props.location.pathname === n.CUSTOMERDETAIL\r\n              ? n.CUSTOMERMANAGEMENT\r\n              : this.props.location.pathname === n.BOOKINGDETAILS\r\n              ? n.BOOKINGHISTORY\r\n              : this.props.location.pathname\r\n          }\r\n          style={Styles.menuStyle}>\r\n          <ProfileView />\r\n          {menuItems.map(element => (\r\n            <Menu.Item key={element.value}>\r\n              <Link to={element.route}>\r\n                <div style={Styles.sideMenuContent}>\r\n                  <span style={Styles.sideMenuText}>{element.name}</span>\r\n                </div>\r\n              </Link>\r\n            </Menu.Item>\r\n          ))}\r\n        </Menu>\r\n      </Sider>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(SideMenu)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Route, withRouter} from 'react-router-dom'\r\nimport {Button} from 'antd'\r\nimport {HeaderComponent} from './header'\r\nimport {SideMenu} from './sideMenu'\r\nimport {Layout} from 'antd'\r\nimport Styles from './styles'\r\nimport n from '../routes/routesNames'\r\nimport {GetValueFromLocal} from '../../utils/localStorage'\r\nimport Labels from './labels'\r\n\r\nconst {Content} = Layout\r\n\r\nexport class privateLayout extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      adminId: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    GetValueFromLocal('uid').then(async uid => {\r\n      await this.setState({adminId: uid})\r\n    })\r\n  }\r\n\r\n  navigateToLogin() {\r\n    this.props.history.push(n.START)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.adminId ? (\r\n          <div>\r\n            <Layout>\r\n              <HeaderComponent {...this.props.screen} />\r\n              <Layout className=\"sideMenuStyle\">\r\n                <SideMenu {...this.props} />\r\n                <Layout style={Styles.screenContent}>\r\n                  <Content>\r\n                    <Route {...this.props.screen} />\r\n                  </Content>\r\n                </Layout>\r\n              </Layout>\r\n            </Layout>\r\n          </div>\r\n        ) : (\r\n          <div style={Styles.restrictView}>\r\n            <div style={Styles.contentView}>\r\n              <p style={Styles.loginFont}>{Labels.PLEASE_LOGIN}</p>\r\n              <div style={Styles.loginButtonAlign}>\r\n                <Button style={Styles.buttonStyle} onClick={() => this.navigateToLogin()}>\r\n                  {Labels.LOGIN}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(privateLayout)\r\n","/** @format */\r\n\r\nexport default {\r\n  loginView: {\r\n    height: 350,\r\n    width: 600,\r\n    backgroundColor: 'white',\r\n    marginTop: '10%',\r\n    borderRadius: 5,\r\n  },\r\n  topView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  loginbuttonView: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginTop: 30,\r\n  },\r\n  loginText: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    fontSize: 20,\r\n    fontWeight: 600,\r\n    marginTop: 20,\r\n  },\r\n  lineStyle: {\r\n    borderWidth: 0.5,\r\n    borderColor: 'EEEEEE',\r\n    marginHorizontal: 0,\r\n  },\r\n  email: {\r\n    width: 550,\r\n    height: 70,\r\n  },\r\n  emailInputView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 30,\r\n  },\r\n  passInputView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 20,\r\n  },\r\n  buttonStyle: {\r\n    backgroundColor: '#515151',\r\n    color: 'white',\r\n    marginLeft: 25,\r\n  },\r\n  passText: {\r\n    fontWeight: 'bold',\r\n    marginRight: 25,\r\n    cursor: 'pointer',\r\n  },\r\n  forgotPasswordEmail: {\r\n    width: '100%',\r\n    height: 50,\r\n  },\r\n}\r\n","/** @format */\r\n\r\nexport default {\r\n  LOGIN: 'Login',\r\n  EMAIL: 'Enter your email id',\r\n  PASSWORD: 'Password',\r\n  FORGOTPASSWORD: 'Forgot Password',\r\n  PASSWORD_VALIDATE: 'Please enter the password',\r\n  EMAIL_VALIDATE: 'Please enter the email id',\r\n  SUCCESS: 'success',\r\n  FAIL: 'fail',\r\n  SUCCESS_MESSAGE: 'Login success',\r\n  INVALID_MESSAGE: 'Invalid credentials. Please enter the correct credentials',\r\n  RESET_PASSWORD: 'Reset Password',\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Spin} from 'antd'\r\n\r\n//TODO: create folder and place files inside that\r\nexport class Loader extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Spin spinning={this.props.loader}></Spin>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loader\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Input, Button, Divider, message, Modal} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\n//Internal imports\r\nimport Styles from './styles'\r\nimport Strings from './labels'\r\nimport {loginAction, adminForgotPassword} from '../../actions/index'\r\nimport n from '../routes/routesNames'\r\nimport Loader from '../../components/loader/loader'\r\nimport {GetValueFromLocal} from '../../utils/localStorage'\r\n\r\nexport class Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      email: '',\r\n      passWord: '',\r\n      visible: false,\r\n      forgotPasswordEmailId: '',\r\n      adminId: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    GetValueFromLocal('uid')\r\n      .then(async uid => {\r\n        await this.setState({adminId: uid}, () => {\r\n          if (this.state.adminId) {\r\n            this.props.history.push(n.DASHBOARD)\r\n          }\r\n        })\r\n      })\r\n      .catch(err => {\r\n        message.error(err)\r\n      })\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.login !== this.props.login) {\r\n      if (nextProps.login && nextProps.login === Strings.SUCCESS) {\r\n        this.props.history.push(n.DASHBOARD)\r\n        message.success(Strings.SUCCESS_MESSAGE)\r\n      }\r\n    }\r\n  }\r\n  //Call loginAction\r\n  clickLogin = () => {\r\n    const {client} = this.props\r\n    this.setState({\r\n      email: '',\r\n      passWord: '',\r\n    })\r\n    if (this.state.email.length > 0) {\r\n      if (this.state.passWord.length > 0) {\r\n        const data = {\r\n          email: this.state.email,\r\n          password: this.state.passWord,\r\n        }\r\n        this.props.loginAction(data, client)\r\n      } else {\r\n        message.error(Strings.PASSWORD_VALIDATE)\r\n      }\r\n    } else {\r\n      message.error(Strings.EMAIL_VALIDATE)\r\n    }\r\n  }\r\n\r\n  clickForgotPassword = () => {\r\n    this.setState({visible: true})\r\n  }\r\n\r\n  inputMail = value => {\r\n    this.setState({\r\n      email: value.target.value,\r\n    })\r\n  }\r\n\r\n  InputForgotpasswordMail = value => {\r\n    this.setState({\r\n      forgotPasswordEmailId: value.target.value,\r\n    })\r\n  }\r\n  inputPassword = value => {\r\n    this.setState({\r\n      passWord: value.target.value,\r\n    })\r\n  }\r\n\r\n  //Forgot password\r\n  handleOk = () => {\r\n    if (this.state.forgotPasswordEmailId.length > 0) {\r\n      const {client} = this.props\r\n      this.props.adminForgotPassword(this.state.forgotPasswordEmailId, 'admin', client)\r\n    } else {\r\n      message.error(Strings.EMAIL_VALIDATE)\r\n    }\r\n    this.setState({\r\n      visible: false,\r\n      forgotPasswordEmailId: '',\r\n    })\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n      forgotPasswordEmailId: '',\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={Styles.topView}>\r\n        <div style={Styles.loginView}>\r\n          <p style={Styles.loginText}>{Strings.LOGIN}</p>\r\n          <Divider />\r\n          <div style={Styles.emailInputView}>\r\n            <Input\r\n              style={Styles.email}\r\n              placeholder={Strings.EMAIL}\r\n              value={this.state.email}\r\n              onChange={val => this.inputMail(val)}\r\n            />\r\n          </div>\r\n          <div style={Styles.passInputView}>\r\n            <Input.Password\r\n              style={Styles.email}\r\n              placeholder={Strings.PASSWORD}\r\n              value={this.state.passWord}\r\n              onChange={val => this.inputPassword(val)}\r\n              onPressEnter={() => this.clickLogin()}\r\n            />\r\n          </div>\r\n          <div style={Styles.loginbuttonView}>\r\n            <Button style={Styles.buttonStyle} onClick={() => this.clickLogin()}>\r\n              {Strings.LOGIN}\r\n            </Button>\r\n            <Loader loader={this.props.loginLoading} />\r\n            <p style={Styles.passText} onClick={() => this.clickForgotPassword()}>\r\n              {Strings.FORGOTPASSWORD}\r\n            </p>\r\n          </div>\r\n          <Modal\r\n            className=\"forgotPassword\"\r\n            title={Strings.FORGOTPASSWORD}\r\n            visible={this.state.visible}\r\n            closable={false}\r\n            okText={Strings.RESET_PASSWORD}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}>\r\n            <Input\r\n              style={Styles.forgotPasswordEmail}\r\n              placeholder={Strings.EMAIL}\r\n              value={this.state.forgotPasswordEmailId}\r\n              onChange={val => this.InputForgotpasswordMail(val)}\r\n            />\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {login, loginLoading, loginError} = state.loginData\r\n  const {forgotpassword, forgotpasswordLoading, forgotpasswordError} = state.forgotPassWord\r\n  return {\r\n    login,\r\n    loginLoading,\r\n    loginError,\r\n    forgotpassword,\r\n    forgotpasswordLoading,\r\n    forgotpasswordError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loginAction,\r\n  adminForgotPassword,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Login)\r\n)\r\n","/** @format */\r\n\r\nexport default {\r\n  firstView: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    paddingLeft: 40,\r\n    paddingRight: 40,\r\n    paddingTop: 10,\r\n  },\r\n  customerView: {\r\n    display: 'flex',\r\n    width: 500,\r\n    height: 500,\r\n    backgroundColor: 'white',\r\n  },\r\n  newlyAdded: {\r\n    fontSize: 20,\r\n    color: 'black',\r\n    fontWeight: 600,\r\n    margin: 20,\r\n  },\r\n  dateName: {\r\n    fontSize: 15,\r\n    color: 'black',\r\n    fontWeight: 600,\r\n    marginLeft: 20,\r\n  },\r\n  titleFilterView: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n    marginTop: 10,\r\n    marginRight: 5,\r\n    marginLeft: 5,\r\n  },\r\n  progressStyle: {\r\n    width: '95%',\r\n  },\r\n  progressView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: -15,\r\n  },\r\n  monthFilterViewDashboard: {\r\n    marginRight: 20,\r\n  },\r\n  monthFilterLowerView: {\r\n    marginTop: 10,\r\n  },\r\n  addUserStyle: {\r\n    backgroundColor: '#515151',\r\n    color: 'white',\r\n    marginRight: 20,\r\n    height: 23,\r\n  },\r\n  diverStyle: {\r\n    marginTop: -5,\r\n    height: 2,\r\n  },\r\n  cardView: {\r\n    width: '95%',\r\n    borderRadius: 5,\r\n    border: '2px solid #E4E4E4',\r\n  },\r\n  cardAlignment: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  nameImageView: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    marginTop: 10,\r\n    marginLeft: 10,\r\n  },\r\n  chefNameApproveBottonView: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginTop: 10,\r\n    marginRight: 10,\r\n  },\r\n  profileView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    marginLeft: 10,\r\n  },\r\n  nameStyle: {\r\n    fontSize: 13,\r\n    color: 'black',\r\n    fontWeight: 500,\r\n    marginLeft: 10,\r\n  },\r\n  registerDateStyle: {\r\n    fontSize: 13,\r\n    color: 'gray',\r\n    fontWeight: 500,\r\n    marginLeft: 10,\r\n  },\r\n  dateView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    marginTop: 5,\r\n  },\r\n  buttonsView: {\r\n    // width: 150,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  dateButtonsView: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginRight: 10,\r\n  },\r\n  showMoreStyle: {\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: 15,\r\n    cursor: 'pointer',\r\n  },\r\n  LowershowMoreStyle: {\r\n    // marginTop: 20,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: 15,\r\n    cursor: 'pointer',\r\n  },\r\n  alignTittleFilter: {\r\n    isplay: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  chartStyle: {\r\n    width: 500,\r\n    height: 300,\r\n  },\r\n}\r\n","/** @format */\r\n\r\nexport default {\r\n  approveBotton: {\r\n    color: '#35CA45',\r\n    width: 80,\r\n    borderColor: '#35CA45',\r\n    borderWidth: 1,\r\n    fontWeight: 600,\r\n    height: 27,\r\n  },\r\n  viewBotton: {\r\n    color: '#1077EA',\r\n    width: 80,\r\n    borderColor: '#1077EA',\r\n    borderWidth: 1,\r\n    fontWeight: 600,\r\n    height: 27,\r\n  },\r\n  statusFilter: {\r\n    width: 200,\r\n    marginLeft: 20,\r\n    marginTop: -2,\r\n  },\r\n  viewEyeBotton: {\r\n    color: '#1077EA',\r\n    cursor: 'pointer',\r\n    fontSize: 20,\r\n    marginRight: 20,\r\n  },\r\n  rejectBotton: {\r\n    marginLeft: 5,\r\n    width: 80,\r\n    color: '#F24635',\r\n    borderColor: '#F24635',\r\n    borderWidth: 1,\r\n    fontWeight: 600,\r\n    height: 27,\r\n  },\r\n  imageStyle: {\r\n    display: 'flex',\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: '50%',\r\n  },\r\n  nameField: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  nameStyle: {\r\n    fontWeight: 600,\r\n    fontSize: 15,\r\n    color: 'black',\r\n    textTransform: 'capitalize',\r\n  },\r\n  reviewerNameStyle: {\r\n    fontWeight: 600,\r\n    fontSize: 15,\r\n    color: 'black',\r\n    textTransform: 'capitalize',\r\n    marginLeft: 10,\r\n  },\r\n  emailtableStyle: {\r\n    marginTop: -15,\r\n  },\r\n  profileContentView: {\r\n    marginLeft: 10,\r\n  },\r\n  nameLinkStyle: {\r\n    fontWeight: 600,\r\n    fontSize: 15,\r\n    color: 'black',\r\n    textTransform: 'capitalize',\r\n    marginLeft: 10,\r\n    textDecoration: 'underLine',\r\n    cursor: 'pointer',\r\n  },\r\n  titleTextStyle: {\r\n    fontWeight: 'bold',\r\n    fontSize: 15,\r\n    color: 'black',\r\n    textTransform: 'capitalize',\r\n    marginLeft: 10,\r\n  },\r\n  top_titleTextStyle: {\r\n    fontWeight: 'bold',\r\n    fontSize: 15,\r\n    color: 'black',\r\n    textTransform: 'capitalize',\r\n    marginLeft: 10,\r\n    marginTop: 10,\r\n  },\r\n  emptyText: {\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    fontSize: 15,\r\n    color: 'black',\r\n    textTransform: 'capitalize',\r\n    marginLeft: 10,\r\n    marginTop: 10,\r\n  },\r\n  grayText: {\r\n    fontWeight: 400,\r\n    fontSize: 15,\r\n    color: 'black',\r\n  },\r\n  reviewDecText: {\r\n    fontWeight: 400,\r\n    fontSize: 15,\r\n    color: 'black',\r\n    width: 150,\r\n  },\r\n  addButtonStyle: {\r\n    backgroundColor: '#515151',\r\n    color: 'white',\r\n    marginLeft: 50,\r\n    height: 23,\r\n  },\r\n  upperView: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'row',\r\n    backgroundColor: 'white',\r\n    border: '1px solid #E4E4E4',\r\n    width: '100%',\r\n    marginLeft: 0,\r\n    marginTop: 10,\r\n    height: 'auto',\r\n  },\r\n  subView: {\r\n    display: 'flex',\r\n    marginTop: 10,\r\n    width: 450,\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  chefsubView: {\r\n    display: 'flex',\r\n    marginTop: 10,\r\n    width: 400,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  firstSubView: {\r\n    display: 'flex',\r\n    marginTop: 10,\r\n  },\r\n  monthFilterView: {\r\n    marginRight: 5,\r\n  },\r\n  top_monthFilterView: {\r\n    marginRight: 10,\r\n    marginTop: 10,\r\n  },\r\n  editIconStyle: {\r\n    fontSize: 15,\r\n    color: '#A9A5A4',\r\n    marginTop: 5,\r\n  },\r\n  deleteIconStyle: {\r\n    fontSize: 15,\r\n    color: '#A9A5A4',\r\n    marginTop: 5,\r\n  },\r\n  monthText: {\r\n    marginLeft: 5,\r\n    color: '#33CAFF',\r\n    fontWeight: 600,\r\n    cursor: 'pointer',\r\n  },\r\n  showText: {\r\n    fontWeight: 600,\r\n  },\r\n  downIcon: {\r\n    marginTop: 5,\r\n    marginLeft: 5,\r\n    cursor: 'pointer',\r\n  },\r\n  approvalStyle: {\r\n    fontWeight: 600,\r\n    fontSize: 15,\r\n    marginLeft: 50,\r\n  },\r\n  actionStatus: {\r\n    fontWeight: 600,\r\n    fontSize: 15,\r\n    textAlign: 'center',\r\n  },\r\n  statusTextStyle: {\r\n    fontWeight: 600,\r\n    fontSize: 15,\r\n  },\r\n  nameHeader: {\r\n    marginLeft: 25,\r\n  },\r\n  actionHeader: {\r\n    marginLeft: 60,\r\n  },\r\n  lowerViewTittleFilter: {\r\n    marginTop: 10,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'row',\r\n    backgroundColor: 'white',\r\n    width: '97%',\r\n    marginLeft: 10,\r\n  },\r\n  loaderStyle: {\r\n    marginTop: 20,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  actionButtonView: {\r\n    width: 200,\r\n  },\r\n  alignActionButtons: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  alignPaginationComponents: {\r\n    display: 'flex',\r\n    flexdirect: 'row',\r\n    margin: 10,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  modalButtonView: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    marginTop: 10,\r\n  },\r\n  loadMoreStyle: {\r\n    marginRight: 10,\r\n  },\r\n  loadMoreView: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    marginTop: -10,\r\n    // marginBottom: 10,\r\n  },\r\n}\r\n","/** @format */\r\n\r\nexport const pagination = {\r\n  //Dash board\r\n  DASHBOARD_COUNT: 3,\r\n\r\n  //Chef management\r\n  CHEF_DATA_FETCH_COUNT: 10,\r\n  CHEF_OFFSET_FETCH_COUNT: 10,\r\n\r\n  //Customer management\r\n  CUSTOMER_DATA_FETCH_COUNT: 10,\r\n  CUSTOMER_OFFSET_FETCH_COUNT: 10,\r\n\r\n  //Booking history\r\n  BOOKING_DATA_FETCH_COUNT: 10,\r\n  BOOKING_OFFSET_FETCH_COUNT: 10,\r\n\r\n  //Reviews and ratings\r\n  REVIEW_DATA_FETCH_COUNT: 10,\r\n  REVIEW_OFFSET_FETCH_COUNT: 10,\r\n}\r\n","/** @format */\r\nimport moment from 'moment'\r\n\r\nexport const createdDate = params => {\r\n  //let gmt = new Date(params + 'Z')\r\n  try {\r\n    let date = moment(moment.utc(params).local()).format('MM-DD-YYYY')\r\n    return date\r\n  } catch (e) {\r\n    return null\r\n  }\r\n}\r\nexport const displayDateFormat = 'DD-MMM-YYYY'\r\nexport const GMTToLocal = time => {\r\n  let value = moment(moment.utc(time).local()).format(displayDateFormat)\r\n  return value\r\n}\r\nexport const currentDate = () => {\r\n  let date = moment(new Date()).format('MM-DD-YYYY')\r\n  console.log('dsadjalksjdlakjsd123123', date)\r\n  return date\r\n}\r\n\r\nexport const BusinessDate = params => {\r\n  try {\r\n    let date = moment(moment.utc(params).local()).format('MM-DD-YYYY')\r\n    return date\r\n  } catch (e) {\r\n    return null\r\n  }\r\n}\r\n\r\n//Pass 'week' or 'month' as params\r\nexport const getStartEndTime = val => {\r\n  let from_date = moment().startOf(val)\r\n  let from_date_format = moment(from_date).format('YYYY-MM-DD hh:mm:ss')\r\n  let to_date = moment().endOf(val)\r\n  let to_date_format = moment(to_date).format('YYYY-MM-DD hh:mm:ss')\r\n  let obj = {\r\n    start_time: from_date_format,\r\n    end_time: to_date_format,\r\n  }\r\n  return obj\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Button, Popconfirm, Divider, message, Modal, Input} from 'antd'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Styles from './styles'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLables from '../common/commonLabel'\r\nimport {getCustomerList, updateCustomerStatus} from '../../actions/index'\r\nimport n from '../routes/routesNames'\r\nimport {themes} from '../../themes/themes'\r\nimport * as pageCount from '../../components/constants/index'\r\nimport {createdDate} from '../../utils/dateFormat'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport * as gqlValue from '../../common/constants'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport Loader from '../../components/loader/loader'\r\n\r\n//Constants to fetch pagesize and offeset size to pass to query\r\nconst fetchOffset = pageCount.pagination.DASHBOARD_COUNT\r\nconst gqlStatus = gqlValue.status\r\nconst {TextArea} = Input\r\n\r\nexport class Customer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      customerList: [],\r\n      startTime: moment()\r\n        .subtract(8, 'days')\r\n        .format('YYYY-MM-DD hh:mm:ss'),\r\n      endTime: moment()\r\n        .subtract(1, 'days')\r\n        .format('YYYY-MM-DD hh:mm:ss'),\r\n      visible: false,\r\n      reason: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let val = fetchOffset\r\n    const {client} = this.props\r\n    this.props.getCustomerList(client, val, this.state.startTime, this.state.endTime)\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.customerList) {\r\n      this.setState({customerList: nxtprops.customerList})\r\n    }\r\n    if (nxtprops.customerUpdateStatus !== this.props.customerUpdateStatus) {\r\n      if (nxtprops.customerUpdateStatus) {\r\n        let val = fetchOffset\r\n        const {client} = this.props\r\n        this.props.getCustomerList(client, val, this.state.startTime, this.state.endTime)\r\n        message.success(nxtprops.customerUpdateStatus)\r\n      }\r\n    }\r\n  }\r\n\r\n  onClickShowMore = () => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push(n.CUSTOMERMANAGEMENT)\r\n    }\r\n  }\r\n  onClickAddCustomer = () => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push({\r\n        pathname: n.REGISTRATION,\r\n        state: {\r\n          type: CommonLables.ADD_CUSTOMER,\r\n          screen: CommonLables.DASHBOARD,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  //block/unblock single user\r\n  updateStatus = (status, id, reason) => {\r\n    if (status === gqlStatus.BLOCKED ? reason && reason.length > 0 : true) {\r\n      const dataArray = []\r\n      const temp = {\r\n        pId: id,\r\n        pReason: reason,\r\n      }\r\n      dataArray.push(temp)\r\n      const {client} = this.props\r\n      this.props.updateCustomerStatus(JSON.stringify(dataArray), status, client)\r\n      this.setState({\r\n        visible: false,\r\n        reason: '',\r\n      })\r\n    } else {\r\n      message.error(CommonLabels.ERROR_ENTER_REASON)\r\n    }\r\n  }\r\n\r\n  asignReason = val => {\r\n    this.setState({reason: val.target.value})\r\n  }\r\n\r\n  openModal = (type, uid) => {\r\n    if (type === CommonLabels.BULCK_ACTION ? this.state.seletedId.length > 0 : true) {\r\n      this.setState({visible: true, singleBlockId: uid, modalType: type})\r\n    } else {\r\n      message.error(CommonLabels.SELECT_CUSTOMER)\r\n    }\r\n  }\r\n\r\n  onClickCancel = () => {\r\n    this.setState({visible: false, reason: '', selectedRowKeys: []})\r\n  }\r\n\r\n  renderList() {\r\n    const val = this.state.customerList\r\n    const customers = val.slice(0, 3)\r\n    return (\r\n      <div>\r\n        <Modal visible={this.state.visible} footer={null} closable={false}>\r\n          <TextArea\r\n            placeholder={CommonLabels.ENTER_REASON}\r\n            value={this.state.reason}\r\n            autosize={{minRows: 5}}\r\n            onChange={val => this.asignReason(val)}\r\n          />\r\n          <div style={CommonStyles.modalButtonView}>\r\n            <Button style={CommonStyles.viewBotton} onClick={() => this.onClickCancel()}>\r\n              {CommonLabels.CANCEL}\r\n            </Button>\r\n            <Popconfirm\r\n              title={CommonLabels.CUSTOMER_BLOCK_ALERT}\r\n              onConfirm={() =>\r\n                this.state.modalType === CommonLabels.BULCK_ACTION\r\n                  ? this.selectedBlockStatus(gqlStatus.BLOCKED)\r\n                  : this.updateStatus(\r\n                      gqlStatus.BLOCKED,\r\n                      this.state.singleBlockId,\r\n                      this.state.reason\r\n                    )\r\n              }\r\n              okText={CommonLabels.OKTEXT}\r\n              cancelText={CommonLabels.CANCELTEXT}\r\n              placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n              <Button style={CommonStyles.rejectBotton}>{CommonLabels.BLOCK}</Button>\r\n            </Popconfirm>\r\n          </div>\r\n        </Modal>\r\n        {customers ? (\r\n          <div>\r\n            {customers.map(val => (\r\n              <div style={Styles.cardAlignment}>\r\n                <div style={Styles.cardView}>\r\n                  <div style={Styles.nameImageView}>\r\n                    <img\r\n                      style={CommonStyles.imageStyle}\r\n                      alt={CommonLables.ALTERNATE_PIC}\r\n                      src={val.customerPicId ? val.customerPicId : themes.default_user}\r\n                    />\r\n                    <p style={Styles.nameStyle}>{val.fullName ? val.fullName : '-'}</p>\r\n                  </div>\r\n                  <div style={Styles.dateButtonsView}>\r\n                    <div style={Styles.dateView}>\r\n                      <p style={Styles.registerDateStyle}>{CommonLables.REGISTER_DATE}</p>\r\n                      <p style={Styles.nameStyle}>{createdDate(val.createdAt)}</p>\r\n                    </div>\r\n                    <div style={Styles.buttonsView}>\r\n                      {/* <Popconfirm\r\n                    title={CommonLables.CUSTOMER_EDIT_ALERT}\r\n                    onConfirm={() => this.editOnCick()}\r\n                    okText={CommonLables.OKTEXT}\r\n                    cancelText={CommonLables.CANCELTEXT}\r\n                    placement={CommonLables.PLACEMENT_BOTTOM}>\r\n                    <Icon\r\n                      type={CommonLables.EDIT_ICON}\r\n                      theme={CommonLables.THEME}\r\n                      style={CommonStyles.editIconStyle}\r\n                    />\r\n                  </Popconfirm>\r\n                  <Popconfirm\r\n                    title={CommonLables.CUSTOMER_DELETE_ALERT}\r\n                    onConfirm={() => this.deleteOnClick()}\r\n                    okText={CommonLables.OKTEXT}\r\n                    cancelText={CommonLables.CANCELTEXT}\r\n                    placement={CommonLables.PLACEMENT_BOTTOM}>\r\n                    <Icon\r\n                      type={CommonLables.DELETE_ICON}\r\n                      theme={CommonLables.THEME}\r\n                      style={CommonStyles.deleteIconStyle}\r\n                    />\r\n                  </Popconfirm> */}\r\n                      {val.customerStatusId.trim() === gqlStatus.BLOCKED ? (\r\n                        <Button\r\n                          style={CommonStyles.approveBotton}\r\n                          onClick={() =>\r\n                            this.updateStatus(gqlStatus.UNBLOCKED, val.customerId, null)\r\n                          }>\r\n                          {CommonLabels.UNBLOCK}\r\n                        </Button>\r\n                      ) : (\r\n                        <Button\r\n                          style={CommonStyles.rejectBotton}\r\n                          onClick={() =>\r\n                            this.openModal(CommonLabels.SINGLE_ACTION, val.customerId)\r\n                          }>\r\n                          {CommonLabels.BLOCK}\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <p style={Styles.showMoreStyle} onClick={() => this.onClickShowMore()}>\r\n              {CommonLables.SHOW_MORE}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <p style={CommonStyles.emptyText}>{CommonLables.NO_NEW_CUSTOMER}</p>\r\n        )}\r\n\r\n        <div style={CommonStyles.loaderStyle}>\r\n          <Loader loader={this.props.customerListLoading} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"dashBoardView\">\r\n        <div style={CommonStyles.lowerViewTittleFilter}>\r\n          <p style={CommonStyles.top_titleTextStyle}>{CommonLables.NEW_CUSTOMERS}</p>\r\n          <div style={Styles.monthFilterLowerView}>{/* <Filter /> */}</div>\r\n        </div>\r\n        <Divider style={Styles.diverStyle} />\r\n        <div>{this.renderList()}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {customerList, customerListLoading} = state.customerListData\r\n  const {\r\n    customerUpdateStatus,\r\n    customerUpdateStatusLoading,\r\n    customerUpdateStatusError,\r\n  } = state.customerStatus\r\n  return {\r\n    customerList,\r\n    customerListLoading,\r\n    customerUpdateStatus,\r\n    customerUpdateStatusLoading,\r\n    customerUpdateStatusError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCustomerList,\r\n  updateCustomerStatus,\r\n}\r\n\r\nexport default withApollo(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      mapDispatchToProps\r\n    )(Customer)\r\n  )\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Button, Popconfirm, Divider, message, Modal, Input} from 'antd'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Styles from './styles'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLables from '../common/commonLabel'\r\nimport n from '../routes/routesNames'\r\nimport {themes} from '../../themes/themes'\r\nimport {getChefList, updateChefStatus} from '../../actions/index'\r\nimport * as pageCount from '../../components/constants/index'\r\nimport {createdDate} from '../../utils/dateFormat'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport * as gqlValue from '../../common/constants'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport _ from 'lodash'\r\nimport Loader from '../../components/loader/loader'\r\n\r\n//Constants to fetch pagesize and offeset size to pass to query\r\nconst fetchOffset = pageCount.pagination.DASHBOARD_COUNT\r\nconst gqlStatus = gqlValue.status\r\nconst {TextArea} = Input\r\n\r\nexport class Chef extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      chefList: [],\r\n      startTime: moment()\r\n        .subtract(8, 'days')\r\n        .format('YYYY-MM-DD hh:mm:ss'),\r\n      endTime: moment()\r\n        .subtract(1, 'days')\r\n        .format('YYYY-MM-DD hh:mm:ss'),\r\n      visible: false,\r\n      reason: '',\r\n      chefStatus: '',\r\n      statusFilter: [CommonLabels.ALL],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let val = fetchOffset\r\n    const {client} = this.props\r\n    this.props.getChefList(\r\n      client,\r\n      val,\r\n      this.state.startTime,\r\n      this.state.endTime,\r\n      this.state.statusFilter\r\n    )\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.chefList) {\r\n      this.setState({chefList: nxtprops.chefList})\r\n    }\r\n    if (nxtprops.chefUpdateStatus !== this.props.chefUpdateStatus) {\r\n      if (nxtprops.chefUpdateStatus) {\r\n        let val = fetchOffset\r\n        const {client} = this.props\r\n        this.props.getChefList(client, val, this.state.startTime, this.state.endTime)\r\n        message.success(nxtprops.chefUpdateStatus)\r\n      }\r\n    }\r\n  }\r\n\r\n  onClickShowMore = () => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push(n.CHEFMANAGEMENT)\r\n    }\r\n  }\r\n  onClickAddChef = () => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push({\r\n        pathname: n.REGISTRATION,\r\n        state: {\r\n          type: CommonLables.ADD_CHEF,\r\n          screen: CommonLables.DASHBOARD,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  //To Approve/reject block/unblock single user\r\n  updateStatus = (status, id, reason) => {\r\n    if (\r\n      status === gqlStatus.BLOCKED || status === gqlStatus.REJECTED\r\n        ? reason && reason.length > 0\r\n        : true\r\n    ) {\r\n      const dataArray = []\r\n      const temp = {\r\n        pId: id,\r\n        pReason: reason,\r\n      }\r\n      dataArray.push(temp)\r\n      const {client} = this.props\r\n      this.props.updateChefStatus(JSON.stringify(dataArray), status, client)\r\n      this.setState({visible: false, reason: ''})\r\n      // this.toUpdateImediate(idArray, status)\r\n    } else {\r\n      message.error(CommonLabels.ERROR_ENTER_REASON)\r\n    }\r\n  }\r\n\r\n  asignReason = val => {\r\n    this.setState({reason: val.target.value})\r\n  }\r\n\r\n  //To reflect updated status imediately\r\n  toUpdateImediate = (id, status) => {\r\n    const temp = this.state.chefList\r\n    const updateArr = _.filter(temp, e => {\r\n      if (_.includes(id, e.chefId)) {\r\n        e.chefStatusId = status\r\n        return e\r\n      }\r\n      return e\r\n    })\r\n    this.setState({chefList: updateArr})\r\n  }\r\n\r\n  openModal = (type, uid, status) => {\r\n    if (type === CommonLabels.BULCK_ACTION ? this.state.seletedId.length > 0 : true) {\r\n      this.setState({visible: true, singleBlockId: uid, chefStatus: status, modalType: type})\r\n    } else {\r\n      message.error(CommonLabels.SELECT_CUSTOMER)\r\n    }\r\n  }\r\n\r\n  onClickCancel = () => {\r\n    this.setState({visible: false, reason: '', selectedRowKeys: []})\r\n  }\r\n\r\n  renderList() {\r\n    const val = this.state.chefList\r\n    const customers = val.slice(0, 3)\r\n\r\n    return (\r\n      <div>\r\n        {customers ? (\r\n          <div>\r\n            {customers.map(val => (\r\n              <div style={Styles.cardAlignment}>\r\n                <div style={Styles.cardView}>\r\n                  <div style={Styles.chefNameApproveBottonView}>\r\n                    <div style={Styles.profileView}>\r\n                      <img\r\n                        style={CommonStyles.imageStyle}\r\n                        alt={CommonLables.ALTERNATE_PIC}\r\n                        src={val.chefPicId ? val.chefPicId : themes.default_user}\r\n                      />\r\n                      <p style={Styles.nameStyle}>{val.fullName ? val.fullName : '-'}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div style={Styles.dateButtonsView}>\r\n                    <div style={Styles.dateView}>\r\n                      <p style={Styles.registerDateStyle}>{CommonLables.REGISTER_DATE}</p>\r\n                      <p style={Styles.nameStyle}>{createdDate(val.createdAt)}</p>\r\n                    </div>\r\n                    <div style={Styles.buttonsView}>\r\n                      <div style={CommonStyles.actionButtonView}>\r\n                        <div style={CommonStyles.alignActionButtons}>\r\n                          {(val.chefStatusId.trim() === gqlStatus.PENDING ||\r\n                            val.chefStatusId.trim() === gqlStatus.REJECTED ||\r\n                            val.chefStatusId.trim() === gqlStatus.UNBLOCKED) && (\r\n                            <Button\r\n                              style={CommonStyles.approveBotton}\r\n                              onClick={() =>\r\n                                this.updateStatus(gqlStatus.APPROVED, val.chefId, null)\r\n                              }>\r\n                              {CommonLabels.APPROVE}\r\n                            </Button>\r\n                          )}\r\n                          {(val.chefStatusId.trim() === gqlStatus.PENDING ||\r\n                            val.chefStatusId.trim() === gqlStatus.APPROVED ||\r\n                            val.chefStatusId.trim() === gqlStatus.UNBLOCKED) && (\r\n                            <Button\r\n                              style={CommonStyles.rejectBotton}\r\n                              onClick={() =>\r\n                                this.openModal(\r\n                                  CommonLabels.SINGLE_ACTION,\r\n                                  val.chefId,\r\n                                  gqlStatus.REJECTED\r\n                                )\r\n                              }>\r\n                              {CommonLabels.REJECT}\r\n                            </Button>\r\n                          )}\r\n                          {val.chefStatusId.trim() === gqlStatus.BLOCKED && (\r\n                            <Button\r\n                              style={CommonStyles.approveBotton}\r\n                              onClick={() =>\r\n                                this.updateStatus(gqlStatus.UNBLOCKED, val.chefId, null)\r\n                              }>\r\n                              {CommonLabels.UNBLOCK}\r\n                            </Button>\r\n                          )}\r\n                          {val.chefStatusId.trim() === gqlStatus.APPROVED && (\r\n                            <Button\r\n                              style={CommonStyles.rejectBotton}\r\n                              onClick={() =>\r\n                                this.openModal(\r\n                                  CommonLabels.SINGLE_ACTION,\r\n                                  val.chefId,\r\n                                  gqlStatus.BLOCKED\r\n                                )\r\n                              }>\r\n                              {CommonLabels.BLOCK}\r\n                            </Button>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <p style={Styles.showMoreStyle} onClick={() => this.onClickShowMore()}>\r\n              {CommonLables.SHOW_MORE}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <p style={CommonStyles.emptyText}>{CommonLables.NO_NEW_CHEF}</p>\r\n        )}\r\n\r\n        <div style={CommonStyles.loaderStyle}>\r\n          <Loader loader={this.props.chefListLoading} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"dashBoardView\">\r\n        <Modal visible={this.state.visible} footer={null} closable={false}>\r\n          <TextArea\r\n            placeholder={CommonLabels.ENTER_REASON}\r\n            value={this.state.reason}\r\n            autosize={{minRows: 5}}\r\n            onChange={val => this.asignReason(val)}\r\n          />\r\n          <div style={CommonStyles.modalButtonView}>\r\n            <Button style={CommonStyles.viewBotton} onClick={() => this.onClickCancel()}>\r\n              {CommonLabels.CANCEL}\r\n            </Button>\r\n            <Popconfirm\r\n              title={\r\n                this.state.chefStatus === gqlStatus.BLOCKED\r\n                  ? CommonLabels.CHEF_BLOCK_ALERT\r\n                  : CommonLabels.CHEF_REJECT_ALERT\r\n              }\r\n              onConfirm={() =>\r\n                // this.state.modalType === CommonLabels.BULCK_ACTION\r\n                //   ? this.selectedBlockStatus(gqlStatus.BLOCKED)\r\n                //   :\r\n                this.updateStatus(\r\n                  this.state.chefStatus,\r\n                  this.state.singleBlockId,\r\n                  this.state.reason\r\n                )\r\n              }\r\n              okText={CommonLabels.OKTEXT}\r\n              cancelText={CommonLabels.CANCELTEXT}\r\n              placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n              <Button style={CommonStyles.rejectBotton}>\r\n                {this.state.chefStatus === gqlStatus.BLOCKED\r\n                  ? CommonLabels.BLOCK\r\n                  : CommonLabels.REJECT}\r\n              </Button>\r\n            </Popconfirm>\r\n          </div>\r\n        </Modal>\r\n        <div style={CommonStyles.lowerViewTittleFilter}>\r\n          <p style={CommonStyles.top_titleTextStyle}>{CommonLables.NEW_CHEFS}</p>\r\n          <div style={Styles.monthFilterLowerView}>{/* <Filter /> */}</div>\r\n        </div>\r\n        <Divider style={Styles.diverStyle} />\r\n        <div>{this.renderList()}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {chefList, chefListLoading} = state.chefListData\r\n  const {chefUpdateStatus, chefUpdateStatusLoading, chefUpdateStatusError} = state.chefStatus\r\n  return {\r\n    chefList,\r\n    chefListLoading,\r\n    chefUpdateStatus,\r\n    chefUpdateStatusLoading,\r\n    chefUpdateStatusError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getChefList,\r\n  updateChefStatus,\r\n}\r\n\r\nexport default withApollo(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      mapDispatchToProps\r\n    )(Chef)\r\n  )\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Divider} from 'antd'\r\nimport Chart from 'react-apexcharts'\r\nimport {withRouter} from 'react-router-dom'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLables from '../common/commonLabel'\r\nimport Styles from './styles'\r\nimport n from '../routes/routesNames'\r\nimport {getBussinessProgressData} from '../../actions/index'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport {GetValueFromLocal} from '../../utils/localStorage'\r\nimport moment from 'moment'\r\nimport Loader from '../../components/loader/loader'\r\n\r\nexport class BusinessProgress extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      chartData: [],\r\n      userId: '',\r\n      startTime: moment()\r\n        .subtract(8, 'days')\r\n        .format('YYYY-MM-DD hh:mm:ss'),\r\n      endTime: moment()\r\n        .subtract(1, 'days')\r\n        .format('YYYY-MM-DD hh:mm:ss'),\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    GetValueFromLocal('uid')\r\n      .then(uid => {\r\n        if (uid && uid !== '') {\r\n          this.setState({userId: uid}, () => {\r\n            const {client} = this.props\r\n            this.props.getBussinessProgressData(\r\n              client,\r\n              uid,\r\n              this.state.startTime,\r\n              this.state.endTime\r\n            )\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {})\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props && props.businessProgressData && props.businessProgressData.nodes) {\r\n      this.setState({chartData: props.businessProgressData.nodes}, () => {\r\n        this.getTransactionMonth(this.state.chartData)\r\n      })\r\n    }\r\n  }\r\n\r\n  getTransactionMonth = typeName => {\r\n    var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    let monthArray = []\r\n    let values = []\r\n    this.state.chartData.map(option => {\r\n      let monthVal = month[moment(option.createdAt).month()]\r\n      let dayVal = moment(option.createdAt).date()\r\n      let combinedValue = monthVal + dayVal.toString()\r\n      let comissonValue = option.commissionEarnedValue\r\n      monthArray.push(combinedValue)\r\n      values.push(comissonValue)\r\n    })\r\n    if (typeName === 'monthName') return monthArray\r\n    else return values\r\n  }\r\n\r\n  onClickShowMore = () => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push(n.COMMISSIONMANAGEMENT)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"dashBoardView\">\r\n        <div style={CommonStyles.lowerViewTittleFilter}>\r\n          <p style={CommonStyles.top_titleTextStyle}>{CommonLables.BUSINESS_PROGRESS}</p>\r\n        </div>\r\n        <Divider style={Styles.diverStyle} />\r\n        <Chart\r\n          className=\"dashBoardGraph\"\r\n          options={{\r\n            chart: {\r\n              id: 'basic-bar',\r\n            },\r\n            xaxis: {\r\n              categories: this.getTransactionMonth('monthName'),\r\n            },\r\n          }}\r\n          series={[\r\n            {\r\n              name: 'Commision',\r\n              data: this.getTransactionMonth('monthValue'),\r\n            },\r\n          ]}\r\n          type={CommonLables.CHART_TYPE}\r\n          style={Styles.chartStyle}\r\n        />\r\n        <p style={Styles.showMoreStyle} onClick={() => this.onClickShowMore()}>\r\n          {CommonLables.SHOW_MORE}\r\n        </p>\r\n        <div style={CommonStyles.loaderStyle}>\r\n          <Loader loader={this.props.businessProgressDataLoading} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {businessProgressData, businessProgressDataLoading} = state.bussinessProgressData\r\n  return {\r\n    businessProgressData,\r\n    businessProgressDataLoading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getBussinessProgressData,\r\n}\r\n\r\nexport default withApollo(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      mapDispatchToProps\r\n    )(BusinessProgress)\r\n  )\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport CommonStyles from '../../containers/common/commonStyles'\r\nimport CommonLabels from '../../containers/common/commonLabel'\r\nimport {themes} from '../../themes/themes'\r\n\r\nexport class PicNameField extends Component {\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      data: {},\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    if (this.props.fieldData) {\r\n      this.setState({data: this.props.fieldData})\r\n    }\r\n  }\r\n\r\n  onClickViewDetail = value => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push({\r\n        pathname: value.navigateTo,\r\n        state: {\r\n          uid: value.uid,\r\n          screen: value.screen,\r\n          extraId: value.extraId,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {data} = this.state\r\n    return (\r\n      <div style={CommonStyles.nameField} onClick={() => this.onClickViewDetail(data)}>\r\n        <img\r\n          style={CommonStyles.imageStyle}\r\n          alt={CommonLabels.ALTERNATE_PIC}\r\n          src={data.picUrl ? data.picUrl : themes.default_user}\r\n        />\r\n        {data.name ? (\r\n          <p style={CommonStyles.nameLinkStyle}>{data.name}</p>\r\n        ) : (\r\n          <p style={CommonStyles.nameStyle}>{'-'}</p>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(PicNameField)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Divider, Table} from 'antd'\r\nimport {withRouter} from 'react-router-dom'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLables from '../common/commonLabel'\r\nimport Styles from './styles'\r\nimport n from '../routes/routesNames'\r\nimport {getBookingList} from '../../actions/index'\r\nimport * as pageCount from '../../components/constants/index'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport * as gqlValue from '../../common/constants'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport PicNameField from '../../components/picNameField/picNameField'\r\nimport Loader from '../../components/loader/loader'\r\n\r\n//Constants to fetch pagesize and offeset size to pass to query\r\nconst fetchOffset = pageCount.pagination.DASHBOARD_COUNT\r\n\r\nexport class BookingHistoryDashbard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      bookingHistory: [],\r\n      startTime: moment()\r\n        .subtract(8, 'days')\r\n        .format('YYYY-MM-DD'),\r\n      endTime: moment()\r\n        .subtract(1, 'days')\r\n        .format('YYYY-MM-DD'),\r\n      visible: false,\r\n      reason: '',\r\n      chefStatus: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let val = fetchOffset\r\n    const {client} = this.props\r\n    this.props.getBookingList(\r\n      client,\r\n      val,\r\n      null,\r\n      null\r\n      // this.state.startTime + ' 00:00:00',\r\n      // this.state.endTime + ' 23:59:59'\r\n    )\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.bookingHistoryList) {\r\n      let bookingHistory = nxtprops.bookingHistoryList.slice(0, 3)\r\n      this.setState({bookingHistory})\r\n    }\r\n  }\r\n\r\n  onClickShowMore = () => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push(n.BOOKINGHISTORY)\r\n    }\r\n  }\r\n  render() {\r\n    const {bookingHistory} = this.state\r\n    const columns = [\r\n      {\r\n        title: <b style={CommonStyles.nameHeader}>{CommonLabels.CUSTOMER_NAME}</b>,\r\n        width: 200,\r\n        render: val => {\r\n          const chefField = {\r\n            name: val.customerProfileByCustomerId.fullName,\r\n            picUrl: val.customerProfileByCustomerId.customerPicId,\r\n            uid: val.customerProfileByCustomerId.customerId,\r\n            navigateTo: n.CUSTOMERDETAIL,\r\n            screen: n.BOOKINGHISTORY,\r\n            extraId: '',\r\n          }\r\n          return <PicNameField fieldData={chefField} />\r\n        },\r\n      },\r\n      {\r\n        title: <b style={CommonStyles.nameHeader}>{CommonLabels.CHEF_NAME}</b>,\r\n        width: 200,\r\n        render: val => {\r\n          const customerField = {\r\n            name: val.chefProfileByChefId.fullName,\r\n            picUrl: val.chefProfileByChefId.chefPicId,\r\n            uid: val.chefProfileByChefId.chefId,\r\n            navigateTo: n.CHEFDETAIL,\r\n            screen: n.BOOKINGHISTORY,\r\n            extraId: '',\r\n          }\r\n          return <PicNameField fieldData={customerField} />\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.SERVICE_COST}</b>,\r\n        render(val) {\r\n          return (\r\n            <div style={CommonStyles.grayText}>\r\n              <div style={CommonStyles.grayText}>\r\n                {val.chefBookingTotalPriceValue ? `$ ${val.chefBookingTotalPriceValue}` : '-'}\r\n              </div>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.STATUS}</b>,\r\n        render(val) {\r\n          return (\r\n            <div>\r\n              <p style={CommonStyles.grayText}>\r\n                {CommonLabels[val.chefBookingStatusId.trim()]\r\n                  ? CommonLabels[val.chefBookingStatusId.trim()]\r\n                  : '-'}\r\n              </p>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n    ]\r\n    // const rowSelection = {\r\n    //   onChange: (selectedRowKeys, selectedRows) => {\r\n    //     console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\r\n    //     this.setState({seletedId: selectedRows})\r\n    //   },\r\n    //   getCheckboxProps: record => ({\r\n    //     disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n    //     name: record.name,\r\n    //   }),\r\n    // }\r\n    return (\r\n      <div className=\"dashBoardView\">\r\n        <div style={CommonStyles.lowerViewTittleFilter}>\r\n          <p style={CommonStyles.top_titleTextStyle}>{CommonLables.BOOKING_HISTORY}</p>\r\n          <div style={Styles.monthFilterLowerView}>{/* <Filter /> */}</div>\r\n        </div>\r\n        <Divider style={Styles.diverStyle} />\r\n        <Table\r\n          columns={columns}\r\n          // rowSelection={rowSelection}\r\n          dataSource={bookingHistory}\r\n          pagination={false}\r\n        />\r\n        <p style={Styles.LowershowMoreStyle} onClick={() => this.onClickShowMore()}>\r\n          {CommonLables.SHOW_MORE}\r\n        </p>\r\n        <div style={CommonStyles.loaderStyle}>\r\n          <Loader loader={this.props.bookingHistoryListLoading} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {bookingHistoryList, bookingHistoryListLoading} = state.bookingHistoryData\r\n  return {\r\n    bookingHistoryList,\r\n    bookingHistoryListLoading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getBookingList,\r\n}\r\n\r\nexport default withApollo(\r\n  withRouter(\r\n    connect(\r\n      mapStateToProps,\r\n      mapDispatchToProps\r\n    )(BookingHistoryDashbard)\r\n  )\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport Customer from './customer'\r\nimport Chef from './chef'\r\nimport BusinessProgress from './businessProgress'\r\nimport BookingHistoryDashbard from './bookingHistoryDashbard'\r\nimport Styles from './styles'\r\n\r\nexport class Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={Styles.firstView}>\r\n          <Customer />\r\n          <Chef />\r\n        </div>\r\n        <div style={Styles.firstView}>\r\n          <BusinessProgress />\r\n          <BookingHistoryDashbard />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dashboard\r\n","/** @format */\r\n\r\nexport default {\r\n  alignFilter: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  alignFilterView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  datePicker: {\r\n    marginBottom: 10,\r\n    width: 250,\r\n  },\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Icon, Menu, Dropdown} from 'antd'\r\nimport CommonStyles from '../../containers/common/commonStyles'\r\nimport CommonLables from '../../containers/common/commonLabel'\r\nimport Styles from './styles'\r\nimport {DatePicker} from 'antd'\r\nimport moment from 'moment'\r\n\r\nconst {RangePicker} = DatePicker\r\n\r\nconst filterData = [\r\n  {value: CommonLables.ALL, id: 'all'},\r\n  {value: CommonLables.THIS_WEEK, id: 'this_week'},\r\n  {value: CommonLables.THIS_MONTH, id: 'this_month'},\r\n  {value: CommonLables.CUSTOM_DATE, id: 'custom'},\r\n]\r\nexport class Filter extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      timeType: 'all',\r\n      showDateSelector: false,\r\n    }\r\n  }\r\n\r\n  filter = val => {\r\n    if (val !== 'custom') {\r\n      this.setState(\r\n        {\r\n          showDateSelector: false,\r\n          timeType: val,\r\n        },\r\n        () => {\r\n          this.props.getFilterType(val)\r\n        }\r\n      )\r\n    } else {\r\n      this.setState({\r\n        showDateSelector: true,\r\n        timeType: val,\r\n      })\r\n    }\r\n  }\r\n\r\n  onChange = value => {\r\n    console.log('select date value', value[0], value[1])\r\n\r\n    if (value && value.length > 0) {\r\n      let startTime = moment(value[0]).format('YYYY-MM-DD')\r\n      let endTime = moment(value[1]).format('YYYY-MM-DD')\r\n      console.log('onChange', startTime, endTime)\r\n      this.props.customDate(startTime, endTime)\r\n    }\r\n  }\r\n  render() {\r\n    const {timeType, showDateSelector} = this.state\r\n    const menu = (\r\n      <Menu>\r\n        {filterData.map(ref => (\r\n          <Menu.Item>\r\n            <p\r\n              onClick={() => {\r\n                this.filter(ref.id)\r\n              }}>\r\n              {ref.value}\r\n            </p>\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu>\r\n    )\r\n    return (\r\n      <div>\r\n        <div style={Styles.alignFilterView}>\r\n          <Dropdown overlay={menu} placement={CommonLables.BUTTOM_RIGHT}>\r\n            <div style={Styles.alignFilterView}>\r\n              <p style={CommonStyles.showText}>{CommonLables.SHOW}</p>\r\n              {timeType === 'all' && <p style={CommonStyles.monthText}>{CommonLables.ALL}</p>}\r\n              {timeType === 'this_year' && (\r\n                <p style={CommonStyles.monthText}>{CommonLables.YEAR}</p>\r\n              )}\r\n              {timeType === 'this_month' && (\r\n                <p style={CommonStyles.monthText}>{CommonLables.MONTH}</p>\r\n              )}\r\n              {timeType === 'this_week' && (\r\n                <p style={CommonStyles.monthText}>{CommonLables.WEEK}</p>\r\n              )}\r\n              {timeType === 'custom' && <p style={CommonStyles.monthText}>{CommonLables.CUSTOM}</p>}\r\n              <Icon type={CommonLables.DOWNICON} style={CommonStyles.downIcon} />\r\n            </div>\r\n          </Dropdown>\r\n        </div>\r\n        {showDateSelector && (\r\n          <RangePicker\r\n            format={'MM-DD-YYYY'}\r\n            style={Styles.datePicker}\r\n            onChange={value => this.onChange(value)}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filter\r\n","/** @format */\r\n\r\n// /** @format */\r\n\r\nexport default {\r\n  // approveBotton: {\r\n  //   color: '#35CA45',\r\n  //   width: 80,\r\n  //   borderColor: '#35CA45',\r\n  //   borderWidth: 1,\r\n  //   fontWeight: 600,\r\n  //   height: 27,\r\n  // },\r\n  // rejectBotton: {\r\n  //   marginLeft: 5,\r\n  //   width: 80,\r\n  //   color: '#F24635',\r\n  //   borderColor: '#F24635',\r\n  //   borderWidth: 1,\r\n  //   fontWeight: 600,\r\n  //   height: 27,\r\n  // },\r\n  // imageStyle: {\r\n  //   display: 'flex',\r\n  //   width: 30,\r\n  //   height: 30,\r\n  //   marginLeft: 20,\r\n  //   borderRadius: '50%',\r\n  // },\r\n  // nameField: {\r\n  //   display: 'flex',\r\n  //   flexDirection: 'row',\r\n  // },\r\n  // nameStyle: {\r\n  //   fontWeight: 600,\r\n  //   fontSize: 15,\r\n  //   color: 'black',\r\n  //   textTransform: 'capitalize',\r\n  //   marginLeft: 10,\r\n  // },\r\n  // titleTextStyle: {\r\n  //   fontWeight: 'bold',\r\n  //   fontSize: 15,\r\n  //   color: 'black',\r\n  //   textTransform: 'capitalize',\r\n  //   marginLeft: 10,\r\n  // },\r\n  // grayText: {\r\n  //   fontWeight: 600,\r\n  //   fontSize: 15,\r\n  //   color: '#A9A5A4',\r\n  // },\r\n  // addButtonStyle: {\r\n  //   backgroundColor: '#515151',\r\n  //   color: 'white',\r\n  //   marginLeft: 50,\r\n  //   height: 23,\r\n  // },\r\n  // upperView: {\r\n  //   display: 'flex',\r\n  //   justifyContent: 'space-between',\r\n  //   flexDirection: 'row',\r\n  //   backgroundColor: 'white',\r\n  //   border: '1px solid #E4E4E4',\r\n  //   width: '95%',\r\n  //   marginLeft: 40,\r\n  //   marginTop: 10,\r\n  //   height: 50,\r\n  // },\r\n  // subView: {\r\n  //   display: 'flex',\r\n  //   marginTop: 10,\r\n  //   width: 400,\r\n  //   justifyContent: 'space-evenly',\r\n  // },\r\n  // firstSubView: {\r\n  //   display: 'flex',\r\n  //   marginTop: 10,\r\n  // },\r\n  // monthFilterView: {\r\n  //   display: 'flex',\r\n  //   flexDirection: 'row',\r\n  //   marginRight: 5,\r\n  // },\r\n  // editIconStyle: {\r\n  //   fontSize: 15,\r\n  //   color: '#A9A5A4',\r\n  //   marginTop: 5,\r\n  // },\r\n  // deleteIconStyle: {\r\n  //   fontSize: 15,\r\n  //   color: '#A9A5A4',\r\n  //   marginTop: 5,\r\n  // },\r\n  // monthText: {\r\n  //   color: '#33CAFF',\r\n  //   fontWeight: 600,\r\n  // },\r\n  // showText: {\r\n  //   fontWeight: 600,\r\n  // },\r\n  // downIcon: {\r\n  //   marginTop: 5,\r\n  // },\r\n  // approvalStyle: {\r\n  //   fontWeight: 600,\r\n  //   fontSize: 15,\r\n  //   marginLeft: 50,\r\n  // },\r\n  // nameHeader: {\r\n  //   marginLeft: 50,\r\n  // },\r\n  // dateHeader: {\r\n  //   marginLeft: 25,\r\n  // },\r\n  actionHeader: {\r\n    marginLeft: 10,\r\n  },\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Button, Pagination} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport CommonStyles from '../../containers/common/commonStyles'\r\nimport Styles from './style'\r\n\r\nexport class CommonPagination extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentWillReceiveProps(nxtprops) {}\r\n\r\n  nextPropsPress = () => {\r\n    this.props.nextPress()\r\n  }\r\n\r\n  onPagePropsChange = page => {\r\n    this.props.onPageChange(page)\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={CommonStyles.alignPaginationComponents}>\r\n        <div>\r\n          <Pagination\r\n            defaultCurrent={this.props.defaultCurrent}\r\n            total={this.props.total}\r\n            pageSize={this.props.pageSize}\r\n            onChange={page => this.onPagePropsChange(page)}\r\n          />\r\n        </div>\r\n        <div style={Styles.actionHeader}>\r\n          <Button type=\"primary\" onClick={() => this.nextPropsPress()}>\r\n            Load More\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withApollo(connect()(CommonPagination))\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Table, Button, Popconfirm, message, Modal, Input, Icon} from 'antd'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport {Filter} from '../../components/filter/filter'\r\nimport {themes} from '../../themes/themes'\r\nimport n from '../routes/routesNames'\r\nimport {getCustomerList, updateCustomerStatus} from '../../actions/index'\r\nimport * as gqlValue from '../../common/constants'\r\nimport Loader from '../../components/loader/loader'\r\nimport CommonPagination from '../../components/pagination/commonPagination'\r\nimport * as pageCount from '../../components/constants/index'\r\nimport {createdDate, getStartEndTime} from '../../utils/dateFormat'\r\n\r\nconst gqlStatus = gqlValue.status\r\nconst {TextArea} = Input\r\n\r\n//Constants to fetch pagesize and offeset size to pass to query\r\nconst defaultPageSize = pageCount.pagination.CUSTOMER_DATA_FETCH_COUNT\r\nconst fetchOffset = pageCount.pagination.CUSTOMER_OFFSET_FETCH_COUNT\r\n\r\nexport class CustomerManagement extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      seletedId: [],\r\n      allCustomerList: [],\r\n      customerList: [],\r\n      selectedRowKeys: [],\r\n      initialValue: 0,\r\n      finalValue: 1,\r\n      queryOffSetValue: 5,\r\n      selectedPageNo: 1,\r\n      visible: false,\r\n      singleBlockId: '',\r\n      reason: '',\r\n      modalType: '',\r\n      startTime: null,\r\n      endTime: null,\r\n      duplicateCustomerData: [],\r\n      customerSearchText: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let val = this.state.queryOffSetValue * defaultPageSize\r\n    const {client} = this.props\r\n    this.props.getCustomerList(client, val, this.state.startTime, this.state.endTime)\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.customerList) {\r\n      const temp = nxtprops.customerList.map((item, index) => {\r\n        return {\r\n          ...item,\r\n          keyValue: index + 1,\r\n        }\r\n      })\r\n      this.setState({allCustomerList: temp, duplicateCustomerData: temp})\r\n      // this.getTableData(\r\n      //   nxtprops.customerList,\r\n      //   this.state.initialValue,\r\n      //   this.state.offsetValue,\r\n      //   this.state.selectedPageNo\r\n      // )\r\n    }\r\n    if (nxtprops.customerUpdateStatus !== this.props.customerUpdateStatus) {\r\n      if (nxtprops.customerUpdateStatus) {\r\n        let val = this.state.queryOffSetValue * fetchOffset\r\n        const {client} = this.props\r\n        this.props.getCustomerList(client, val, this.state.startTime, this.state.endTime)\r\n        message.success(nxtprops.customerUpdateStatus)\r\n      }\r\n    }\r\n\r\n    if (nxtprops.customerUpdateStatusError) {\r\n      message.error(nxtprops.customerUpdateStatusError)\r\n    }\r\n  }\r\n\r\n  getTableData = (ArrayData, initial, offSet, pageno) => {\r\n    // let newVal = []\r\n    // newVal = ArrayData\r\n    // this.setState({allCustomerList: newVal}, () => {\r\n    //   let value = _.slice(newVal, 0, defaultPageSize)\r\n    //   this.setState({customerList: value}, () => {})\r\n    // })\r\n\r\n    this.setState({allCustomerList: ArrayData}, () => {\r\n      let splicedData = ArrayData\r\n      let pageinitial = pageno - 1\r\n      let value = _.slice(splicedData, pageinitial * fetchOffset, pageno * fetchOffset)\r\n      this.setState({customerList: value}, () => {})\r\n    })\r\n  }\r\n\r\n  onClickViewDetail = value => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push({\r\n        pathname: n.CUSTOMERDETAIL,\r\n        state: {\r\n          uid: value.customerId,\r\n          screen: n.CUSTOMERMANAGEMENT,\r\n          extraId: '',\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  //select rows\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    this.setState({selectedRowKeys, seletedId: selectedRows})\r\n  }\r\n\r\n  //multiple chefs to block/unblock\r\n  selectedBlockStatus = status => {\r\n    if (this.state.seletedId.length > 0) {\r\n      if (status === gqlStatus.BLOCKED ? this.state.reason && this.state.reason.length > 0 : true) {\r\n        const seletedIdArr = []\r\n        this.state.seletedId.forEach(val => {\r\n          const temp = {\r\n            pId: val.customerId,\r\n            pReason: this.state.reason,\r\n          }\r\n          seletedIdArr.push(temp)\r\n          if (seletedIdArr.length === this.state.seletedId.length) {\r\n            const {client} = this.props\r\n            this.props.updateCustomerStatus(JSON.stringify(seletedIdArr), status, client)\r\n            this.setState({\r\n              selectedRowKeys: [],\r\n              seletedId: [],\r\n              visible: false,\r\n              reason: '',\r\n              customerSearchText: '',\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        message.error(CommonLabels.ERROR_ENTER_REASON)\r\n      }\r\n    } else {\r\n      message.error(CommonLabels.SELECT_CUSTOMER)\r\n    }\r\n  }\r\n\r\n  //block/unblock single user\r\n  updateStatus = (status, id, reason) => {\r\n    if (status === gqlStatus.BLOCKED ? reason && reason.length > 0 : true) {\r\n      const dataArray = []\r\n      const temp = {\r\n        pId: id,\r\n        pReason: reason,\r\n      }\r\n      dataArray.push(temp)\r\n      const {client} = this.props\r\n      this.props.updateCustomerStatus(JSON.stringify(dataArray), status, client)\r\n      this.setState({\r\n        visible: false,\r\n        reason: '',\r\n        customerSearchText: '',\r\n      })\r\n    } else {\r\n      message.error(CommonLabels.ERROR_ENTER_REASON)\r\n    }\r\n  }\r\n\r\n  //Function called when load more button is pressed\r\n  nextPress = () => {\r\n    this.setState({customerSearchText: ''})\r\n    let val = this.state.queryOffSetValue\r\n    val = val + 5\r\n    this.setState(\r\n      {\r\n        queryOffSetValue: val,\r\n      },\r\n      () => {\r\n        let val = this.state.queryOffSetValue * fetchOffset\r\n        const {client} = this.props\r\n        this.props.getCustomerList(client, val, this.state.startTime, this.state.endTime)\r\n      }\r\n    )\r\n  }\r\n\r\n  //Function called when page changed\r\n  onPageChange = page => {\r\n    this.setState(\r\n      {\r\n        selectedPageNo: page,\r\n      },\r\n      () => {\r\n        let splicedData = this.state.allCustomerList\r\n        let pageno = this.state.selectedPageNo\r\n        let pageinitial = pageno - 1\r\n        let value = _.slice(splicedData, pageinitial * fetchOffset, pageno * fetchOffset)\r\n        this.setState({customerList: value}, () => {})\r\n      }\r\n    )\r\n  }\r\n\r\n  asignReason = val => {\r\n    this.setState({reason: val.target.value})\r\n  }\r\n\r\n  openModal = (type, uid) => {\r\n    if (type === CommonLabels.BULCK_ACTION ? this.state.seletedId.length > 0 : true) {\r\n      this.setState({visible: true, singleBlockId: uid, modalType: type})\r\n    } else {\r\n      message.error(CommonLabels.SELECT_CUSTOMER)\r\n    }\r\n  }\r\n\r\n  onClickCancel = () => {\r\n    this.setState({visible: false, reason: '', selectedRowKeys: [], seletedId: []})\r\n  }\r\n\r\n  getFilterType = value => {\r\n    if (value === 'this_week') {\r\n      let startTime = getStartEndTime('week').start_time\r\n      let endTime = getStartEndTime('week').end_time\r\n      this.setState(\r\n        {\r\n          startTime,\r\n          endTime,\r\n          queryOffSetValue: 5,\r\n          selectedPageNo: 1,\r\n        },\r\n        () => {\r\n          let val = this.state.queryOffSetValue * defaultPageSize\r\n          const {client} = this.props\r\n          this.props.getCustomerList(client, val, this.state.startTime, this.state.endTime)\r\n        }\r\n      )\r\n    } else if (value === 'this_month') {\r\n      let startTime = getStartEndTime('month').start_time\r\n      let endTime = getStartEndTime('month').end_time\r\n      this.setState(\r\n        {\r\n          startTime,\r\n          endTime,\r\n          queryOffSetValue: 5,\r\n          selectedPageNo: 1,\r\n        },\r\n        () => {\r\n          let val = this.state.queryOffSetValue * defaultPageSize\r\n          const {client} = this.props\r\n          this.props.getCustomerList(client, val, this.state.startTime, this.state.endTime)\r\n        }\r\n      )\r\n    } else if (value === 'all') {\r\n      this.setState(\r\n        {\r\n          startTime: null,\r\n          endTime: null,\r\n          queryOffSetValue: 5,\r\n          selectedPageNo: 1,\r\n        },\r\n        () => {\r\n          let val = this.state.queryOffSetValue * defaultPageSize\r\n          const {client} = this.props\r\n          this.props.getCustomerList(client, val, this.state.startTime, this.state.endTime)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  customDate = (startTime, endTime) => {\r\n    let newStart = startTime + ' 00:00:00'\r\n    let newEnd = endTime + ' 23:59:59'\r\n    this.setState(\r\n      {\r\n        startTime: newStart,\r\n        endTime: newEnd,\r\n        queryOffSetValue: 5,\r\n        selectedPageNo: 1,\r\n      },\r\n      () => {\r\n        let val = this.state.queryOffSetValue * defaultPageSize\r\n        const {client} = this.props\r\n        this.props.getCustomerList(client, val, this.state.startTime, this.state.endTime)\r\n      }\r\n    )\r\n  }\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({confirm, clearFilters}) => (\r\n      <div style={{padding: 8}}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node\r\n          }}\r\n          placeholder={`${CommonLabels.SEARCH} ${dataIndex}`}\r\n          value={this.state.customerSearchText}\r\n          onChange={e => this.assignSearchVakue(e.target.value)}\r\n          onPressEnter={() => this.handleSearch(confirm)}\r\n          style={{width: 188, marginBottom: 8, display: 'block'}}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(confirm)}\r\n          icon=\"search\"\r\n          size=\"small\"\r\n          style={{width: 90, marginRight: 8}}>\r\n          {CommonLabels.SEARCH}\r\n        </Button>\r\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{width: 90}}>\r\n          {CommonLabels.RESET}\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => (\r\n      <Icon type=\"search\" style={{color: filtered ? '#1890ff' : undefined}} />\r\n    ),\r\n  })\r\n\r\n  assignSearchVakue = val => {\r\n    this.setState({customerSearchText: val})\r\n  }\r\n\r\n  handleSearch = confirm => {\r\n    confirm()\r\n    if (this.state.customerSearchText.length > 2) {\r\n      const {duplicateCustomerData} = this.state\r\n      const filterValue = _.filter(duplicateCustomerData, o => {\r\n        const name = o.fullName\r\n        if (_.includes(name.toLowerCase(), this.state.customerSearchText.toLowerCase())) {\r\n          return o\r\n        }\r\n      })\r\n      this.setState({allCustomerList: []}, () => {\r\n        this.setState({allCustomerList: filterValue})\r\n      })\r\n    } else {\r\n      message.error(CommonLabels.SEARCH_ERROR)\r\n    }\r\n  }\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters()\r\n    this.setState({allCustomerList: [], customerSearchText: ''}, () => {\r\n      this.setState({allCustomerList: this.state.duplicateCustomerData})\r\n    })\r\n  }\r\n\r\n  footer = () => {\r\n    return (\r\n      <div>\r\n        <div style={CommonStyles.loadMoreView}>\r\n          <div style={CommonStyles.loadMoreStyle}>\r\n            <Button type=\"primary\" onClick={() => this.nextPress()}>\r\n              {CommonLabels.LOAD_MORE}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {selectedRowKeys, selectedPageNo, allCustomerList} = this.state\r\n    const statusFilter = [\r\n      {text: CommonLabels.APPROVED, value: gqlValue.status.APPROVED},\r\n      {text: CommonLabels.BLOCKED, value: gqlValue.status.BLOCKED},\r\n      {text: CommonLabels.UNBLOCKED, value: gqlValue.status.UNBLOCKED},\r\n      {text: CommonLabels.PENDING, value: gqlValue.status.PENDING},\r\n    ]\r\n    const columns = [\r\n      {\r\n        title: <b>{CommonLabels.SERIAL_NUMBER}</b>,\r\n        width: 70,\r\n        render(val, record, key) {\r\n          return (\r\n            <p style={CommonStyles.grayText}>\r\n              {`# ${val.keyValue}`}\r\n              {/* #{key + ((selectedPageNo - 1) * defaultPageSize + 1)} */}\r\n            </p>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b style={CommonStyles.nameHeader}>{CommonLabels.NAME}</b>,\r\n        width: 300,\r\n        ...this.getColumnSearchProps(CommonLabels.CUSTOMER_NAME),\r\n        render(val) {\r\n          return (\r\n            <div style={CommonStyles.nameField}>\r\n              <img\r\n                style={CommonStyles.imageStyle}\r\n                alt={CommonLabels.ALTERNATE_PIC}\r\n                src={val.customerPicId ? val.customerPicId : themes.default_user}\r\n              />\r\n              {/* <p style={CommonStyles.nameStyle}>{val.fullName ? val.fullName : '-'}</p> */}\r\n              <div style={CommonStyles.profileContentView}>\r\n                <p style={CommonStyles.nameStyle}>{val.fullName ? val.fullName : '-'}</p>\r\n                <p style={CommonStyles.emailtableStyle}>\r\n                  {val.customerEmail ? val.customerEmail : ''}\r\n                </p>\r\n                <p style={CommonStyles.emailtableStyle}>\r\n                  {val.customerMobileNumber ? val.customerMobileNumber : ''}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      // {\r\n      //   title: <b>{CommonLabels.PHONE_NUMBER}</b>,\r\n      //   render(val) {\r\n      //     return (\r\n      //       <p style={CommonStyles.grayText}>\r\n      //         {val.chefMobileNumber ? val.customerMobileNumber : '-'}\r\n      //       </p>\r\n      //     )\r\n      //   },\r\n      // },\r\n      {\r\n        title: <b>{CommonLabels.REGISTERED_DATE}</b>,\r\n        width: 170,\r\n        dataIndex: 'createdAt',\r\n        key: 'createdAt',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime(),\r\n        ellipsis: true,\r\n        render(val) {\r\n          return <p style={CommonStyles.grayText}>{createdDate(val)}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.BLOCK_UNBLOCK}</b>,\r\n        width: 170,\r\n        render: val => {\r\n          return (\r\n            <div>\r\n              {val.customerStatusId.trim() === gqlStatus.BLOCKED ? (\r\n                <Button\r\n                  style={CommonStyles.approveBotton}\r\n                  onClick={() => this.updateStatus(gqlStatus.UNBLOCKED, val.customerId, null)}>\r\n                  {CommonLabels.UNBLOCK}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  style={CommonStyles.rejectBotton}\r\n                  onClick={() => this.openModal(CommonLabels.SINGLE_ACTION, val.customerId)}>\r\n                  {CommonLabels.BLOCK}\r\n                </Button>\r\n              )}\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b style={CommonStyles.actionHeader}>{CommonLabels.STATUS}</b>,\r\n        width: 250,\r\n        dataIndex: 'customerStatusId',\r\n        key: 'customerStatusId',\r\n        filters: statusFilter,\r\n        onFilter: (value, record) => record.customerStatusId.trim().indexOf(value) === 0,\r\n        ellipsis: true,\r\n        render(val) {\r\n          return (\r\n            <div>\r\n              <p style={CommonStyles.approvalStyle}>\r\n                {CommonLabels[val.trim()] ? CommonLabels[val.trim()] : '-'}\r\n              </p>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        render: val => {\r\n          return (\r\n            <Icon\r\n              type=\"eye\"\r\n              style={CommonStyles.viewEyeBotton}\r\n              onClick={() => this.onClickViewDetail(val)}\r\n            />\r\n          )\r\n        },\r\n      },\r\n      // {\r\n      //   title: <b style={CommonStyles.actionHeader}>{CommonLabels.ACTION}</b>,\r\n      //   render(val) {\r\n      //     return (\r\n      //       <div>\r\n      //         {val.approvalStatus === null && (\r\n      //           <div>\r\n      //             <Button style={CommonStyles.approveBotton}>{CommonLabels.APPROVE}</Button>\r\n      //             <Popconfirm\r\n      //               title={CommonLabels.CUSTOMER_REJECT_ALERT}\r\n      //               onConfirm={() => this.clickLogout()}\r\n      //               okText={CommonLabels.OKTEXT}\r\n      //               cancelText={CommonLabels.CANCELTEXT}\r\n      //               placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n      //               <Button style={CommonStyles.rejectBotton}>{CommonLabels.REJECT}</Button>\r\n      //             </Popconfirm>\r\n      //           </div>\r\n      //         )}\r\n      //         {val.approvalStatus === CommonLabels.APPROVED && (\r\n      //           <p style={CommonStyles.approvalStyle}>{CommonLabels.APPROVED}</p>\r\n      //         )}\r\n      //         {val.approvalStatus === CommonLabels.REJECTED && (\r\n      //           <p style={CommonStyles.approvalStyle}>{CommonLabels.REJECTED}</p>\r\n      //         )}\r\n      //       </div>\r\n      //     )\r\n      //   },\r\n      // },\r\n    ]\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={CommonStyles.upperView}>\r\n          <div style={CommonStyles.firstSubView}>\r\n            <p style={CommonStyles.titleTextStyle}>{CommonLabels.CUSTOMER_TITLE}</p>\r\n            {/* <Button style={CommonStyles.addButtonStyle} onClick={() => this.onClickAddCustomer()}>\r\n              {CommonLabels.ADD_CUSTOMER}\r\n            </Button> */}\r\n          </div>\r\n          <div style={CommonStyles.subView}>\r\n            {/* <Popconfirm\r\n              title={CommonLabels.EDIT_ALERT}\r\n              onConfirm={() => this.editOnCick()}\r\n              okText={CommonLabels.OKTEXT}\r\n              cancelText={CommonLabels.CANCELTEXT}\r\n              placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n              <Icon\r\n                type={CommonLabels.EDIT_ICON}\r\n                theme={CommonLabels.THEME}\r\n                style={CommonStyles.editIconStyle}\r\n              />\r\n            </Popconfirm> */}\r\n            {/* <Popconfirm\r\n              title={CommonLabels.CUSTOMER_DELETE_ALERT}\r\n              onConfirm={() => this.deleteOnClick()}\r\n              okText={CommonLabels.OKTEXT}\r\n              cancelText={CommonLabels.CANCELTEXT}\r\n              placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n              <Icon\r\n                type={CommonLabels.DELETE_ICON}\r\n                theme={CommonLabels.THEME}\r\n                style={CommonStyles.deleteIconStyle}\r\n              />\r\n            </Popconfirm> */}\r\n\r\n            <Button\r\n              style={CommonStyles.rejectBotton}\r\n              onClick={() => this.openModal(CommonLabels.BULCK_ACTION, null)}>\r\n              {CommonLabels.BLOCK}\r\n            </Button>\r\n\r\n            <Button\r\n              style={CommonStyles.approveBotton}\r\n              onClick={() => this.selectedBlockStatus(gqlStatus.UNBLOCKED)}>\r\n              {CommonLabels.UNBLOCK}\r\n            </Button>\r\n\r\n            <div style={CommonStyles.monthFilterView}>\r\n              <Filter getFilterType={this.getFilterType} customDate={this.customDate} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Table\r\n          className=\"tableClass\"\r\n          columns={columns}\r\n          rowSelection={rowSelection}\r\n          dataSource={allCustomerList}\r\n          scroll={{y: 350}}\r\n          footer={() => this.footer()}\r\n        />\r\n        {/* <CommonPagination\r\n          defaultCurrent={selectedPageNo}\r\n          total={allCustomerList.length}\r\n          pageSize={defaultPageSize}\r\n          onPageChange={this.onPageChange}\r\n          nextPress={this.nextPress}\r\n        /> */}\r\n        <div style={CommonStyles.loaderStyle}>\r\n          <Loader loader={this.props.customerListLoading} />\r\n        </div>\r\n\r\n        {/* <div style={CommonStyles.loadMoreView}>\r\n          <div style={CommonStyles.loadMoreStyle}>\r\n            <Button type=\"primary\" onClick={() => this.nextPress()}>\r\n              {CommonLabels.LOAD_MORE}\r\n            </Button>\r\n          </div>\r\n        </div> */}\r\n\r\n        <Modal visible={this.state.visible} footer={null} closable={false}>\r\n          <TextArea\r\n            placeholder={CommonLabels.ENTER_REASON}\r\n            value={this.state.reason}\r\n            autosize={{minRows: 5}}\r\n            onChange={val => this.asignReason(val)}\r\n          />\r\n          <div style={CommonStyles.modalButtonView}>\r\n            <Button style={CommonStyles.viewBotton} onClick={() => this.onClickCancel()}>\r\n              {CommonLabels.CANCEL}\r\n            </Button>\r\n            <Popconfirm\r\n              title={CommonLabels.CUSTOMER_BLOCK_ALERT}\r\n              onConfirm={() =>\r\n                this.state.modalType === CommonLabels.BULCK_ACTION\r\n                  ? this.selectedBlockStatus(gqlStatus.BLOCKED)\r\n                  : this.updateStatus(\r\n                      gqlStatus.BLOCKED,\r\n                      this.state.singleBlockId,\r\n                      this.state.reason\r\n                    )\r\n              }\r\n              okText={CommonLabels.OKTEXT}\r\n              cancelText={CommonLabels.CANCELTEXT}\r\n              placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n              <Button style={CommonStyles.rejectBotton}>{CommonLabels.BLOCK}</Button>\r\n            </Popconfirm>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {customerList, customerListLoading} = state.customerListData\r\n  const {\r\n    customerUpdateStatus,\r\n    customerUpdateStatusLoading,\r\n    customerUpdateStatusError,\r\n  } = state.customerStatus\r\n  return {\r\n    customerList,\r\n    customerListLoading,\r\n    customerUpdateStatus,\r\n    customerUpdateStatusLoading,\r\n    customerUpdateStatusError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCustomerList,\r\n  updateCustomerStatus,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerManagement)\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Table, Button, Popconfirm, message, Modal, Input, Icon, Select} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport _ from 'lodash'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport {Filter} from '../../components/filter/filter'\r\nimport {themes} from '../../themes/themes'\r\nimport n from '../routes/routesNames'\r\nimport {getChefList, updateChefStatus} from '../../actions/index'\r\nimport * as gqlValue from '../../common/constants'\r\nimport Loader from '../../components/loader/loader'\r\nimport {createdDate, getStartEndTime} from '../../utils/dateFormat'\r\nimport CommonPagination from '../../components/pagination/commonPagination'\r\nimport * as pageCount from '../../components/constants/index'\r\n\r\nconst gqlStatus = gqlValue.status\r\nconst {TextArea} = Input\r\nconst {Option} = Select\r\n\r\n//Constants to fetch pagesize and offeset size to pass to query\r\nconst defaultPageSize = pageCount.pagination.CHEF_DATA_FETCH_COUNT\r\nconst fetchOffset = pageCount.pagination.CHEF_OFFSET_FETCH_COUNT\r\n\r\nexport class ChefManagement extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      seletedId: [],\r\n      allChefList: [],\r\n      chefList: [],\r\n      selectedRowKeys: [],\r\n      initialValue: 0,\r\n      finalValue: 1,\r\n      queryOffSetValue: 5,\r\n      selectedPageNo: 1,\r\n      startTime: null,\r\n      endTime: null,\r\n      singleBlockId: '',\r\n      visible: false,\r\n      reason: '',\r\n      chefStatus: '',\r\n      statusFilter: [CommonLabels.ALL],\r\n      chefSearchText: '',\r\n      duplicateChefData: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let val = this.state.queryOffSetValue * defaultPageSize\r\n    const {client} = this.props\r\n    this.props.getChefList(\r\n      client,\r\n      val,\r\n      this.state.startTime,\r\n      this.state.endTime,\r\n      this.state.statusFilter\r\n    )\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.chefList) {\r\n      console.log('nxtprops.chefList', nxtprops.chefList)\r\n      const temp = nxtprops.chefList.map((item, index) => {\r\n        return {\r\n          ...item,\r\n          keyValue: index + 1,\r\n        }\r\n      })\r\n      this.setState({allChefList: temp, duplicateChefData: temp})\r\n      // this.getTableData(\r\n      //   nxtprops.chefList,\r\n      //   this.state.initialValue,\r\n      //   this.state.offsetValue,\r\n      //   this.state.selectedPageNo\r\n      // )\r\n    }\r\n    if (nxtprops.chefUpdateStatus !== this.props.chefUpdateStatus) {\r\n      if (nxtprops.chefUpdateStatus) {\r\n        let val = this.state.queryOffSetValue * fetchOffset\r\n        const {client} = this.props\r\n        this.props.getChefList(\r\n          client,\r\n          val,\r\n          this.state.startTime,\r\n          this.state.endTime,\r\n          this.state.statusFilter\r\n        )\r\n        message.success(nxtprops.chefUpdateStatus)\r\n      }\r\n    }\r\n    if (nxtprops.chefUpdateStatusError) {\r\n      message.error(nxtprops.chefUpdateStatusError)\r\n    }\r\n  }\r\n\r\n  getTableData = (ArrayData, initial, offSet, pageno) => {\r\n    let newVal = []\r\n    newVal = ArrayData\r\n    this.setState({allChefList: newVal}, () => {\r\n      let value = _.slice(newVal, 0, defaultPageSize)\r\n      this.setState({chefList: value}, () => {})\r\n    })\r\n  }\r\n\r\n  //select rows\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    this.setState({selectedRowKeys, seletedId: selectedRows})\r\n  }\r\n\r\n  //multiple chefs to block/unblock\r\n  selectedBlockStatus = status => {\r\n    if (this.state.seletedId.length > 0) {\r\n      const seletedIdArr = []\r\n      this.state.seletedId.forEach(val => {\r\n        seletedIdArr.push(val.chefId)\r\n        if (seletedIdArr.length === this.state.seletedId.length) {\r\n          const {client} = this.props\r\n          this.props.updateChefStatus(seletedIdArr, status, client)\r\n          this.setState({selectedRowKeys: []})\r\n        }\r\n      })\r\n    } else if (status === gqlStatus.BLOCKED) {\r\n      message.error(CommonLabels.CHEF_SELECT_BLOCK)\r\n    } else if (status === gqlStatus.UNBLOCKED) {\r\n      message.error(CommonLabels.CHEF_SELECT_UNBLOCK)\r\n    }\r\n  }\r\n\r\n  //To Approve/reject block/unblock single user\r\n  updateStatus = (status, id, reason) => {\r\n    if (\r\n      status === gqlStatus.BLOCKED || status === gqlStatus.REJECTED\r\n        ? reason && reason.length > 0\r\n        : true\r\n    ) {\r\n      const dataArray = []\r\n      const temp = {\r\n        pId: id,\r\n        pReason: reason,\r\n      }\r\n      dataArray.push(temp)\r\n      const {client} = this.props\r\n      this.props.updateChefStatus(JSON.stringify(dataArray), status, client)\r\n      this.setState({visible: false, reason: '', chefSearchText: ''})\r\n    } else {\r\n      message.error(CommonLabels.ERROR_ENTER_REASON)\r\n    }\r\n  }\r\n\r\n  asignReason = val => {\r\n    this.setState({reason: val.target.value})\r\n  }\r\n\r\n  openModal = (type, uid, status) => {\r\n    this.setState({visible: true, singleBlockId: uid, chefStatus: status, modalType: type})\r\n  }\r\n\r\n  onClickCancel = () => {\r\n    this.setState({visible: false, reason: ''})\r\n  }\r\n\r\n  //To reflect updated status imediately\r\n  toUpdateImediate = (id, status) => {\r\n    const temp = this.state.chefList\r\n    const updateArr = _.filter(temp, e => {\r\n      if (_.includes(id, e.chefId)) {\r\n        e.chefStatusId = status\r\n        return e\r\n      }\r\n      return e\r\n    })\r\n    this.setState({chefList: updateArr})\r\n  }\r\n\r\n  // onClickAddChef = () => {\r\n  //   if (this.props && this.props.history) {\r\n  //     this.props.history.push({\r\n  //       pathname: n.REGISTRATION,\r\n  //       state: {\r\n  //         type: CommonLabels.ADD_CHEF,\r\n  //         screen: CommonLabels.CHEFMANAGEMENT,\r\n  //       },\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  onClickViewDetail = value => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push({\r\n        pathname: n.CHEFDETAIL,\r\n        state: {\r\n          uid: value.chefId,\r\n          screen: n.CHEFMANAGEMENT,\r\n          extraId: '',\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  //Function called when load more button is pressed\r\n  nextPress = () => {\r\n    this.setState({chefSearchText: ''})\r\n    let val = this.state.queryOffSetValue\r\n    val++\r\n    this.setState(\r\n      {\r\n        queryOffSetValue: val,\r\n      },\r\n      () => {\r\n        let val = this.state.queryOffSetValue * fetchOffset\r\n        const {client} = this.props\r\n        this.props.getChefList(\r\n          client,\r\n          val,\r\n          this.state.startTime,\r\n          this.state.endTime,\r\n          this.state.statusFilter\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  //Function called when page changed\r\n  onPageChange = page => {\r\n    this.setState(\r\n      {\r\n        selectedPageNo: page,\r\n      },\r\n      () => {\r\n        let splicedData = this.state.allChefList\r\n        let pageno = this.state.selectedPageNo\r\n        let pageinitial = pageno - 1\r\n        let value = _.slice(splicedData, pageinitial * fetchOffset, pageno * fetchOffset)\r\n        this.setState({chefList: value}, () => {})\r\n      }\r\n    )\r\n  }\r\n\r\n  getFilterType = value => {\r\n    if (value === 'this_week') {\r\n      let startTime = getStartEndTime('week').start_time\r\n      let endTime = getStartEndTime('week').end_time\r\n      this.setState(\r\n        {\r\n          startTime,\r\n          endTime,\r\n          queryOffSetValue: 5,\r\n          selectedPageNo: 1,\r\n        },\r\n        () => {\r\n          let val = this.state.queryOffSetValue * defaultPageSize\r\n          const {client} = this.props\r\n          this.props.getChefList(\r\n            client,\r\n            val,\r\n            this.state.startTime,\r\n            this.state.endTime,\r\n            this.state.statusFilter\r\n          )\r\n        }\r\n      )\r\n    } else if (value === 'this_month') {\r\n      let startTime = getStartEndTime('month').start_time\r\n      let endTime = getStartEndTime('month').end_time\r\n      this.setState(\r\n        {\r\n          startTime,\r\n          endTime,\r\n          queryOffSetValue: 5,\r\n          selectedPageNo: 1,\r\n        },\r\n        () => {\r\n          let val = this.state.queryOffSetValue * defaultPageSize\r\n          const {client} = this.props\r\n          this.props.getChefList(\r\n            client,\r\n            val,\r\n            this.state.startTime,\r\n            this.state.endTime,\r\n            this.state.statusFilter\r\n          )\r\n        }\r\n      )\r\n    } else if (value === 'all') {\r\n      this.setState(\r\n        {\r\n          startTime: null,\r\n          endTime: null,\r\n          queryOffSetValue: 5,\r\n          selectedPageNo: 1,\r\n        },\r\n        () => {\r\n          let val = this.state.queryOffSetValue * defaultPageSize\r\n          const {client} = this.props\r\n          this.props.getChefList(\r\n            client,\r\n            val,\r\n            this.state.startTime,\r\n            this.state.endTime,\r\n            this.state.statusFilter\r\n          )\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  customDate = (startTime, endTime) => {\r\n    let newStart = startTime + ' 00:00:00'\r\n    let newEnd = endTime + ' 23:59:59'\r\n    this.setState(\r\n      {\r\n        startTime: newStart,\r\n        endTime: newEnd,\r\n        queryOffSetValue: 5,\r\n        selectedPageNo: 1,\r\n      },\r\n      () => {\r\n        let val = this.state.queryOffSetValue * defaultPageSize\r\n        const {client} = this.props\r\n        this.props.getChefList(\r\n          client,\r\n          val,\r\n          this.state.startTime,\r\n          this.state.endTime,\r\n          this.state.statusFilter\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  statusFilter = value => {\r\n    let statusArray = []\r\n    statusArray.push(value)\r\n    let val = this.state.queryOffSetValue * defaultPageSize\r\n    const {client} = this.props\r\n    this.setState({statusFilter: statusArray}, () => {\r\n      this.props.getChefList(\r\n        client,\r\n        val,\r\n        this.state.startTime,\r\n        this.state.endTime,\r\n        this.state.statusFilter\r\n      )\r\n    })\r\n  }\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({confirm, clearFilters}) => (\r\n      <div style={{padding: 8}}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node\r\n          }}\r\n          placeholder={`${CommonLabels.SEARCH} ${dataIndex}`}\r\n          value={this.state.chefSearchText}\r\n          onChange={e => this.assignSearchVakue(e.target.value)}\r\n          onPressEnter={() => this.handleSearch(confirm)}\r\n          style={{width: 188, marginBottom: 8, display: 'block'}}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(confirm)}\r\n          icon=\"search\"\r\n          size=\"small\"\r\n          style={{width: 90, marginRight: 8}}>\r\n          {CommonLabels.SEARCH}\r\n        </Button>\r\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{width: 90}}>\r\n          {CommonLabels.RESET}\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => (\r\n      <Icon type=\"search\" style={{color: filtered ? '#1890ff' : undefined}} />\r\n    ),\r\n  })\r\n\r\n  assignSearchVakue = val => {\r\n    this.setState({chefSearchText: val})\r\n  }\r\n\r\n  handleSearch = confirm => {\r\n    confirm()\r\n    if (this.state.chefSearchText.length > 2) {\r\n      const {duplicateChefData} = this.state\r\n      const filterValue = _.filter(duplicateChefData, o => {\r\n        const name = o.fullName\r\n        if (_.includes(name.toLowerCase(), this.state.chefSearchText.toLowerCase())) {\r\n          return o\r\n        }\r\n      })\r\n      this.setState({allChefList: []}, () => {\r\n        this.setState({allChefList: filterValue})\r\n      })\r\n    } else {\r\n      message.error(CommonLabels.SEARCH_ERROR)\r\n    }\r\n  }\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters()\r\n    this.setState({allChefList: [], chefSearchText: ''}, () => {\r\n      this.setState({allChefList: this.state.duplicateChefData})\r\n    })\r\n  }\r\n\r\n  footer = () => {\r\n    return (\r\n      <div style={CommonStyles.loadMoreView}>\r\n        <div style={CommonStyles.loadMoreStyle}>\r\n          <Button type=\"primary\" onClick={() => this.nextPress()}>\r\n            {CommonLabels.LOAD_MORE}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {selectedPageNo, allChefList, statusFilter} = this.state\r\n    const columns = [\r\n      {\r\n        title: <b>{CommonLabels.SERIAL_NUMBER}</b>,\r\n        width: 70,\r\n        render(val, record, key) {\r\n          return <p style={CommonStyles.grayText}>{`# ${val.keyValue}`}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b style={CommonStyles.nameHeader}>{CommonLabels.NAME}</b>,\r\n        width: 300,\r\n        ...this.getColumnSearchProps(CommonLabels.CHEF_NAME),\r\n        render(val) {\r\n          return (\r\n            <div style={CommonStyles.nameField}>\r\n              <img\r\n                style={CommonStyles.imageStyle}\r\n                alt={CommonLabels.ALTERNATE_PIC}\r\n                src={val.chefPicId ? val.chefPicId : themes.default_user}\r\n              />\r\n              <div style={CommonStyles.profileContentView}>\r\n                <p style={CommonStyles.nameStyle}>{val.fullName ? val.fullName : '-'}</p>\r\n                <p style={CommonStyles.emailtableStyle}>{val.chefEmail ? val.chefEmail : ''}</p>\r\n                <p style={CommonStyles.emailtableStyle}>\r\n                  {val.chefMobileNumber ? val.chefMobileNumber : ''}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      // {\r\n      //   title: <b>{CommonLabels.PHONE_NUMBER}</b>,\r\n      //   render(val) {\r\n      //     return (\r\n      //       <p style={CommonStyles.grayText}>{val.chefMobileNumber ? val.chefMobileNumber : '-'}</p>\r\n      //     )\r\n      //   },\r\n      // },\r\n      {\r\n        title: <b>{CommonLabels.REGISTERED_DATE}</b>,\r\n        width: 150,\r\n        dataIndex: 'createdAt',\r\n        key: 'createdAt',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime(),\r\n        ellipsis: true,\r\n        render(val) {\r\n          return <p style={CommonStyles.grayText}>{createdDate(val)}</p>\r\n        },\r\n      },\r\n      // {\r\n      //   title: <b>{CommonLabels.BLOCK_UNBLOCK}</b>,\r\n      //   render: val => {\r\n      //     return (\r\n      //       <div>\r\n      //         {val.chefStatusId.trim() === gqlStatus.BLOCKED && (\r\n      //           <Button\r\n      //             style={CommonStyles.approveBotton}\r\n      //             onClick={() => this.updateStatus(gqlStatus.UNBLOCKED, val.chefId, null)}>\r\n      //             {CommonLabels.UNBLOCK}\r\n      //           </Button>\r\n      //         )}\r\n      //         {val.chefStatusId.trim() === gqlStatus.APPROVED && (\r\n      //           <Button\r\n      //             style={CommonStyles.rejectBotton}\r\n      //             onClick={() =>\r\n      //               this.openModal(CommonLabels.SINGLE_ACTION, val.chefId, gqlStatus.BLOCKED)\r\n      //             }>\r\n      //             {CommonLabels.BLOCK}\r\n      //           </Button>\r\n      //         )}\r\n      //       </div>\r\n      //     )\r\n      //   },\r\n      // },\r\n      {\r\n        title: <b style={CommonStyles.actionHeader}>{CommonLabels.STATUS}</b>,\r\n        width: 220,\r\n        render(val) {\r\n          return (\r\n            <div>\r\n              <p style={CommonStyles.approvalStyle}>\r\n                {CommonLabels[val.chefStatusId.trim()]\r\n                  ? CommonLabels[val.chefStatusId.trim()]\r\n                  : '-'}\r\n              </p>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b style={CommonStyles.actionHeader}>{CommonLabels.ACTION}</b>,\r\n        render: val => {\r\n          return (\r\n            <div style={CommonStyles.actionButtonView}>\r\n              <div style={CommonStyles.alignActionButtons}>\r\n                <div>\r\n                  {(val.chefStatusId.trim() === 'SUBMITTED_FOR_REVIEW' ||\r\n                    val.chefStatusId.trim() === gqlStatus.REJECTED ||\r\n                    val.chefStatusId.trim() === gqlStatus.UNBLOCKED) && (\r\n                    <Button\r\n                      style={CommonStyles.approveBotton}\r\n                      onClick={() => this.updateStatus(gqlStatus.APPROVED, val.chefId, null)}>\r\n                      {CommonLabels.APPROVE}\r\n                    </Button>\r\n                  )}\r\n                  {(val.chefStatusId.trim() === 'SUBMITTED_FOR_REVIEW' ||\r\n                    val.chefStatusId.trim() === gqlStatus.APPROVED ||\r\n                    val.chefStatusId.trim() === gqlStatus.UNBLOCKED) && (\r\n                    <Button\r\n                      style={CommonStyles.rejectBotton}\r\n                      onClick={() =>\r\n                        this.openModal(CommonLabels.SINGLE_ACTION, val.chefId, gqlStatus.REJECTED)\r\n                      }>\r\n                      {CommonLabels.REJECT}\r\n                    </Button>\r\n                  )}\r\n                  {val.chefStatusId.trim() === gqlStatus.BLOCKED && (\r\n                    <Button\r\n                      style={CommonStyles.approveBotton}\r\n                      onClick={() => this.updateStatus(gqlStatus.UNBLOCKED, val.chefId, null)}>\r\n                      {CommonLabels.UNBLOCK}\r\n                    </Button>\r\n                  )}\r\n                  {val.chefStatusId.trim() === gqlStatus.APPROVED && (\r\n                    <Button\r\n                      style={CommonStyles.rejectBotton}\r\n                      onClick={() =>\r\n                        this.openModal(CommonLabels.SINGLE_ACTION, val.chefId, gqlStatus.BLOCKED)\r\n                      }>\r\n                      {CommonLabels.BLOCK}\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                {val.chefStatusId.trim() === gqlStatus.PENDING && (\r\n                  <p style={CommonStyles.actionStatus}>{CommonLabels.PROFILE_NOT_SUBMITTED}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n\r\n      {\r\n        render: val => {\r\n          return (\r\n            <Icon\r\n              type=\"eye\"\r\n              style={CommonStyles.viewEyeBotton}\r\n              onClick={() => this.onClickViewDetail(val)}\r\n            />\r\n          )\r\n        },\r\n      },\r\n    ]\r\n\r\n    return (\r\n      <div>\r\n        <div style={CommonStyles.upperView}>\r\n          <div style={CommonStyles.firstSubView}>\r\n            <p style={CommonStyles.titleTextStyle}>{CommonLabels.CHEF_TITLE}</p>\r\n            {/* <Button style={CommonStyles.addButtonStyle} onClick={() => this.onClickAddChef()}>\r\n              {CommonLabels.ADD_CHEF}\r\n            </Button> */}\r\n            <Select\r\n              placeholder={CommonLabels.STATUS_FILTER}\r\n              style={CommonStyles.statusFilter}\r\n              onChange={this.statusFilter}\r\n              value={statusFilter[0]}>\r\n              <Option value={CommonLabels.ALL}>{CommonLabels.ALL}</Option>\r\n              <Option value={gqlStatus.PENDING}>{CommonLabels.PENDING}</Option>\r\n              <Option value=\"SUBMITTED_FOR_REVIEW\">{CommonLabels.SUBMITTED_FOR_REVIEW}</Option>\r\n              <Option value={gqlStatus.APPROVED}>{CommonLabels.APPROVED}</Option>\r\n              <Option value={gqlStatus.REJECTED}>{CommonLabels.REJECTED}</Option>\r\n              <Option value={gqlStatus.BLOCKED}>{CommonLabels.BLOCKED}</Option>\r\n              <Option value={gqlStatus.UNBLOCKED}>{CommonLabels.UNBLOCKED}</Option>\r\n            </Select>\r\n          </div>\r\n          <div style={CommonStyles.chefsubView}>\r\n            {/* <Popconfirm\r\n              title={CommonLabels.CHEF_EDIT_ALERT}\r\n              onConfirm={() => this.editOnCick()}\r\n              okText={CommonLabels.OKTEXT}\r\n              cancelText={CommonLabels.CANCELTEXT}\r\n              placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n              <Icon\r\n                type={CommonLabels.EDIT_ICON}\r\n                theme={CommonLabels.THEME}\r\n                style={CommonStyles.editIconStyle}\r\n              />\r\n            </Popconfirm> */}\r\n            {/* <Popconfirm\r\n              title={CommonLabels.CHEF_DELETE_ALERT}\r\n              onConfirm={() => this.deleteOnClick()}\r\n              okText={CommonLabels.OKTEXT}\r\n              cancelText={CommonLabels.CANCELTEXT}\r\n              placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n              <Icon\r\n                type={CommonLabels.DELETE_ICON}\r\n                theme={CommonLabels.THEME}\r\n                style={CommonStyles.deleteIconStyle}\r\n              />\r\n            </Popconfirm> */}\r\n            {/* <Popconfirm\r\n              title={CommonLabels.CHEF_SELECTED_BLOCK_ALERT}\r\n              // onConfirm={() => this.selectedBlockStatus(gqlStatus.BLOCKED)}\r\n              okText={CommonLabels.OKTEXT}\r\n              cancelText={CommonLabels.CANCELTEXT}\r\n              placement={CommonLabels.PLACEMENT}>\r\n              <Button style={CommonStyles.rejectBotton}>{CommonLabels.BLOCK}</Button>\r\n            </Popconfirm>\r\n            <Button\r\n              style={CommonStyles.approveBotton}\r\n              // onClick={() => this.selectedBlockStatus(gqlStatus.UNBLOCKED)}\r\n            >\r\n              {CommonLabels.UNBLOCK}\r\n            </Button> */}\r\n            <div style={CommonStyles.monthFilterView}>\r\n              <Filter getFilterType={this.getFilterType} customDate={this.customDate} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Table\r\n          className=\"tableClass\"\r\n          columns={columns}\r\n          dataSource={allChefList}\r\n          scroll={{y: 320}}\r\n          footer={() => this.footer()}\r\n        />\r\n        {/* <CommonPagination\r\n          defaultCurrent={selectedPageNo}\r\n          total={allChefList.length}\r\n          pageSize={defaultPageSize}\r\n          onPageChange={this.onPageChange}\r\n          nextPress={this.nextPress}\r\n        /> */}\r\n        <div style={CommonStyles.loaderStyle}>\r\n          <Loader loader={this.props.chefListLoading} />\r\n        </div>\r\n\r\n        {/* <div style={CommonStyles.loadMoreView}>\r\n          <div style={CommonStyles.loadMoreStyle}>\r\n            <Button type=\"primary\" onClick={() => this.nextPress()}>\r\n              {CommonLabels.LOAD_MORE}\r\n            </Button>\r\n          </div>\r\n        </div> */}\r\n\r\n        <Modal visible={this.state.visible} footer={null} closable={false}>\r\n          <TextArea\r\n            placeholder={CommonLabels.ENTER_REASON}\r\n            value={this.state.reason}\r\n            autosize={{minRows: 5}}\r\n            onChange={val => this.asignReason(val)}\r\n          />\r\n          <div style={CommonStyles.modalButtonView}>\r\n            <Button style={CommonStyles.viewBotton} onClick={() => this.onClickCancel()}>\r\n              {CommonLabels.CANCEL}\r\n            </Button>\r\n            <Popconfirm\r\n              title={\r\n                this.state.chefStatus === gqlStatus.BLOCKED\r\n                  ? CommonLabels.CHEF_BLOCK_ALERT\r\n                  : CommonLabels.CHEF_REJECT_ALERT\r\n              }\r\n              onConfirm={() =>\r\n                // this.state.modalType === CommonLabels.BULCK_ACTION\r\n                //   ? this.selectedBlockStatus(gqlStatus.BLOCKED)\r\n                //   :\r\n                this.updateStatus(\r\n                  this.state.chefStatus,\r\n                  this.state.singleBlockId,\r\n                  this.state.reason\r\n                )\r\n              }\r\n              okText={CommonLabels.OKTEXT}\r\n              cancelText={CommonLabels.CANCELTEXT}\r\n              placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n              <Button style={CommonStyles.rejectBotton}>\r\n                {this.state.chefStatus === gqlStatus.BLOCKED\r\n                  ? CommonLabels.BLOCK\r\n                  : CommonLabels.REJECT}\r\n              </Button>\r\n            </Popconfirm>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {chefList, chefListLoading} = state.chefListData\r\n  const {chefUpdateStatus, chefUpdateStatusLoading, chefUpdateStatusError} = state.chefStatus\r\n  return {\r\n    chefList,\r\n    chefListLoading,\r\n    chefUpdateStatus,\r\n    chefUpdateStatusLoading,\r\n    chefUpdateStatusError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getChefList,\r\n  updateChefStatus,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ChefManagement)\r\n)\r\n","/** @format */\r\n\r\nexport default {\r\n  CANCEL_ALERT: 'Are you sure. You want to cancel this booking.',\r\n  INVOICE: 'Invoice',\r\n  REASON: 'Reason',\r\n  ACCEPED: 'Acceped',\r\n  CANCELLED: 'Cancelled',\r\n  TITLE: 'All bookings',\r\n}\r\n","/** @format */\r\nimport moment from 'moment'\r\n\r\nexport const availabilityTime = params => {\r\n  const date = moment(new Date()).format('YYYY-MM-DD')\r\n  const time = moment(date + ' ' + params).format('hh:mmA')\r\n  return time\r\n}\r\n\r\nexport const bussinessTime = params => {\r\n  try {\r\n    const time = moment(moment.utc(params).local()).format('hh:mm A')\r\n    return time\r\n  } catch (e) {\r\n    return null\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Table, Icon, Input, Button, message} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport Lables from './lables'\r\nimport {Filter} from '../../components/filter/filter'\r\nimport _ from 'lodash'\r\nimport {BusinessDate, createdDate, getStartEndTime} from '../../utils/dateFormat'\r\nimport {bussinessTime} from '../../utils/timeFormat'\r\nimport {getBookingList, getBookingListUnmount} from '../../actions/index'\r\nimport * as gqlValue from '../../common/constants'\r\nimport n from '../routes/routesNames'\r\nimport Loader from '../../components/loader/loader'\r\nimport PicNameField from '../../components/picNameField/picNameField'\r\nimport CommonPagination from '../../components/pagination/commonPagination'\r\nimport * as pageCount from '../../components/constants/index'\r\nimport {themes} from '../../themes/themes'\r\n\r\n//TODO: @suren change folder name booking-history\r\n\r\n//Constants to fetch pagesize and offeset size to pass to query\r\nconst defaultPageSize = pageCount.pagination.BOOKING_DATA_FETCH_COUNT\r\nconst fetchOffset = pageCount.pagination.BOOKING_OFFSET_FETCH_COUNT\r\n\r\nexport class BookingHistory extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      bookingHistory: [],\r\n      duplicateData: [],\r\n      allBookingHistory: [],\r\n      initialValue: 0,\r\n      finalValue: 1,\r\n      queryOffSetValue: 5,\r\n      selectedPageNo: 1,\r\n      startTime: null,\r\n      endTime: null,\r\n      customerSearchText: '',\r\n      chefSearchText: '',\r\n      filteredInfo: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let val = this.state.queryOffSetValue * defaultPageSize\r\n    const {client} = this.props\r\n    this.props.getBookingList(client, val, this.state.startTime, this.state.endTime)\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    console.log('nxtprops.bookingHistoryList', nxtprops.bookingHistoryList)\r\n    if (nxtprops.bookingHistoryList) {\r\n      this.setState({\r\n        allBookingHistory: nxtprops.bookingHistoryList,\r\n        duplicateData: nxtprops.bookingHistoryList,\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.getBookingListUnmount()\r\n  }\r\n\r\n  getTableData = ArrayData => {\r\n    let newVal = []\r\n    newVal = ArrayData\r\n    this.setState({allBookingHistory: newVal}, () => {\r\n      let value = _.slice(newVal, 0, defaultPageSize)\r\n      this.setState({bookingHistory: value}, () => {})\r\n    })\r\n  }\r\n\r\n  //Function called when load more button is pressed\r\n  nextPress = () => {\r\n    this.setState({customerSearchText: '', chefSearchText: ''})\r\n    let val = this.state.queryOffSetValue\r\n    val = val + 5\r\n    this.setState(\r\n      {\r\n        queryOffSetValue: val,\r\n      },\r\n      () => {\r\n        let val = this.state.queryOffSetValue * fetchOffset\r\n        const {client} = this.props\r\n        this.props.getBookingList(client, val, this.state.startTime, this.state.endTime)\r\n      }\r\n    )\r\n  }\r\n\r\n  //Function called when page changed\r\n  onPageChange = page => {\r\n    this.setState(\r\n      {\r\n        selectedPageNo: page,\r\n      },\r\n      () => {\r\n        let splicedData = this.state.allBookingHistory\r\n        let pageno = this.state.selectedPageNo\r\n        let pageinitial = pageno - 1\r\n        let value = _.slice(splicedData, pageinitial * fetchOffset, pageno * fetchOffset)\r\n        this.setState({bookingHistory: value}, () => {})\r\n      }\r\n    )\r\n  }\r\n\r\n  onClickViewDetail = value => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push({\r\n        pathname: n.BOOKINGDETAILS,\r\n        state: {\r\n          bookingId: value.chefBookingHistId,\r\n          screen: CommonLabels.BOOKINGHISTORY,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  getFilterType = value => {\r\n    if (value === 'this_week') {\r\n      let startTime = getStartEndTime('week').start_time\r\n      let endTime = getStartEndTime('week').end_time\r\n      this.setState(\r\n        {\r\n          startTime,\r\n          endTime,\r\n          queryOffSetValue: 5,\r\n          selectedPageNo: 1,\r\n        },\r\n        () => {\r\n          let val = this.state.queryOffSetValue * defaultPageSize\r\n          const {client} = this.props\r\n          this.props.getBookingList(client, val, this.state.startTime, this.state.endTime)\r\n        }\r\n      )\r\n    } else if (value === 'this_month') {\r\n      let startTime = getStartEndTime('month').start_time\r\n      let endTime = getStartEndTime('month').end_time\r\n      this.setState(\r\n        {\r\n          startTime,\r\n          endTime,\r\n          queryOffSetValue: 5,\r\n          selectedPageNo: 1,\r\n        },\r\n        () => {\r\n          let val = this.state.queryOffSetValue * defaultPageSize\r\n          const {client} = this.props\r\n          this.props.getBookingList(client, val, this.state.startTime, this.state.endTime)\r\n        }\r\n      )\r\n    } else if (value === 'all') {\r\n      this.setState(\r\n        {\r\n          startTime: null,\r\n          endTime: null,\r\n          queryOffSetValue: 5,\r\n          selectedPageNo: 1,\r\n        },\r\n        () => {\r\n          let val = this.state.queryOffSetValue * defaultPageSize\r\n          const {client} = this.props\r\n          this.props.getBookingList(client, val, this.state.startTime, this.state.endTime)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  customDate = (startTime, endTime) => {\r\n    let newStart = startTime + ' 00:00:00'\r\n    let newEnd = endTime + ' 23:59:59'\r\n    this.setState(\r\n      {\r\n        startTime: newStart,\r\n        endTime: newEnd,\r\n        queryOffSetValue: 5,\r\n        selectedPageNo: 1,\r\n      },\r\n      () => {\r\n        let val = this.state.queryOffSetValue * defaultPageSize\r\n        const {client} = this.props\r\n        this.props.getBookingList(client, val, this.state.startTime, this.state.endTime)\r\n      }\r\n    )\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex, stateValue) => ({\r\n    filterDropdown: ({confirm, clearFilters}) => (\r\n      <div style={{padding: 8}}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node\r\n          }}\r\n          placeholder={`${CommonLabels.SEARCH} ${dataIndex}`}\r\n          value={\r\n            dataIndex === CommonLabels.CUSTOMER_NAME\r\n              ? this.state.customerSearchText\r\n              : this.state.chefSearchText\r\n          }\r\n          onChange={e => this.assignSearchVakue(e.target.value, stateValue)}\r\n          onPressEnter={() => this.handleSearch(confirm, dataIndex, stateValue)}\r\n          style={{width: 188, marginBottom: 8, display: 'block'}}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(confirm, dataIndex, stateValue)}\r\n          icon=\"search\"\r\n          size=\"small\"\r\n          style={{width: 90, marginRight: 8}}>\r\n          {CommonLabels.SEARCH}\r\n        </Button>\r\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{width: 90}}>\r\n          {CommonLabels.RESET}\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => (\r\n      <Icon type=\"search\" style={{color: filtered ? '#1890ff' : undefined}} />\r\n    ),\r\n  })\r\n\r\n  assignSearchVakue = (val, stateValue) => {\r\n    this.setState({[stateValue]: val})\r\n  }\r\n\r\n  handleSearch = (confirm, dataIndex, stateValue) => {\r\n    confirm()\r\n    if (this.state[stateValue].length > 2) {\r\n      const {duplicateData} = this.state\r\n      let count = 0\r\n      const filterValue = _.filter(duplicateData, o => {\r\n        const name =\r\n          dataIndex === CommonLabels.CUSTOMER_NAME\r\n            ? o.customerProfileByCustomerId.fullName\r\n            : o.chefProfileByChefId.fullName\r\n        if (_.includes(name.toLowerCase(), this.state[stateValue].toLowerCase())) {\r\n          return o\r\n        }\r\n      })\r\n      this.setState({allBookingHistory: []}, () => {\r\n        this.setState({allBookingHistory: filterValue})\r\n      })\r\n    } else {\r\n      message.error(CommonLabels.SEARCH_ERROR)\r\n    }\r\n  }\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters()\r\n    this.setState({allBookingHistory: [], chefSearchText: '', customerSearchText: ''}, () => {\r\n      this.setState({allBookingHistory: this.state.duplicateData})\r\n    })\r\n  }\r\n\r\n  footer = () => {\r\n    return (\r\n      <div style={CommonStyles.loadMoreView}>\r\n        <div style={CommonStyles.loadMoreStyle}>\r\n          <Button type=\"primary\" onClick={() => this.nextPress()}>\r\n            {CommonLabels.LOAD_MORE}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {selectedPageNo, allBookingHistory} = this.state\r\n    let {filteredInfo} = this.state\r\n    filteredInfo = filteredInfo || {}\r\n    const statusFilter = [\r\n      {\r\n        text: CommonLabels.PAYMENT_PENDING,\r\n        value: gqlValue.status.PAYMENT_PENDING,\r\n      },\r\n      {\r\n        text: CommonLabels.PAYMENT_FAILED,\r\n        value: 'PAYMENT_FAILED',\r\n      },\r\n      {\r\n        text: CommonLabels.CUSTOMER_REQUESTED,\r\n        value: gqlValue.status.CUSTOMER_REQUESTED,\r\n      },\r\n      {\r\n        text: CommonLabels.CHEF_ACCEPTED,\r\n        value: gqlValue.status.CHEF_ACCEPTED,\r\n      },\r\n      {\r\n        text: CommonLabels.CHEF_REJECTED,\r\n        value: gqlValue.status.CHEF_REJECTED,\r\n      },\r\n      {\r\n        text: CommonLabels.CANCELLED_BY_CHEF,\r\n        value: gqlValue.status.CANCELLED_BY_CHEF,\r\n      },\r\n      {\r\n        text: CommonLabels.CANCELLED_BY_CUSTOMER,\r\n        value: gqlValue.status.CANCELLED_BY_CUSTOMER,\r\n      },\r\n      {\r\n        text: CommonLabels.COMPLETED_BY_CHEF,\r\n        value: gqlValue.status.COMPLETED_BY_CHEF,\r\n      },\r\n      {\r\n        text: CommonLabels.COMPLETED_BY_CUSTOMER,\r\n        value: gqlValue.status.COMPLETED_BY_CUSTOMER,\r\n      },\r\n      {\r\n        text: CommonLabels.AMOUNT_TRANSFER_SUCCESS,\r\n        value: gqlValue.status.AMOUNT_TRANSFER_SUCCESS,\r\n      },\r\n      {\r\n        text: CommonLabels.AMOUNT_TRANSFER_FAILED,\r\n        value: gqlValue.status.AMOUNT_TRANSFER_FAILED,\r\n      },\r\n      {\r\n        text: CommonLabels.REFUND_AMOUNT_SUCCESS,\r\n        value: 'REFUND_AMOUNT_SUCCESS',\r\n      },\r\n      {\r\n        text: CommonLabels.COMPLETED,\r\n        value: gqlValue.status.COMPLETED,\r\n      },\r\n    ]\r\n    const columns = [\r\n      {\r\n        title: <b style={CommonStyles.nameHeader}>{CommonLabels.CUSTOMER_NAME}</b>,\r\n        ...this.getColumnSearchProps(CommonLabels.CUSTOMER_NAME, 'customerSearchText'),\r\n        width: 200,\r\n        render: val => {\r\n          // const chefField = {\r\n          //   name: val.customerProfileByCustomerId.fullName,\r\n          //   picUrl: val.customerProfileByCustomerId.customerPicId,\r\n          //   uid: val.customerProfileByCustomerId.customerId,\r\n          //   navigateTo: n.CUSTOMERDETAIL,\r\n          //   screen: n.BOOKINGHISTORY,\r\n          //   extraId: '',\r\n          // }\r\n          return (\r\n            <div style={CommonStyles.nameField}>\r\n              <img\r\n                style={CommonStyles.imageStyle}\r\n                alt={CommonLabels.ALTERNATE_PIC}\r\n                src={\r\n                  val.customerProfileByCustomerId.customerPicId\r\n                    ? val.customerProfileByCustomerId.customerPicId\r\n                    : themes.default_user\r\n                }\r\n              />\r\n              <p style={CommonStyles.reviewerNameStyle}>\r\n                {val.customerProfileByCustomerId.fullName\r\n                  ? val.customerProfileByCustomerId.fullName\r\n                  : '-'}\r\n              </p>\r\n            </div>\r\n          )\r\n          // <PicNameField fieldData={chefField} />\r\n        },\r\n      },\r\n      {\r\n        title: <b style={CommonStyles.nameHeader}>{CommonLabels.CHEF_NAME}</b>,\r\n        width: 200,\r\n        ...this.getColumnSearchProps(CommonLabels.CHEF_NAME, 'chefSearchText'),\r\n        render: val => {\r\n          const customerField = {\r\n            name: val.chefProfileByChefId.fullName,\r\n            picUrl: val.chefProfileByChefId.chefPicId,\r\n            uid: val.chefProfileByChefId.chefId,\r\n            navigateTo: n.CHEFDETAIL,\r\n            screen: n.BOOKINGHISTORY,\r\n            extraId: '',\r\n          }\r\n          return (\r\n            <div style={CommonStyles.nameField}>\r\n              <img\r\n                style={CommonStyles.imageStyle}\r\n                alt={CommonLabels.ALTERNATE_PIC}\r\n                src={\r\n                  val.chefProfileByChefId.chefPicId\r\n                    ? val.chefProfileByChefId.chefPicId\r\n                    : themes.default_user\r\n                }\r\n              />\r\n              <p style={CommonStyles.reviewerNameStyle}>\r\n                {val.chefProfileByChefId.fullName ? val.chefProfileByChefId.fullName : '-'}\r\n              </p>\r\n            </div>\r\n          )\r\n\r\n          // <PicNameField fieldData={customerField} />\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.BOOKED_ON}</b>,\r\n        width: 120,\r\n        dataIndex: 'createdAt',\r\n        key: 'createdAt',\r\n        // defaultSortOrder: 'descend',\r\n        sorter: (a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime(),\r\n        ellipsis: true,\r\n\r\n        render(val) {\r\n          return <p style={CommonStyles.grayText}>{createdDate(val)}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.SERVICE_DATE}</b>,\r\n        width: 120,\r\n        dataIndex: 'chefBookingFromTime',\r\n        key: 'chefBookingFromTime',\r\n        sorter: (a, b) =>\r\n          new Date(a.chefBookingFromTime).getTime() - new Date(b.chefBookingFromTime).getTime(),\r\n        render(val) {\r\n          return <p style={CommonStyles.grayText}>{BusinessDate(val)}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.SERVICE_TIME}</b>,\r\n        width: 120,\r\n        render(val) {\r\n          if (val.chefBookingFromTime && val.chefBookingToTime) {\r\n            return (\r\n              <div style={CommonStyles.grayText}>\r\n                {bussinessTime(val.chefBookingFromTime)}\r\n                {' - '}\r\n                {bussinessTime(val.chefBookingToTime)}\r\n              </div>\r\n            )\r\n          } else {\r\n            return <p style={CommonStyles.grayText}>{'-'}</p>\r\n          }\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.SERVICE_COST}</b>,\r\n        width: 120,\r\n        dataIndex: 'chefBookingTotalPriceValue',\r\n        key: 'chefBookingTotalPriceValue',\r\n        sorter: (a, b) => a.chefBookingTotalPriceValue - b.chefBookingTotalPriceValue,\r\n        render(val) {\r\n          return <div style={CommonStyles.grayText}>{val ? `$ ${val}` : '-'}</div>\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.STATUS}</b>,\r\n        dataIndex: 'chefBookingStatusId',\r\n        key: 'chefBookingStatusId',\r\n        filters: statusFilter,\r\n        onFilter: (value, record) => record.chefBookingStatusId.trim().indexOf(value) === 0,\r\n        ellipsis: true,\r\n\r\n        render(val) {\r\n          return (\r\n            <div>\r\n              <p style={CommonStyles.grayText}>\r\n                {CommonLabels[val.trim()] ? CommonLabels[val.trim()] : '-'}\r\n              </p>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      // {\r\n      //   title: <b>{Lables.INVOICE}</b>,\r\n      //   render(val) {\r\n      //     return <Icon type=\"snippets\" style={Styles.fileIcon} />\r\n      //   },\r\n      // },\r\n\r\n      {\r\n        render: val => {\r\n          return (\r\n            <Icon\r\n              type=\"eye\"\r\n              style={CommonStyles.viewEyeBotton}\r\n              onClick={() => this.onClickViewDetail(val)}\r\n            />\r\n          )\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   title: <b style={CommonStyles.actionHeader}>{CommonLabels.ACTION}</b>,\r\n      //   render(val) {\r\n      //     return (\r\n      //       <div>\r\n      //         {val.approvalStatus === null && (\r\n      //           <div>\r\n      //             <Button style={CommonStyles.approveBotton}>{CommonLabels.ACCEPT}</Button>\r\n      //             <Popconfirm\r\n      //               title={Lables.CANCEL_ALERT}\r\n      //               onConfirm={() => this.clickLogout()}\r\n      //               okText={CommonLabels.OKTEXT}\r\n      //               cancelText={CommonLabels.CANCELTEXT}\r\n      //               placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n      //               <Button style={CommonStyles.rejectBotton}>{CommonLabels.CANCEL}</Button>\r\n      //             </Popconfirm>\r\n      //           </div>\r\n      //         )}\r\n      //         {val.approvalStatus === CommonLabels.APPROVED && (\r\n      //           <p style={CommonStyles.approvalStyle}>{Lables.ACCEPED}</p>\r\n      //         )}\r\n      //         {val.approvalStatus === CommonLabels.REJECTED && (\r\n      //           <p style={CommonStyles.approvalStyle}>{Lables.CANCELLED}</p>\r\n      //         )}\r\n      //       </div>\r\n      //     )\r\n      //   },\r\n      // },\r\n    ]\r\n\r\n    return (\r\n      <div>\r\n        <div style={CommonStyles.upperView}>\r\n          <p style={CommonStyles.top_titleTextStyle}>{Lables.TITLE}</p>\r\n          <div style={CommonStyles.top_monthFilterView}>\r\n            <Filter getFilterType={this.getFilterType} customDate={this.customDate} />\r\n          </div>\r\n        </div>\r\n        <Table\r\n          className=\"tableClass\"\r\n          scroll={{y: 325}}\r\n          footer={() => this.footer()}\r\n          pagination={{\r\n            current: this.state.current,\r\n            onChange: page => {\r\n              this.setState({\r\n                current: page,\r\n              })\r\n            },\r\n          }}\r\n          columns={columns}\r\n          dataSource={allBookingHistory}\r\n        />\r\n        <div style={CommonStyles.loaderStyle}>\r\n          <Loader loader={this.props.bookingHistoryListLoading} />\r\n        </div>\r\n        {/* <CommonPagination\r\n          defaultCurrent={selectedPageNo}\r\n          total={allBookingHistory.length}\r\n          pageSize={defaultPageSize}\r\n          onPageChange={this.onPageChange}\r\n          nextPress={this.nextPress}\r\n        /> */}\r\n\r\n        {/* <div style={CommonStyles.loadMoreView}>\r\n          <div style={CommonStyles.loadMoreStyle}>\r\n            <Button type=\"primary\" onClick={() => this.nextPress()}>\r\n              {CommonLabels.LOAD_MORE}\r\n            </Button>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {bookingHistoryList, bookingHistoryListLoading} = state.bookingHistoryData\r\n  return {\r\n    bookingHistoryList,\r\n    bookingHistoryListLoading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getBookingList,\r\n  getBookingListUnmount,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(BookingHistory)\r\n)\r\n","/** @format */\r\n\r\nexport default {\r\n  topView: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    paddingLeft: 40,\r\n    paddingRight: 40,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  lowerView: {\r\n    paddingLeft: 40,\r\n    paddingRight: 40,\r\n    paddingTop: 10,\r\n  },\r\n  diverStyle: {\r\n    marginTop: -5,\r\n    height: 2,\r\n  },\r\n  aligtableStyle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  updateInput: {\r\n    width: 150,\r\n    height: 50,\r\n    // borderRadius: 10,\r\n  },\r\n  updateButton: {\r\n    backgroundColor: '#515151',\r\n    color: 'white',\r\n    marginTop: 20,\r\n  },\r\n  getInputView: {\r\n    marginTop: 20,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '50%',\r\n  },\r\n  alignUpdateContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  upadteText: {\r\n    fontWeight: 600,\r\n    fontSize: 17,\r\n  },\r\n  titleTextStyle: {\r\n    fontWeight: 'bold',\r\n    fontSize: 15,\r\n    color: 'black',\r\n    textTransform: 'capitalize',\r\n    marginLeft: 10,\r\n    marginTop: 20,\r\n  },\r\n  filterView: {\r\n    marginTop: 10,\r\n    marginRight: 5,\r\n  },\r\n  progressFilterView: {\r\n    marginTop: 10,\r\n    marginRight: -10,\r\n  },\r\n  earnedView: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  amoutText: {\r\n    fontSize: 45,\r\n    fontWeight: 600,\r\n    color: '#7b9aa0',\r\n    textAlign: 'center',\r\n    marginTop: -20,\r\n  },\r\n  durationText: {\r\n    fontSize: 25,\r\n    fontWeight: 600,\r\n    textAlign: 'center',\r\n  },\r\n  chartStyle: {\r\n    width: '70%',\r\n    height: '100',\r\n  },\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Divider, Table, InputNumber, Button, message} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLables from '../common/commonLabel'\r\nimport Styles from './styles'\r\nimport {createCommission, getCommissionList} from '../../actions/index'\r\nimport {createdDate} from '../../utils/dateFormat'\r\nimport {GetValueFromLocal} from '../../utils/localStorage'\r\nexport class UpdateCommission extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      updateCommission: '',\r\n      commissionList: [],\r\n      adminId: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    GetValueFromLocal('uid')\r\n      .then(async uid => {\r\n        await this.setState({adminId: uid}, () => {\r\n          const {client} = this.props\r\n          this.props.getCommissionList(client, this.state.adminId)\r\n        })\r\n      })\r\n      .catch(err => {\r\n        message.error(err)\r\n      })\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.commissionUpdate !== this.props.commissionUpdate) {\r\n      if (nxtprops.commissionUpdate) {\r\n        const {client} = this.props\r\n        this.props.getCommissionList(client, this.state.adminId)\r\n        message.success(CommonLables.UPDATE_SUCCESSFULLY)\r\n      }\r\n    }\r\n    if (nxtprops.commissionList) {\r\n      this.setState({commissionList: nxtprops.commissionList})\r\n    }\r\n  }\r\n\r\n  storeUpdateCommission = value => {\r\n    this.setState({\r\n      updateCommission: value,\r\n    })\r\n  }\r\n\r\n  clickUpdate = () => {\r\n    const {client} = this.props\r\n    if (this.state.updateCommission) {\r\n      this.props.createCommission(this.state.updateCommission, this.state.adminId, client)\r\n      this.setState({\r\n        updateCommission: '',\r\n      })\r\n    } else {\r\n      message.error(CommonLables.INVALIDE_COMMISSION)\r\n    }\r\n  }\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: <b>{CommonLables.DATE}</b>,\r\n        render(val) {\r\n          return <p style={CommonStyles.grayText}>{createdDate(val.createdAt)}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLables.COMMISSION}</b>,\r\n        render(val) {\r\n          return (\r\n            <p style={CommonStyles.grayText}>\r\n              {val.commissionValue}\r\n              {val.commissionUnit}\r\n            </p>\r\n          )\r\n        },\r\n      },\r\n    ]\r\n    return (\r\n      <div className=\"commissionTopView\">\r\n        <p style={Styles.titleTextStyle}>{CommonLables.COMMISSION_MANAGEMENT}</p>\r\n        <Divider style={Styles.diverStyle} />\r\n        <div style={Styles.aligtableStyle}>\r\n          <Table\r\n            className=\"commissionTable\"\r\n            columns={columns}\r\n            dataSource={this.state.commissionList}\r\n            pagination={false}\r\n          />\r\n          <div style={Styles.getInputView}>\r\n            <div style={Styles.alignUpdateContent}>\r\n              <p style={Styles.upadteText}>{CommonLables.UPDATE_COMMISSION}</p>\r\n              <InputNumber\r\n                style={Styles.updateInput}\r\n                value={this.state.updateCommission}\r\n                min={0}\r\n                max={100}\r\n                formatter={value => `${value}${CommonLables.PERCENT}`}\r\n                parser={value => value.replace(CommonLables.PERCENT, '')}\r\n                onChange={this.storeUpdateCommission}\r\n              />\r\n              <Button style={Styles.updateButton} onClick={() => this.clickUpdate()}>\r\n                {CommonLables.UPDATE}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {commissionUpdate, commissionUpdateLoading} = state.commission\r\n  const {commissionList, commissionListLoading} = state.commissionData\r\n  return {\r\n    commissionUpdate,\r\n    commissionUpdateLoading,\r\n    commissionList,\r\n    commissionListLoading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  createCommission,\r\n  getCommissionList,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(UpdateCommission)\r\n)\r\n","/** @format */\r\n\r\nimport {\r\n  UPDATE_COMMISSION,\r\n  UPDATE_COMMISSION_SUCCESS,\r\n  UPDATE_COMMISSION_FAIL,\r\n  GET_COMMISSION,\r\n  GET_COMMISSION_SUCCESS,\r\n  GET_COMMISSION_FAIL,\r\n  GET_TOTAL_COMMISON_EARNED,\r\n  GET_TOTAL_COMMISON_EARNED_SUCCESS,\r\n  GET_TOTAL_COMMISON_EARNED_FAIL,\r\n} from './types.js'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\nimport {node} from 'prop-types'\r\n\r\nexport const createCommission = (commission, uid, client) => async dispatch => {\r\n  dispatch({type: UPDATE_COMMISSION})\r\n  try {\r\n    const gqlValue = gqlTag.mutation.commission.createMgmtHistGQLTAG\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: {\r\n        commissionValue: commission,\r\n        commissionUnit: '%',\r\n        adminId: uid,\r\n      },\r\n    })\r\n    if (data && data.createCommissionManagementHistory) {\r\n      return dispatch({type: UPDATE_COMMISSION_SUCCESS, payload: CommonLabels.SUCCESS})\r\n    } else {\r\n      return dispatch({\r\n        type: UPDATE_COMMISSION_FAIL,\r\n        payload: data.createCommissionManagementHistory,\r\n      })\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: UPDATE_COMMISSION_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const getCommissionList = (client, uid) => async dispatch => {\r\n  dispatch({type: GET_COMMISSION})\r\n  try {\r\n    const gqlValue = gqlTag.query.commission.filterMgmtByAdminIdGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {offset: 0, first: 5},\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    const {nodes} = data.allCommissionManagementHistories\r\n    if (nodes && node.length > 0) {\r\n      return dispatch({type: GET_COMMISSION_SUCCESS, payload: nodes})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_COMMISSION_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const getTotalCommisionEarned = (client, uid, startTime, endTime) => async dispatch => {\r\n  dispatch({type: GET_TOTAL_COMMISON_EARNED})\r\n  try {\r\n    let filterValue = {\r\n      adminId: uid,\r\n      pFromTime: startTime,\r\n      pToTime: endTime,\r\n    }\r\n    if (startTime === null && endTime === null) {\r\n      filterValue = {\r\n        adminId: uid,\r\n        pFromTime: null,\r\n        pToTime: null,\r\n      }\r\n    }\r\n    const gqlValue = gqlTag.query.admin.profileByIdGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: filterValue,\r\n    })\r\n\r\n    const nodes = data.adminProfileByAdminId\r\n\r\n    if (nodes && nodes.length !== null && nodes !== undefined) {\r\n      return dispatch({type: GET_TOTAL_COMMISON_EARNED_SUCCESS, payload: nodes})\r\n    } else {\r\n      return dispatch({type: GET_TOTAL_COMMISON_EARNED_FAIL, payload: []})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_TOTAL_COMMISON_EARNED_FAIL, payload: err.message})\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Divider, message} from 'antd'\r\nimport {Filter} from '../../components/filter/filter'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLables from '../common/commonLabel'\r\nimport {GetValueFromLocal} from '../../utils/localStorage'\r\nimport {getTotalCommisionEarned} from '../../actions/index'\r\nimport {createdDate, getStartEndTime, currentDate} from '../../utils/dateFormat'\r\nimport Styles from './styles'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\n\r\nexport class TotalCommissionEared extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      commissionList: [],\r\n      adminId: '',\r\n      commissionEarned: 0,\r\n      startTime: null,\r\n      endTime: currentDate(),\r\n      firstTime: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    GetValueFromLocal('uid')\r\n      .then(async uid => {\r\n        await this.setState({adminId: uid}, () => {\r\n          const {client} = this.props\r\n          this.props.getTotalCommisionEarned(client, this.state.adminId, null, null)\r\n        })\r\n      })\r\n      .catch(err => {\r\n        message.error(err)\r\n      })\r\n  }\r\n\r\n  componentWillReceiveProps(nextprops) {\r\n    if (\r\n      nextprops &&\r\n      nextprops.commissionData &&\r\n      nextprops.commissionData.totalCommissionEarned !== null\r\n    ) {\r\n      this.setState({\r\n        startTime: nextprops.commissionData.commissionEarnedHisStartDate,\r\n        commissionEarned: nextprops.commissionData.totalCommissionEarned,\r\n      })\r\n    } else if (\r\n      nextprops &&\r\n      nextprops.commissionData &&\r\n      nextprops.commissionData.totalCommissionEarned == null\r\n    ) {\r\n      this.setState({\r\n        startTime: nextprops.commissionData.commissionEarnedHisStartDate,\r\n        commissionEarned: 0,\r\n      })\r\n    }\r\n  }\r\n\r\n  getFilterType = value => {\r\n    if (value === 'this_week') {\r\n      let startTime = getStartEndTime('week').start_time\r\n      let endTime = getStartEndTime('week').end_time\r\n      this.setState(\r\n        {\r\n          startTime,\r\n          endTime,\r\n        },\r\n        () => {\r\n          const {client} = this.props\r\n          this.props.getTotalCommisionEarned(\r\n            client,\r\n            this.state.adminId,\r\n            this.state.startTime,\r\n            this.state.endTime\r\n          )\r\n        }\r\n      )\r\n    } else if (value === 'this_month') {\r\n      let startTime = getStartEndTime('month').start_time\r\n      let endTime = getStartEndTime('month').end_time\r\n      this.setState(\r\n        {\r\n          startTime,\r\n          endTime,\r\n        },\r\n        () => {\r\n          const {client} = this.props\r\n          this.props.getTotalCommisionEarned(\r\n            client,\r\n            this.state.adminId,\r\n            this.state.startTime,\r\n            this.state.endTime\r\n          )\r\n        }\r\n      )\r\n    } else if (value === 'all') {\r\n      this.setState(\r\n        {\r\n          startTime: null,\r\n          endTime: currentDate(),\r\n        },\r\n        () => {\r\n          const {client} = this.props\r\n          this.props.getTotalCommisionEarned(client, this.state.adminId, this.state.startTime, null)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  customDate = (startTime, endTime) => {\r\n    let newStart = startTime + ' 00:00:00'\r\n    let newEnd = endTime + ' 23:59:59'\r\n    this.setState(\r\n      {\r\n        startTime: newStart,\r\n        endTime: newEnd,\r\n        queryOffSetValue: 1,\r\n        selectedPageNo: 1,\r\n      },\r\n      () => {\r\n        const {client} = this.props\r\n        this.props.getTotalCommisionEarned(\r\n          client,\r\n          this.state.adminId,\r\n          this.state.startTime,\r\n          this.state.endTime\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {commissionEarned, startTime, endTime} = this.state\r\n    console.log('endTime startTime', startTime, endTime)\r\n    return (\r\n      <div className=\"commissionTopView\">\r\n        <div style={CommonStyles.lowerViewTittleFilter}>\r\n          <p style={CommonStyles.top_titleTextStyle}>{CommonLables.COMMISSION_EARNED}</p>\r\n          <div style={Styles.filterView}>\r\n            <Filter getFilterType={this.getFilterType} customDate={this.customDate} />\r\n          </div>\r\n        </div>\r\n        <Divider style={Styles.diverStyle} />\r\n        <div style={Styles.alignUpdateContent}>\r\n          <p style={Styles.durationText}>\r\n            {'From: ' + createdDate(startTime) + '  /  ' + 'To: ' + createdDate(endTime)}\r\n          </p>\r\n          <p style={Styles.amoutText}>{`$ ${commissionEarned}`}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {commissionData, commissionDataLoading} = state.totalCommission\r\n\r\n  return {\r\n    commissionData,\r\n    commissionDataLoading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getTotalCommisionEarned,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TotalCommissionEared)\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Divider} from 'antd'\r\nimport Chart from 'react-apexcharts'\r\nimport {Filter} from '../../components/filter/filter'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLables from '../common/commonLabel'\r\nimport Styles from './styles'\r\nimport n from '../routes/routesNames'\r\nimport {getBussinessProgressData} from '../../actions/index'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport {GetValueFromLocal} from '../../utils/localStorage'\r\nimport moment from 'moment'\r\nimport {getStartEndTime} from '../../utils/dateFormat'\r\n\r\nexport class BusinessProgressCommission extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      chartData: [],\r\n      userId: '',\r\n      startTime: null,\r\n      endTime: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    GetValueFromLocal('uid')\r\n      .then(uid => {\r\n        if (uid && uid !== '') {\r\n          this.setState({userId: uid}, () => {\r\n            const {client} = this.props\r\n            this.props.getBussinessProgressData(\r\n              client,\r\n              uid,\r\n              this.state.startTime,\r\n              this.state.endTime\r\n            )\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {})\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (props && props.businessProgressData && props.businessProgressData.nodes) {\r\n      this.setState({chartData: props.businessProgressData.nodes}, () => {\r\n        this.getTransactionMonth(this.state.chartData)\r\n      })\r\n    }\r\n  }\r\n\r\n  getFilterType = value => {\r\n    if (value === 'this_week') {\r\n      let startTime = getStartEndTime('week').start_time\r\n      let endTime = getStartEndTime('week').end_time\r\n      this.setState(\r\n        {\r\n          startTime,\r\n          endTime,\r\n        },\r\n        () => {\r\n          const {client} = this.props\r\n          this.props.getBussinessProgressData(\r\n            client,\r\n            this.state.userId,\r\n            this.state.startTime,\r\n            this.state.endTime\r\n          )\r\n        }\r\n      )\r\n    } else if (value === 'this_month') {\r\n      let startTime = getStartEndTime('month').start_time\r\n      let endTime = getStartEndTime('month').end_time\r\n      this.setState(\r\n        {\r\n          startTime,\r\n          endTime,\r\n        },\r\n        () => {\r\n          const {client} = this.props\r\n          this.props.getBussinessProgressData(\r\n            client,\r\n            this.state.userId,\r\n            this.state.startTime,\r\n            this.state.endTime\r\n          )\r\n        }\r\n      )\r\n    } else if (value === 'all') {\r\n      this.setState(\r\n        {\r\n          startTime: null,\r\n          endTime: null,\r\n        },\r\n        () => {\r\n          const {client} = this.props\r\n          this.props.getBussinessProgressData(\r\n            client,\r\n            this.state.userId,\r\n            this.state.startTime,\r\n            this.state.endTime\r\n          )\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  customDate = (startTime, endTime) => {\r\n    let newStart = startTime + ' 00:00:00'\r\n    let newEnd = endTime + ' 23:59:59'\r\n    this.setState(\r\n      {\r\n        startTime: newStart,\r\n        endTime: newEnd,\r\n        queryOffSetValue: 1,\r\n        selectedPageNo: 1,\r\n      },\r\n      () => {\r\n        const {client} = this.props\r\n        this.props.getBussinessProgressData(\r\n          client,\r\n          this.state.userId,\r\n          this.state.startTime,\r\n          this.state.endTime\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  getTransactionMonth = typeName => {\r\n    var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    let monthArray = []\r\n    let values = []\r\n    this.state.chartData.map(option => {\r\n      let monthVal = month[moment(option.createdAt).month()]\r\n      let dayVal = moment(option.createdAt).date()\r\n      let combinedValue = monthVal + dayVal.toString()\r\n      let comissonValue = option.commissionEarnedValue\r\n      monthArray.push(combinedValue)\r\n      values.push(comissonValue)\r\n    })\r\n    if (typeName === 'monthName') return monthArray\r\n    else return values\r\n  }\r\n\r\n  onClickShowMore = () => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push(n.COMMISSIONMANAGEMENT)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"commissionLowerView\">\r\n        <div style={CommonStyles.lowerViewTittleFilter}>\r\n          <p style={CommonStyles.top_titleTextStyle}>{CommonLables.BUSINESS_PROGRESS}</p>\r\n          <div style={Styles.progressFilterView}>\r\n            <Filter getFilterType={this.getFilterType} customDate={this.customDate} />\r\n          </div>\r\n        </div>\r\n        <Divider style={Styles.diverStyle} />\r\n        <div style={Styles.earnedView}>\r\n          <Chart\r\n            className=\"dashBoardGraph\"\r\n            options={{\r\n              chart: {\r\n                id: 'basic-bar',\r\n              },\r\n              xaxis: {\r\n                categories: this.getTransactionMonth('monthName'),\r\n              },\r\n            }}\r\n            series={[\r\n              {\r\n                name: 'Commision',\r\n                data: this.getTransactionMonth('monthValue'),\r\n              },\r\n            ]}\r\n            type={CommonLables.CHART_TYPE}\r\n            style={Styles.chartStyle}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {businessProgressData, businessProgressDataLoading} = state.bussinessProgressData\r\n  return {\r\n    businessProgressData,\r\n    businessProgressDataLoading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getBussinessProgressData,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(BusinessProgressCommission)\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport UpdateCommission from './updateCommission'\r\nimport TotalCommissionEared from './totalCommissionEared'\r\nimport BusinessProgressCommission from './businessProgressCommission'\r\nimport Styles from './styles'\r\n\r\nexport class CommissionManagement extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={Styles.topView}>\r\n          <UpdateCommission />\r\n          <TotalCommissionEared value={this.props} />\r\n        </div>\r\n        <div style={Styles.lowerView}>\r\n          <BusinessProgressCommission />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CommissionManagement\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Table, Button, Popconfirm, message, Modal, Input, Icon, Rate} from 'antd'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLables from '../common/commonLabel'\r\nimport {Filter} from '../../components/filter/filter'\r\nimport {themes} from '../../themes/themes'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport {\r\n  getReviewRatingList,\r\n  updateBlockUnblockStatus,\r\n  setEmptyReviewRatingList,\r\n} from '../../actions/index'\r\nimport {createdDate, getStartEndTime} from '../../utils/dateFormat'\r\nimport n from '../routes/routesNames'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport CommonPagination from '../../components/pagination/commonPagination'\r\nimport * as pageCount from '../../components/constants'\r\nimport * as gqlValue from '../../common/constants'\r\nimport Loader from '../../components/loader/loader'\r\n\r\nconst gqlStatus = gqlValue.status\r\nconst {TextArea} = Input\r\n\r\n//Constants to fetch pagesize and offeset size to pass to query\r\nconst defaultPageSize = pageCount.pagination.REVIEW_DATA_FETCH_COUNT\r\nconst fetchOffset = pageCount.pagination.REVIEW_OFFSET_FETCH_COUNT\r\nexport class ReviewsRatings extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      seletedId: [],\r\n      rateAndReviewList: [],\r\n      allRateAndReviewList: [],\r\n      reviewUpdate: '',\r\n      initialValue: 0,\r\n      finalValue: 1,\r\n      queryOffSetValue: 5,\r\n      selectedPageNo: 1,\r\n      selectedRowKeys: [],\r\n      startTime: null,\r\n      endTime: null,\r\n      visible: false,\r\n      reason: '',\r\n      modalType: '',\r\n      singleBlockId: '',\r\n      duplicateReviewData: [],\r\n      reviewedBySearchText: '',\r\n      reviewedForSearchText: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let val = this.state.queryOffSetValue * defaultPageSize\r\n    const {client} = this.props\r\n    this.props.getReviewRatingList(client, val, this.state.startTime, this.state.endTime)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.setEmptyReviewRatingList()\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.reviewRatingList) {\r\n      console.log('nextProps.reviewRatingList', nextProps.reviewRatingList)\r\n      const temp = nextProps.reviewRatingList.map((item, index) => {\r\n        const chefReviewerName =\r\n          item.isReviewedByChefYn === true\r\n            ? item.chefProfileByChefId.fullName\r\n            : item.customerProfileByCustomerId.fullName\r\n        const reviewerPic =\r\n          item.isReviewedByChefYn === true\r\n            ? item.chefProfileByChefId.chefPicId\r\n            : item.customerProfileByCustomerId.customerPicId\r\n        const ReviewedForName =\r\n          item.isReviewedByChefYn === true\r\n            ? item.customerProfileByCustomerId.fullName\r\n            : item.chefProfileByChefId.fullName\r\n        const reviewedForPic =\r\n          item.isReviewedByChefYn === true\r\n            ? item.customerProfileByCustomerId.customerPicId\r\n            : item.chefProfileByChefId.chefPicId\r\n        const user = item.isReviewedByChefYn === true ? CommonLabels.CHEF : CommonLabels.CUSTOMER\r\n        return {\r\n          ...item,\r\n          keyValue: index + 1,\r\n          userType: user,\r\n          reviewer: {\r\n            fullName: chefReviewerName,\r\n            picUrl: reviewerPic,\r\n          },\r\n          reviewedFor: {\r\n            fullName: ReviewedForName,\r\n            picUrl: reviewedForPic,\r\n          },\r\n        }\r\n      })\r\n      this.setState({allRateAndReviewList: temp, duplicateReviewData: temp})\r\n      // this.getTableData(\r\n      //   nextProps.reviewRatingList,\r\n      //   this.state.initialValue,\r\n      //   this.state.offsetValue,\r\n      //   this.state.selectedPageNo\r\n      // )\r\n    }\r\n\r\n    if (\r\n      nextProps.reviewUpdate &&\r\n      nextProps.reviewUpdate !== '' &&\r\n      nextProps.reviewUpdate !== this.props.reviewUpdate\r\n    ) {\r\n      let val = this.state.queryOffSetValue * fetchOffset\r\n      const {client} = this.props\r\n      this.props.getReviewRatingList(client, val, this.state.startTime, this.state.endTime)\r\n      message.success(nextProps.reviewUpdate)\r\n    }\r\n  }\r\n\r\n  refetchTableData = () => {\r\n    let val = this.state.queryOffSetValue * defaultPageSize\r\n    const {client} = this.props\r\n    this.props.getReviewRatingList(client, val, this.state.startTime, this.state.endTime)\r\n  }\r\n\r\n  getTableData = (ArrayData, initial, offSet, pageno) => {\r\n    let newVal = []\r\n    newVal = ArrayData\r\n    // this.setState({allRateAndReviewList: newVal}, () => {\r\n    //   let value = _.slice(newVal, 0, defaultPageSize)\r\n    //   this.setState({rateAndReviewList: value}, () => {})\r\n    // })\r\n    this.setState({allRateAndReviewList: newVal}, () => {\r\n      let splicedData = this.state.allRateAndReviewList\r\n      let pageinitial = pageno - 1\r\n      let value = _.slice(splicedData, pageinitial * fetchOffset, pageno * fetchOffset)\r\n      this.setState({rateAndReviewList: value}, () => {})\r\n    })\r\n  }\r\n\r\n  selectedBlockStatus = status => {\r\n    if (this.state.seletedId.length > 0) {\r\n      if (status === gqlStatus.BLOCKED ? this.state.reason && this.state.reason.length > 0 : true) {\r\n        const seletedIdArr = []\r\n        this.state.seletedId.forEach((val, index) => {\r\n          const temp = {\r\n            pId: val.reviewHistId,\r\n            pReason: this.state.reason,\r\n          }\r\n          seletedIdArr.push(temp)\r\n          if (this.state.seletedId.length === index + 1) {\r\n            const {client} = this.props\r\n            this.props.updateBlockUnblockStatus(JSON.stringify(seletedIdArr), status, client)\r\n            this.setState({\r\n              selectedRowKeys: [],\r\n              visible: false,\r\n              reason: '',\r\n              seletedId: [],\r\n              reviewedBySearchText: '',\r\n              reviewedForSearchText: '',\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        message.error(CommonLabels.ERROR_ENTER_REASON)\r\n      }\r\n    } else {\r\n      message.error(CommonLabels.ERROR_SELECT_REVIEWS)\r\n    }\r\n  }\r\n\r\n  //block/unblock single user\r\n  updateStatus = (status, id, reason) => {\r\n    if (status === gqlStatus.BLOCKED ? reason && reason.length > 0 : true) {\r\n      const dataArray = []\r\n      const temp = {\r\n        pId: id,\r\n        pReason: reason,\r\n      }\r\n      dataArray.push(temp)\r\n      const {client} = this.props\r\n      this.props.updateBlockUnblockStatus(JSON.stringify(dataArray), status, client)\r\n      this.setState({\r\n        visible: false,\r\n        reason: '',\r\n        reviewedBySearchText: '',\r\n        reviewedForSearchText: '',\r\n      })\r\n    } else {\r\n      message.error(CommonLabels.ERROR_ENTER_REASON)\r\n    }\r\n  }\r\n\r\n  openModal = (type, uid) => {\r\n    if (type === CommonLabels.BULCK_ACTION ? this.state.seletedId.length > 0 : true) {\r\n      this.setState({visible: true, singleBlockId: uid, modalType: type})\r\n    } else {\r\n      message.error(CommonLabels.ERROR_SELECT_REVIEWS)\r\n    }\r\n  }\r\n\r\n  asignReason = val => {\r\n    this.setState({reason: val.target.value})\r\n  }\r\n\r\n  onClickCancel = () => {\r\n    this.setState({visible: false, reason: '', selectedRowKeys: [], seletedId: []})\r\n  }\r\n\r\n  onClickViewDetail = value => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push({\r\n        pathname: n.REVIEWDETAIL,\r\n        state: {\r\n          reviewId: value.reviewHistId,\r\n          screen: CommonLabels.REVIEWSRATINGS,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  //Function called when load more button is pressed\r\n  nextPress = () => {\r\n    this.setState({reviewedBySearchText: '', reviewedForSearchText: ''})\r\n    let val = this.state.queryOffSetValue\r\n    val++\r\n    this.setState(\r\n      {\r\n        queryOffSetValue: val,\r\n      },\r\n      () => {\r\n        let val = this.state.queryOffSetValue * fetchOffset\r\n        const {client} = this.props\r\n        this.props.getReviewRatingList(client, val, this.state.startTime, this.state.endTime)\r\n      }\r\n    )\r\n  }\r\n\r\n  //Function called when page changed\r\n  onPageChange = page => {\r\n    this.setState(\r\n      {\r\n        selectedPageNo: page,\r\n      },\r\n      () => {\r\n        let splicedData = this.state.allRateAndReviewList\r\n        let pageno = this.state.selectedPageNo\r\n        let pageinitial = pageno - 1\r\n        let value = _.slice(splicedData, pageinitial * fetchOffset, pageno * fetchOffset)\r\n        this.setState({rateAndReviewList: value}, () => {})\r\n      }\r\n    )\r\n  }\r\n\r\n  //select rows\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    this.setState({selectedRowKeys, seletedId: selectedRows})\r\n  }\r\n\r\n  getFilterType = value => {\r\n    if (value === 'this_week') {\r\n      let startTime = getStartEndTime('week').start_time\r\n      let endTime = getStartEndTime('week').end_time\r\n      this.setState(\r\n        {\r\n          startTime,\r\n          endTime,\r\n          queryOffSetValue: 5,\r\n          selectedPageNo: 1,\r\n        },\r\n        () => {\r\n          let val = this.state.queryOffSetValue * defaultPageSize\r\n          const {client} = this.props\r\n          this.props.getReviewRatingList(client, val, this.state.startTime, this.state.endTime)\r\n        }\r\n      )\r\n    } else if (value === 'this_month') {\r\n      let startTime = getStartEndTime('month').start_time\r\n      let endTime = getStartEndTime('month').end_time\r\n      this.setState(\r\n        {\r\n          startTime,\r\n          endTime,\r\n          queryOffSetValue: 5,\r\n          selectedPageNo: 1,\r\n        },\r\n        () => {\r\n          let val = this.state.queryOffSetValue * defaultPageSize\r\n          const {client} = this.props\r\n          this.props.getReviewRatingList(client, val, this.state.startTime, this.state.endTime)\r\n        }\r\n      )\r\n    } else if (value === 'all') {\r\n      this.setState(\r\n        {\r\n          startTime: null,\r\n          endTime: null,\r\n          queryOffSetValue: 5,\r\n          selectedPageNo: 1,\r\n        },\r\n        () => {\r\n          let val = this.state.queryOffSetValue * defaultPageSize\r\n          const {client} = this.props\r\n          this.props.getReviewRatingList(client, val, this.state.startTime, this.state.endTime)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  customDate = (startTime, endTime) => {\r\n    let newStart = startTime + ' 00:00:00'\r\n    let newEnd = endTime + ' 23:59:59'\r\n    this.setState(\r\n      {\r\n        startTime: newStart,\r\n        endTime: newEnd,\r\n        queryOffSetValue: 5,\r\n        selectedPageNo: 1,\r\n      },\r\n      () => {\r\n        let val = this.state.queryOffSetValue * defaultPageSize\r\n        const {client} = this.props\r\n        this.props.getReviewRatingList(client, val, this.state.startTime, this.state.endTime)\r\n      }\r\n    )\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex, stateValue) => ({\r\n    filterDropdown: ({confirm, clearFilters}) => (\r\n      <div style={{padding: 8}}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node\r\n          }}\r\n          placeholder={`${CommonLabels.SEARCH} ${dataIndex}`}\r\n          value={this.state[stateValue]}\r\n          onChange={e => this.assignSearchVakue(e.target.value, stateValue)}\r\n          onPressEnter={() => this.handleSearch(confirm, dataIndex, stateValue)}\r\n          style={{width: 188, marginBottom: 8, display: 'block'}}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(confirm, dataIndex, stateValue)}\r\n          icon=\"search\"\r\n          size=\"small\"\r\n          style={{width: 90, marginRight: 8}}>\r\n          {CommonLabels.SEARCH}\r\n        </Button>\r\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{width: 90}}>\r\n          {CommonLabels.RESET}\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => (\r\n      <Icon type=\"search\" style={{color: filtered ? '#1890ff' : undefined}} />\r\n    ),\r\n  })\r\n\r\n  assignSearchVakue = (val, stateValue) => {\r\n    this.setState({[stateValue]: val})\r\n  }\r\n\r\n  handleSearch = (confirm, dataIndex, stateValue) => {\r\n    console.log('handleSearch', confirm, dataIndex, stateValue)\r\n    confirm()\r\n    if (this.state[stateValue].length > 2) {\r\n      const {duplicateReviewData} = this.state\r\n      const filterValue = _.filter(duplicateReviewData, o => {\r\n        const name =\r\n          dataIndex === CommonLabels.REVIEWED_BY ? o.reviewer.fullName : o.reviewedFor.fullName\r\n        if (_.includes(name.toLowerCase(), this.state[stateValue].toLowerCase())) {\r\n          return o\r\n        }\r\n      })\r\n      this.setState({allRateAndReviewList: []}, () => {\r\n        this.setState({allRateAndReviewList: filterValue})\r\n      })\r\n    } else {\r\n      message.error(CommonLabels.SEARCH_ERROR)\r\n    }\r\n  }\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters()\r\n    this.setState(\r\n      {allRateAndReviewList: [], reviewedBySearchText: '', reviewedForSearchText: ''},\r\n      () => {\r\n        this.setState({allRateAndReviewList: this.state.duplicateReviewData})\r\n      }\r\n    )\r\n  }\r\n\r\n  footer = () => {\r\n    return (\r\n      <div style={CommonStyles.loadMoreView}>\r\n        <div style={CommonStyles.loadMoreStyle}>\r\n          <Button type=\"primary\" onClick={() => this.nextPress()}>\r\n            {CommonLabels.LOAD_MORE}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log('allRateAndReviewList render', this.state.allRateAndReviewList)\r\n    const reviewStatusFilter = [\r\n      {text: CommonLabels.REVIEWED, value: gqlValue.status.REVIEWED},\r\n      {text: CommonLabels.BLOCKED, value: gqlValue.status.BLOCKED},\r\n      {text: CommonLabels.UNBLOCKED, value: gqlValue.status.UNBLOCKED},\r\n    ]\r\n    const userStatusFilter = [\r\n      {text: CommonLabels.CHEF, value: CommonLabels.CHEF},\r\n      {text: CommonLabels.CUSTOMER, value: CommonLabels.CUSTOMER},\r\n    ]\r\n    const columns = [\r\n      {\r\n        title: <b>{CommonLables.SERIAL_NUMBER}</b>,\r\n        width: 70,\r\n        render(val, record, key) {\r\n          return (\r\n            <p style={CommonStyles.grayText}>\r\n              {`# ${val.keyValue}`}\r\n              {/* #{key + ((selectedPageNo - 1) * defaultPageSize + 1)} */}\r\n            </p>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b style={CommonStyles.nameHeader}>{CommonLables.REVIEWED_BY}</b>,\r\n        width: 180,\r\n        ...this.getColumnSearchProps(CommonLabels.REVIEWED_BY, 'reviewedBySearchText'),\r\n        render(val, record, key) {\r\n          return (\r\n            <div style={CommonStyles.nameField}>\r\n              <img\r\n                style={CommonStyles.imageStyle}\r\n                alt={CommonLables.ALTERNATE_PIC}\r\n                src={val.reviewer.picUrl ? val.reviewer.picUrl : themes.default_user}\r\n              />\r\n              <p style={CommonStyles.reviewerNameStyle}>\r\n                {val.reviewer.fullName ? val.reviewer.fullName : '-'}\r\n              </p>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b style={CommonStyles.nameHeader}>{CommonLables.REVIEWED_FOR}</b>,\r\n        width: 180,\r\n        ...this.getColumnSearchProps(CommonLabels.REVIEWED_FOR, 'reviewedForSearchText'),\r\n        render(val, record, key) {\r\n          return (\r\n            <div style={CommonStyles.nameField}>\r\n              <img\r\n                style={CommonStyles.imageStyle}\r\n                alt={CommonLables.ALTERNATE_PIC}\r\n                src={val.reviewedFor.picUrl ? val.reviewedFor.picUrl : themes.default_user}\r\n              />\r\n              <p style={CommonStyles.reviewerNameStyle}>\r\n                {val.reviewedFor.fullName ? val.reviewedFor.fullName : '-'}\r\n              </p>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLables.REVIEWED_DATE}</b>,\r\n        width: 120,\r\n        dataIndex: 'createdAt',\r\n        key: 'createdAt',\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime(),\r\n        ellipsis: true,\r\n        render(val) {\r\n          return <p style={CommonStyles.grayText}>{createdDate(val)}</p>\r\n        },\r\n      },\r\n      // {\r\n      //   title: <b>{CommonLables.USER}</b>,\r\n      //   dataIndex: 'userType',\r\n      //   key: 'userType',\r\n      //   filters: userStatusFilter,\r\n      //   onFilter: (value, record) => record.userType.indexOf(value) === 0,\r\n      //   ellipsis: true,\r\n      //   render(val) {\r\n      //     return (\r\n      //       <p style={CommonStyles.grayText}>\r\n      //         {val}\r\n      //         {/* {val.isReviewedByChefYn === true ? CommonLabels.CHEF : CommonLabels.CUSTOMER} */}\r\n      //       </p>\r\n      //     )\r\n      //   },\r\n      // },\r\n      {\r\n        title: <b>{CommonLables.REVIEW}</b>,\r\n        width: 100,\r\n        render(val) {\r\n          return (\r\n            <div>\r\n              {val.reviewDesc ? (\r\n                <p style={CommonStyles.grayText}>\r\n                  {val.reviewDesc.length > 15\r\n                    ? val.reviewDesc.substring(0, 15) + '...'\r\n                    : val.reviewDesc}\r\n                </p>\r\n              ) : (\r\n                <p style={CommonStyles.grayText}>{'-'}</p>\r\n              )}\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLables.RATINGS}</b>,\r\n        width: 120,\r\n        dataIndex: 'reviewPoint',\r\n        key: 'reviewPoint',\r\n\r\n        sorter: (a, b) => a.reviewPoint - b.reviewPoint,\r\n        render(val) {\r\n          return <Rate allowHalf disabled value={val ? val : 0} />\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.BLOCK_UNBLOCK}</b>,\r\n        width: 100,\r\n        render: val => {\r\n          return (\r\n            <div>\r\n              {val.reviewStatusId.trim() === gqlStatus.BLOCKED ? (\r\n                <Button\r\n                  style={CommonStyles.approveBotton}\r\n                  onClick={() => this.updateStatus(gqlStatus.UNBLOCKED, val.reviewHistId, null)}>\r\n                  {CommonLabels.UNBLOCK}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  style={CommonStyles.rejectBotton}\r\n                  onClick={() => this.openModal(CommonLabels.SINGLE_ACTION, val.reviewHistId)}>\r\n                  {CommonLabels.BLOCK}\r\n                </Button>\r\n              )}\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLables.STATUS}</b>,\r\n        width: 120,\r\n        dataIndex: 'reviewStatusId',\r\n        key: 'reviewStatusId',\r\n        filters: reviewStatusFilter,\r\n        onFilter: (value, record) => record.reviewStatusId.trim().indexOf(value) === 0,\r\n        ellipsis: true,\r\n        render(val) {\r\n          return (\r\n            <div>\r\n              <p style={CommonStyles.statusTextStyle}>\r\n                {CommonLabels[val.trim()] ? CommonLabels[val.trim()] : '-'}\r\n              </p>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        width: 50,\r\n        render: (val, row, index) => {\r\n          return (\r\n            <Icon\r\n              type=\"eye\"\r\n              style={CommonStyles.viewEyeBotton}\r\n              onClick={() => this.onClickViewDetail(val)}\r\n            />\r\n          )\r\n        },\r\n      },\r\n    ]\r\n\r\n    const {selectedPageNo, selectedRowKeys} = this.state\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div style={CommonStyles.upperView}>\r\n          <div style={CommonStyles.firstSubView}>\r\n            <p style={CommonStyles.titleTextStyle}>{CommonLables.REVIEWS_RATINGS}</p>\r\n          </div>\r\n\r\n          <div style={CommonStyles.subView}>\r\n            {/* <Popconfirm\r\n              title={CommonLables.REVIEW_SELECTED_EDIT_ALERT}\r\n              onConfirm={() => this.editOnCick()}\r\n              okText={CommonLables.OKTEXT}\r\n              cancelText={CommonLables.CANCELTEXT}\r\n              placement={CommonLables.PLACEMENT_BOTTOM}>\r\n              <Icon\r\n                type={CommonLables.EDIT_ICON}\r\n                theme={CommonLables.THEME}\r\n                style={CommonStyles.editIconStyle}\r\n              />\r\n            </Popconfirm> */}\r\n            {/* <Popconfirm\r\n              title={CommonLables.REVIEW_SELECTED_DELETE_ALERT}\r\n              onConfirm={() => this.deleteOnClick()}\r\n              okText={CommonLables.OKTEXT}\r\n              cancelText={CommonLables.CANCELTEXT}\r\n              placement={CommonLables.PLACEMENT_BOTTOM}>\r\n              <Icon\r\n                type={CommonLables.DELETE_ICON}\r\n                theme={CommonLables.THEME}\r\n                style={CommonStyles.deleteIconStyle}\r\n              />\r\n            </Popconfirm> */}\r\n\r\n            <Button\r\n              style={CommonStyles.rejectBotton}\r\n              onClick={() => this.openModal(CommonLabels.BULCK_ACTION, null)}>\r\n              {CommonLables.BLOCK}\r\n            </Button>\r\n\r\n            <Button\r\n              style={CommonStyles.approveBotton}\r\n              onClick={() => this.selectedBlockStatus(gqlStatus.UNBLOCKED)}>\r\n              {CommonLables.UNBLOCK}\r\n            </Button>\r\n\r\n            <div style={CommonStyles.monthFilterView}>\r\n              <Filter getFilterType={this.getFilterType} customDate={this.customDate} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Table\r\n          className=\"tableClass\"\r\n          scroll={{y: 328}}\r\n          footer={() => this.footer()}\r\n          columns={columns}\r\n          rowSelection={rowSelection}\r\n          dataSource={this.state.allRateAndReviewList}\r\n        />\r\n        {/* <CommonPagination\r\n          defaultCurrent={selectedPageNo}\r\n          total={this.state.allRateAndReviewList.length}\r\n          pageSize={defaultPageSize}\r\n          onPageChange={this.onPageChange}\r\n          nextPress={this.nextPress}\r\n        /> */}\r\n\r\n        <div style={CommonStyles.loaderStyle}>\r\n          <Loader loader={this.props.reviewRatingListLoading} />\r\n        </div>\r\n\r\n        {/* <div style={CommonStyles.loadMoreView}>\r\n          <div style={CommonStyles.loadMoreStyle}>\r\n            <Button type=\"primary\" onClick={() => this.nextPress()}>\r\n              {CommonLabels.LOAD_MORE}\r\n            </Button>\r\n          </div>\r\n        </div> */}\r\n\r\n        <Modal visible={this.state.visible} footer={null} closable={false}>\r\n          <TextArea\r\n            placeholder={CommonLabels.ENTER_REASON}\r\n            value={this.state.reason}\r\n            autosize={{minRows: 5}}\r\n            onChange={val => this.asignReason(val)}\r\n          />\r\n          <div style={CommonStyles.modalButtonView}>\r\n            <Button style={CommonStyles.viewBotton} onClick={() => this.onClickCancel()}>\r\n              {CommonLabels.CANCEL}\r\n            </Button>\r\n            <Popconfirm\r\n              title={CommonLabels.REVIEW_SELECTED_BLOCK_ALERT}\r\n              onConfirm={() =>\r\n                this.state.modalType === CommonLabels.BULCK_ACTION\r\n                  ? this.selectedBlockStatus(gqlStatus.BLOCKED)\r\n                  : this.updateStatus(\r\n                      gqlStatus.BLOCKED,\r\n                      this.state.singleBlockId,\r\n                      this.state.reason\r\n                    )\r\n              }\r\n              okText={CommonLabels.OKTEXT}\r\n              cancelText={CommonLabels.CANCELTEXT}\r\n              placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n              <Button style={CommonStyles.rejectBotton}>{CommonLabels.BLOCK}</Button>\r\n            </Popconfirm>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {reviewRatingList, reviewRatingListLoading, reviewRatingListError} = state.ratingReview\r\n  const {reviewUpdate, reviewUpdateLoading} = state.reviewUpdate\r\n\r\n  return {\r\n    reviewRatingList,\r\n    reviewRatingListLoading,\r\n    reviewRatingListError,\r\n    reviewUpdate,\r\n    reviewUpdateLoading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getReviewRatingList,\r\n  updateBlockUnblockStatus,\r\n  setEmptyReviewRatingList,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ReviewsRatings)\r\n)\r\n","/** @format */\r\n\r\nimport {\r\n  GET_REVIEWS_AND_RATINGS_HISTORY,\r\n  GET_REVIEWS_AND_RATINGS_SUCCESS,\r\n  GET_REVIEWS_AND_RATINGS_FAIL,\r\n  GET_REVIEWS_AND_RATINGS_DETAILS,\r\n  GET_REVIEWS_AND_RATINGS_DETAILS_SUCCESS,\r\n  GET_REVIEWS_AND_RATINGS_DETAILS_FAIL,\r\n  UPDATE_REVIEW_STATUS,\r\n  UPDATE_REVIEW_STATUS_SUCCESS,\r\n  UPDATE_REVIEW_STATUS_FAIL,\r\n} from './types.js'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\n\r\nexport const getReviewRatingList = (client, offset, startTime, endTime) => async dispatch => {\r\n  dispatch({type: GET_REVIEWS_AND_RATINGS_HISTORY})\r\n  try {\r\n    let filterValue = {\r\n      first: offset,\r\n      offset: 0,\r\n      fromTime: startTime,\r\n      toTime: endTime,\r\n    }\r\n    if (startTime === null && endTime === null) {\r\n      filterValue = {\r\n        first: offset,\r\n        offset: 0,\r\n      }\r\n    }\r\n    console.log('filterValue', filterValue)\r\n    const gqlValue = gqlTag.query.review.listWithFiltersGQLTAG(filterValue)\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    const {nodes} = data.allReviewHistories\r\n\r\n    if (nodes) {\r\n      return dispatch({type: GET_REVIEWS_AND_RATINGS_SUCCESS, payload: nodes})\r\n    } else {\r\n      return dispatch({type: GET_REVIEWS_AND_RATINGS_FAIL, payload: []})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_REVIEWS_AND_RATINGS_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const setEmptyReviewRatingList = () => dispatch => {\r\n  return dispatch({type: GET_REVIEWS_AND_RATINGS_DETAILS_FAIL, payload: []})\r\n}\r\n\r\nexport const getReviewRatingDetail = (client, reviewId) => async dispatch => {\r\n  dispatch({type: GET_REVIEWS_AND_RATINGS_DETAILS})\r\n  try {\r\n    const gqlValue = gqlTag.query.review.byIdGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      variables: {\r\n        reviewHistId: reviewId,\r\n      },\r\n    })\r\n    const nodes = data.reviewHistoryByReviewHistId\r\n\r\n    if (nodes && nodes.length !== null && nodes !== undefined) {\r\n      return dispatch({type: GET_REVIEWS_AND_RATINGS_DETAILS_SUCCESS, payload: nodes})\r\n    } else {\r\n      return dispatch({type: GET_REVIEWS_AND_RATINGS_DETAILS_FAIL, payload: []})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_REVIEWS_AND_RATINGS_DETAILS_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const updateBlockUnblockStatus = (value, status, client) => async dispatch => {\r\n  dispatch({type: UPDATE_REVIEW_STATUS})\r\n  try {\r\n    const gqlValue = gqlTag.mutation.review.updateStatusByReviewIdGQLTAG\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: {\r\n        pStatusId: status,\r\n        pData: value,\r\n      },\r\n    })\r\n\r\n    if (\r\n      data &&\r\n      data.updateStatusByReviewId &&\r\n      data.updateStatusByReviewId.procedureResult &&\r\n      data.updateStatusByReviewId.procedureResult.message\r\n    ) {\r\n      return dispatch({\r\n        type: UPDATE_REVIEW_STATUS_SUCCESS,\r\n        payload: data.updateStatusByReviewId.procedureResult.message,\r\n      })\r\n    } else {\r\n      return dispatch({type: UPDATE_REVIEW_STATUS_FAIL, payload: CommonLabels.UPDATE_FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: UPDATE_REVIEW_STATUS_FAIL, payload: err.message})\r\n  }\r\n}\r\n","/** @format */\r\n\r\nexport const DATA = {\r\n  sampleData: [\r\n    {\r\n      customerId: '#112211',\r\n      name: 'Victor Simth',\r\n      date: '12July, 2019',\r\n      blockStatus: false,\r\n      approvalStatus: null,\r\n      role: 'Customer',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'Good work',\r\n      email: 'Victor@gmail.com',\r\n      profilePic:\r\n        'https://firebasestorage.googleapis.com/v0/b/tourzey-dev.appspot.com/o/tour%2Fimage.jpg_1560268645107?alt=media&token=9fca6d4a-7338-4965-ab2e-3ce630b8ce38',\r\n    },\r\n    {\r\n      customerId: '#112222',\r\n      name: 'Babu sam',\r\n      date: '12July, 2019',\r\n      blockStatus: true,\r\n      approvalStatus: 'Approved',\r\n      role: 'Chef',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'He gives of himself to make sure the job is well done.',\r\n      email: 'babu@gmail.com',\r\n      profilePic:\r\n        'https://firebasestorage.googleapis.com/v0/b/tourzey-dev.appspot.com/o/profile%2Fimage.jpg_1560418342420?alt=media&token=a5bcf790-e17a-454e-8d2a-7b334ac0d6eb',\r\n    },\r\n    {\r\n      customerId: '#112233',\r\n      name: 'Velu',\r\n      date: '12July, 2019',\r\n      blockStatus: false,\r\n      approvalStatus: null,\r\n      role: 'Customer',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'He accepts constructive criticism positively.',\r\n      email: 'velu@gmail.com',\r\n      profilePic:\r\n        'https://firebasestorage.googleapis.com/v0/b/tourzey-dev.appspot.com/o/tour%2Fimage.jpg_1560268645107?alt=media&token=9fca6d4a-7338-4965-ab2e-3ce630b8ce38',\r\n    },\r\n    {\r\n      customerId: '#112244',\r\n      name: 'siva',\r\n      date: '12July, 2019',\r\n      blockStatus: false,\r\n      approvalStatus: null,\r\n      role: 'Chef',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'Taste are so good and smart work',\r\n      email: 'siva@gmail.com',\r\n      profilePic:\r\n        'https://firebasestorage.googleapis.com/v0/b/tourzey-dev.appspot.com/o/profile%2Fimage.jpg_1560418342420?alt=media&token=a5bcf790-e17a-454e-8d2a-7b334ac0d6eb',\r\n    },\r\n    {\r\n      customerId: '#112255',\r\n      name: 'shankar',\r\n      date: '12July, 2019',\r\n      blockStatus: true,\r\n      approvalStatus: null,\r\n      role: 'Chef',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'I am satisfied with his work',\r\n      email: 'shankar@gmail.com',\r\n      profilePic:\r\n        'https://firebasestorage.googleapis.com/v0/b/tourzey-dev.appspot.com/o/tour%2Fimage.jpg_1560268645107?alt=media&token=9fca6d4a-7338-4965-ab2e-3ce630b8ce38',\r\n    },\r\n    {\r\n      customerId: '#112266',\r\n      name: 'sharma',\r\n      date: '12July, 2019',\r\n      blockStatus: false,\r\n      approvalStatus: 'Rejected',\r\n      role: 'Customer',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'He took more time for preparation. guests are waiting for few hours',\r\n      email: 'sharma@gmail.com',\r\n      profilePic:\r\n        'https://firebasestorage.googleapis.com/v0/b/tourzey-dev.appspot.com/o/profile%2Fimage.jpg_1560418342420?alt=media&token=a5bcf790-e17a-454e-8d2a-7b334ac0d6eb',\r\n    },\r\n    {\r\n      customerId: '#112277',\r\n      name: 'mohamath',\r\n      date: '12July, 2019',\r\n      blockStatus: false,\r\n      approvalStatus: 'Rejected',\r\n      role: 'Chef',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'Thank you',\r\n      email: 'mohamath@gmail.com',\r\n      profilePic:\r\n        'https://firebasestorage.googleapis.com/v0/b/tourzey-dev.appspot.com/o/profile%2Fimage.jpg_1560418342420?alt=media&token=a5bcf790-e17a-454e-8d2a-7b334ac0d6eb',\r\n    },\r\n    {\r\n      customerId: '#112288',\r\n      name: 'durai',\r\n      date: '12July, 2019',\r\n      profilePic: null,\r\n      blockStatus: false,\r\n      approvalStatus: null,\r\n      role: 'Customer',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'I will refer to others',\r\n      email: 'durai@gmail.com',\r\n    },\r\n    {\r\n      customerId: '#112299',\r\n      name: 'dharsah',\r\n      date: '12July, 2019',\r\n      profilePic: null,\r\n      blockStatus: false,\r\n      approvalStatus: null,\r\n      role: 'Customer',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'Really good',\r\n      email: 'dharsah@gmail.com',\r\n    },\r\n    {\r\n      customerId: '#112200',\r\n      name: 'mugin',\r\n      date: '12July, 2019',\r\n      profilePic: null,\r\n      blockStatus: false,\r\n      approvalStatus: null,\r\n      role: 'Customer',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'Worst',\r\n      email: 'mugin@gmail.com',\r\n    },\r\n    {\r\n      customerId: '#111133',\r\n      name: 'sandy',\r\n      date: '12July, 2019',\r\n      profilePic: null,\r\n      blockStatus: false,\r\n      approvalStatus: null,\r\n      role: 'Customer',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'Unsatisfied',\r\n      email: 'sandy@gmail.com',\r\n    },\r\n    {\r\n      customerId: '#114433',\r\n      name: 'kavin',\r\n      date: '12July, 2019',\r\n      blockStatus: false,\r\n      approvalStatus: null,\r\n      role: 'Customer',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'Unbelievable work',\r\n      email: 'kavin@gmail.com',\r\n      profilePic:\r\n        'https://firebasestorage.googleapis.com/v0/b/tourzey-dev.appspot.com/o/profile%2Fimage.jpg_1560418342420?alt=media&token=a5bcf790-e17a-454e-8d2a-7b334ac0d6eb',\r\n    },\r\n    {\r\n      customerId: '#115533',\r\n      name: 'william',\r\n      date: '12July, 2019',\r\n      blockStatus: false,\r\n      approvalStatus: null,\r\n      role: 'Customer',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'Good work',\r\n      email: 'william@gmail.com',\r\n      profilePic:\r\n        'https://firebasestorage.googleapis.com/v0/b/tourzey-dev.appspot.com/o/tour%2Fimage.jpg_1560268645107?alt=media&token=9fca6d4a-7338-4965-ab2e-3ce630b8ce38',\r\n    },\r\n    {\r\n      customerId: '#116633',\r\n      name: 'smith',\r\n      date: '12July, 2019',\r\n      blockStatus: false,\r\n      approvalStatus: null,\r\n      role: 'Customer',\r\n      amount: 2000,\r\n      reason: 'Refund',\r\n      review: 'Good work',\r\n      email: 'smith@gmail.com',\r\n      profilePic:\r\n        'https://firebasestorage.googleapis.com/v0/b/tourzey-dev.appspot.com/o/tour%2Fimage.jpg_1560268645107?alt=media&token=9fca6d4a-7338-4965-ab2e-3ce630b8ce38',\r\n    },\r\n  ],\r\n  graphData: {\r\n    options: {\r\n      chart: {\r\n        id: 'basic-bar',\r\n      },\r\n      xaxis: {\r\n        categories: ['Sep1', 'Sep8', 'Sep17', 'Sep24', 'Sep30'],\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: 'series-1',\r\n        data: [30, 40, 45, 50, 49],\r\n      },\r\n    ],\r\n  },\r\n  commissionData: [\r\n    {updatedDate: '01 September 2019', commission: '1%'},\r\n    {updatedDate: '09 June 2019', commission: '2%'},\r\n  ],\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Table, Icon, Button} from 'antd'\r\nimport {DATA} from '../staticData/customerData'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLables from '../common/commonLabel'\r\nimport {Filter} from '../../components/filter/filter'\r\nimport {themes} from '../../themes/themes'\r\n\r\nexport class ProfileManagement extends Component {\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: <b>{CommonLables.CUSTOMER_ID}</b>,\r\n        render(val) {\r\n          return <p style={CommonStyles.grayText}>{val.customerId}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b style={CommonStyles.nameHeader}>{CommonLables.NAME}</b>,\r\n        render(val) {\r\n          return (\r\n            <div style={CommonStyles.nameField}>\r\n              <img\r\n                style={CommonStyles.imageStyle}\r\n                alt={CommonLables.ALTERNATE_PIC}\r\n                src={val.profilePic ? val.profilePic : themes.default_user}\r\n              />\r\n              <p style={CommonStyles.nameStyle}>{val.name}</p>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLables.USER}</b>,\r\n        render(val) {\r\n          return <p style={CommonStyles.grayText}>{val.role}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLables.DATE}</b>,\r\n        render(val) {\r\n          return <p style={CommonStyles.grayText}>{val.date}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLables.EMAIL_ID}</b>,\r\n        render(val) {\r\n          return <p style={CommonStyles.grayText}>{val.email}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLables.UPDATE_PASSWORD}</b>,\r\n        render(val) {\r\n          return (\r\n            <div>\r\n              <Button style={CommonStyles.approveBotton}>{CommonLables.UPDATE}</Button>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b>{''}</b>,\r\n        render(val) {\r\n          return (\r\n            <div>\r\n              <Icon\r\n                type={CommonLables.EDIT_ICON}\r\n                theme={CommonLables.THEME}\r\n                style={CommonStyles.editIconStyle}\r\n              />\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n    ]\r\n    const rowSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows)\r\n        this.setState({seletedId: selectedRows})\r\n      },\r\n      getCheckboxProps: record => ({\r\n        disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    }\r\n    return (\r\n      <div>\r\n        <div style={CommonStyles.upperView}>\r\n          <p style={CommonStyles.top_titleTextStyle}>{CommonLables.PROFILE_TITLE}</p>\r\n          <div style={CommonStyles.top_monthFilterView}>\r\n            <Filter />\r\n          </div>\r\n        </div>\r\n        <Table\r\n          className=\"tableClass\"\r\n          columns={columns}\r\n          rowSelection={rowSelection}\r\n          dataSource={DATA.sampleData}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfileManagement\r\n","/** @format */\r\n\r\nexport default {\r\n  cardView: {\r\n    width: '95%',\r\n    height: 'auto',\r\n    backgroundColor: 'white',\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  alignCard: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  feedbackImageStyle: {\r\n    display: 'flex',\r\n    width: 75,\r\n    height: 75,\r\n    borderRadius: '50%',\r\n  },\r\n  userDateView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  subView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    marginTop: -20,\r\n  },\r\n  diverStyle: {\r\n    width: 2,\r\n    marginTop: 5,\r\n  },\r\n  largeText: {\r\n    fontSize: 20,\r\n    color: 'gray',\r\n    fontWeight: 600,\r\n  },\r\n  blackText: {\r\n    fontSize: 18,\r\n    color: 'black',\r\n    fontWeight: 600,\r\n  },\r\n  grayText: {\r\n    fontSize: 18,\r\n    color: 'gray',\r\n    fontWeight: 450,\r\n    width: '65%',\r\n  },\r\n  firstView: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: 20,\r\n  },\r\n  alignColumn: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginLeft: 20,\r\n  },\r\n  paginationView: {\r\n    marginBottom: 10,\r\n    width: '95%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Divider, Pagination} from 'antd'\r\nimport Styles from './styles'\r\nimport CommonLables from '../common/commonLabel'\r\nimport {themes} from '../../themes/themes'\r\nimport {DATA} from '../staticData/customerData'\r\n\r\nexport class Feedback extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      pageIndex: 1,\r\n      pageSize: 5,\r\n      feedbackData: [],\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const value = DATA.sampleData.slice(0, 5)\r\n    this.setState({feedbackData: value})\r\n  }\r\n  onClickPage = (page, size) => {\r\n    this.setState({pageIndex: page, pageSize: size}, () => {\r\n      let index = this.state.pageIndex - 1\r\n      let startIndex = this.state.pageSize * index\r\n      let endIndex = startIndex + this.state.pageSize\r\n      let sliceData = DATA.sampleData.slice(startIndex, endIndex)\r\n      this.setState({feedbackData: sliceData})\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.feedbackData.map(val => (\r\n          <div style={Styles.alignCard}>\r\n            <div style={Styles.cardView}>\r\n              <div style={Styles.firstView}>\r\n                <div style={Styles.userDateView}>\r\n                  <img\r\n                    style={Styles.feedbackImageStyle}\r\n                    alt={CommonLables.ALTERNATE_PIC}\r\n                    src={val.profilePic ? val.profilePic : themes.default_user}\r\n                  />\r\n                  <div style={Styles.alignColumn}>\r\n                    <p style={Styles.largeText}>{CommonLables.CUSTOMER_NAME}</p>\r\n                    <div style={Styles.subView}>\r\n                      <p style={Styles.blackText}>{val.role}</p>\r\n                      <Divider type={CommonLables.VERTICAL} style={Styles.diverStyle} />\r\n                      <p style={Styles.grayText}>{val.date}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <p style={Styles.grayText}>{CommonLables.SAMPLE_FEEDBACK}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div style={Styles.alignCard}>\r\n          <div style={Styles.paginationView}>\r\n            <p></p>\r\n            <Pagination\r\n              defaultCurrent={1}\r\n              pageSize={5}\r\n              total={DATA.sampleData.length}\r\n              onChange={(page, pageSize) => this.onClickPage(page, pageSize)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Feedback\r\n","/** @format */\r\n\r\nexport default {\r\n  formCardView: {\r\n    marginTop: 20,\r\n    width: '80%',\r\n    height: 'auto',\r\n    backgroundColor: 'white',\r\n    marginLeft: 50,\r\n    marginBottom: 20,\r\n  },\r\n  alignCardView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  titleTextStyle: {\r\n    fontWeight: 'bold',\r\n    fontSize: 15,\r\n    color: 'black',\r\n    textTransform: 'capitalize',\r\n    marginLeft: 30,\r\n    paddingTop: 10,\r\n  },\r\n  diverStyle: {\r\n    marginTop: -5,\r\n    height: 2,\r\n  },\r\n  addUserStyle: {\r\n    backgroundColor: '#515151',\r\n    color: 'white',\r\n    marginRight: 20,\r\n    marginBottom: 10,\r\n  },\r\n  inputStyle: {\r\n    width: 400,\r\n  },\r\n  nameStyle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  alignFields: {\r\n    marginLeft: 20,\r\n    marginTop: -15,\r\n  },\r\n  buttonView: {\r\n    marginTop: -15,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n}\r\n","/** @format */\r\n\r\nexport default {\r\n  FIRST_NAME: 'First Name',\r\n  LAST_NAME: 'Last Name',\r\n  EMAIL: 'Email',\r\n  DOF: 'Date Of Birth',\r\n  PHONE_NUMBER: 'Phone Number',\r\n  PASSWORD: 'Password',\r\n\r\n  FIRSTNAME: 'firstName',\r\n  LASTNAME: 'lastName',\r\n  EMAIL_LOWER: 'email',\r\n  DATE_PICKER: 'date-picker',\r\n  PHONE: 'phone',\r\n  PASSWORD_LOWER: 'password',\r\n\r\n  FIRSTNAME_ERROR: 'Please enter the first name.',\r\n  LASTNAME_ERROR: 'Please enter the last name.',\r\n  EMAIL_ERROR: 'Please enter the Email.',\r\n  EMAIL_VALIDATION: 'Please enter the valid Email.',\r\n  DOF_ERROR: 'Please enter the date of birth.',\r\n  PHONE_NUMBER_ERROR: 'Please enter the phone number.',\r\n  PASSWORD_ERROR: 'Please enter the password.',\r\n\r\n  SUBMIT: 'submit',\r\n  CONFIRM: 'confirm',\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Form, Divider, Input, Button, DatePicker} from 'antd'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Styles from './styles'\r\nimport CommonLables from '../common/commonLabel'\r\nimport Labels from './labels'\r\nimport n from '../routes/routesNames'\r\n\r\nexport class Registration extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      type: '',\r\n      screen: '',\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if (this.props && this.props.location && this.props.location.state) {\r\n      this.setState(\r\n        {type: this.props.location.state.type, screen: this.props.location.state.screen},\r\n        () => {\r\n          console.log('type', this.state.type, this.state.screen)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  onClickBack = () => {\r\n    if (this.state.screen === CommonLables.DASHBOARD) {\r\n      this.props.history.push(n.DASHBOARD)\r\n    } else if (this.state.screen === CommonLables.CUSTOMERMANAGEMENT) {\r\n      this.props.history.push(n.CUSTOMERMANAGEMENT)\r\n    } else if (this.state.screen === CommonLables.CHEFMANAGEMENT) {\r\n      this.props.history.push(n.CHEFMANAGEMENT)\r\n    }\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values)\r\n      }\r\n    })\r\n  }\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const {form} = this.props\r\n    if (value) {\r\n      form.validateFields([Labels.CONFIRM], {force: true})\r\n    }\r\n    callback()\r\n  }\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form\r\n    return (\r\n      <div>\r\n        <div style={Styles.formCardView}>\r\n          <p style={Styles.titleTextStyle}>{this.state.type}</p>\r\n          <Divider style={Styles.diverStyle} />\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <div style={Styles.nameStyle}>\r\n              <div style={Styles.alignFields}>\r\n                <Form.Item label={Labels.FIRST_NAME}>\r\n                  {getFieldDecorator(Labels.FIRSTNAME, {\r\n                    rules: [{required: true, message: Labels.FIRSTNAME_ERROR, whitespace: true}],\r\n                  })(<Input style={Styles.inputStyle} />)}\r\n                </Form.Item>\r\n              </div>\r\n              <div style={Styles.alignFields}>\r\n                <Form.Item label={Labels.LAST_NAME}>\r\n                  {getFieldDecorator(Labels.LASTNAME, {\r\n                    rules: [{required: true, message: Labels.LASTNAME_ERROR, whitespace: true}],\r\n                  })(<Input style={Styles.inputStyle} />)}\r\n                </Form.Item>\r\n              </div>\r\n            </div>\r\n            <div style={Styles.alignFields}>\r\n              <Form.Item label={Labels.EMAIL}>\r\n                {getFieldDecorator(Labels.EMAIL_LOWER, {\r\n                  rules: [\r\n                    {\r\n                      type: Labels.EMAIL_LOWER,\r\n                      message: Labels.EMAIL_VALIDATION,\r\n                    },\r\n                    {\r\n                      required: true,\r\n                      message: Labels.EMAIL_ERROR,\r\n                    },\r\n                  ],\r\n                })(<Input style={Styles.inputStyle} />)}\r\n              </Form.Item>\r\n            </div>\r\n            <div style={Styles.alignFields}>\r\n              <Form.Item label={Labels.DOF}>\r\n                {getFieldDecorator(Labels.DATE_PICKER, {\r\n                  rules: [{required: true, message: Labels.DOF_ERROR}],\r\n                })(<DatePicker style={Styles.inputStyle} />)}\r\n              </Form.Item>\r\n            </div>\r\n            <div style={Styles.alignFields}>\r\n              <Form.Item label={Labels.PHONE_NUMBER}>\r\n                {getFieldDecorator(Labels.PHONE, {\r\n                  rules: [{required: true, message: Labels.PHONE_NUMBER_ERROR}],\r\n                })(<Input style={Styles.inputStyle} />)}\r\n              </Form.Item>\r\n            </div>\r\n            <div style={Styles.alignFields}>\r\n              <Form.Item label={Labels.PASSWORD} hasFeedback>\r\n                {getFieldDecorator(Labels.PASSWORD_LOWER, {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: Labels.PASSWORD_ERROR,\r\n                    },\r\n                    {\r\n                      validator: this.validateToNextPassword,\r\n                    },\r\n                  ],\r\n                })(<Input.Password style={Styles.inputStyle} />)}\r\n              </Form.Item>\r\n            </div>\r\n\r\n            <div style={Styles.buttonView}>\r\n              <Button style={Styles.addUserStyle} onClick={() => this.onClickBack()}>\r\n                {CommonLables.BACK}\r\n              </Button>\r\n              <Button style={Styles.addUserStyle} htmlType={Labels.SUBMIT}>\r\n                {CommonLables.ADD}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Form.create()(Registration))\r\n","/** @format */\r\n\r\nexport default {\r\n  profileStyle: {\r\n    display: 'flex',\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: '50%',\r\n    marginLeft: 20,\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  iconStyle: {\r\n    display: 'flex',\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: '50%',\r\n    marginLeft: 10,\r\n  },\r\n  pdfIconStyle: {\r\n    width: 150,\r\n    height: 75,\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  cardView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 20,\r\n  },\r\n  innerCardView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  innerCardWidth: {\r\n    width: '95%',\r\n  },\r\n  titleStyle: {\r\n    color: 'black',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n  },\r\n  noReviewStyle: {\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n  },\r\n  fieldView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  spetializationFieldView: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  valueStyle: {\r\n    fontSize: 18,\r\n    marginLeft: 20,\r\n  },\r\n  spetializationValueStyle: {\r\n    fontSize: 18,\r\n    marginLeft: 20,\r\n    width: 150,\r\n  },\r\n  additionalServiceValueStyle: {\r\n    fontSize: 18,\r\n    marginLeft: 20,\r\n  },\r\n  arrValue: {\r\n    fontSize: 18,\r\n    marginLeft: 5,\r\n  },\r\n  nameValue: {\r\n    fontSize: 18,\r\n    marginTop: -20,\r\n  },\r\n  rateCoutStyle: {\r\n    color: 'black',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    marginTop: 4,\r\n    marginLeft: 5,\r\n  },\r\n  reveiwCoutStyle: {\r\n    marginTop: 6,\r\n    fontSize: 15,\r\n    fontWeight: '600',\r\n  },\r\n  backButtonStyle: {\r\n    backgroundColor: '#515151',\r\n    color: 'white',\r\n    marginRight: 20,\r\n    marginTop: 10,\r\n  },\r\n  buttonView: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  dishView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  profileView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  alignProfile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  nameView: {\r\n    marginTop: 10,\r\n    marginLeft: 10,\r\n  },\r\n  dividerStyle: {\r\n    height: 2,\r\n  },\r\n  starStyle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    marginTop: -20,\r\n  },\r\n  workImageView: {\r\n    marginLeft: 20,\r\n  },\r\n  passwordbuttonView: {\r\n    marginTop: -10,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  updatePasswordBotton: {\r\n    color: '#1077EA',\r\n    borderColor: '#1077EA',\r\n    borderWidth: 1,\r\n    fontWeight: 600,\r\n    height: 27,\r\n    marginLeft: 20,\r\n  },\r\n  customerUpdatePasswordBotton: {\r\n    color: '#1077EA',\r\n    borderColor: '#1077EA',\r\n    borderWidth: 1,\r\n    fontWeight: 600,\r\n    height: 27,\r\n    // marginLeft: 20,\r\n  },\r\n  approveBotton: {\r\n    color: '#35CA45',\r\n    borderColor: '#35CA45',\r\n    borderWidth: 1,\r\n    fontWeight: 600,\r\n    height: 27,\r\n  },\r\n  editIconStyle: {\r\n    fontSize: 20,\r\n    color: '#A9A5A4',\r\n  },\r\n  rateStyle: {\r\n    display: 'flex',\r\n  },\r\n}\r\n","/** @format */\r\n\r\nexport default {\r\n  SUBJECT: 'subject',\r\n  MAILINPUT: 'mailInput',\r\n}\r\n","/** @format */\r\n\r\nexport default {\r\n  updatePasswordBotton: {\r\n    color: '#1077EA',\r\n    borderColor: '#1077EA',\r\n    borderWidth: 1,\r\n    fontWeight: 600,\r\n    height: 27,\r\n    marginLeft: 20,\r\n  },\r\n  contentStyle: {\r\n    marginTop: 10,\r\n  },\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Button, Modal, Input, message} from 'antd'\r\nimport {withApollo} from 'react-apollo'\r\nimport {connect} from 'react-redux'\r\nimport CommonLabels from '../../containers/common/commonLabel'\r\nimport CommonStyles from '../../containers/common/commonStyles'\r\nimport Labels from './labels'\r\nimport Styles from './styles'\r\nimport {sendEmailToUser} from '../../actions/index'\r\nimport Loader from '../loader/loader'\r\n\r\nconst {TextArea} = Input\r\n\r\nexport class SendMail extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      visible: false,\r\n      mailInput: '',\r\n      subject: '',\r\n      mailId: '',\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props && this.props.emailId) {\r\n      this.setState({mailId: this.props.emailId})\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.sendEmail !== this.props.sendEmail && nxtprops.sendEmail) {\r\n      this.onClickCancel()\r\n      message.success(CommonLabels.SENT_MAIL_SUCCESS)\r\n    }\r\n    if (nxtprops.sendEmailError) {\r\n      this.onClickCancel()\r\n      message.error(nxtprops.sendEmailError)\r\n    }\r\n  }\r\n\r\n  mailContent = (val, state) => {\r\n    this.setState({[state]: val.target.value})\r\n  }\r\n\r\n  onClickSendMail = () => {\r\n    if (this.state.mailInput.length > 0 && this.state.subject.length > 0) {\r\n      const data = {\r\n        email: this.state.mailId,\r\n        subject: this.state.subject,\r\n        message: this.state.mailInput,\r\n      }\r\n      const {client} = this.props\r\n      this.props.sendEmailToUser(client, data)\r\n    } else if (this.state.mailInput.length === 0 && this.state.subject.length > 0) {\r\n      message.error(CommonLabels.ERROR_CONTENT)\r\n    } else if (this.state.subject.length === 0 && this.state.mailInput.length > 0) {\r\n      message.error(CommonLabels.ERROR_SUBJECT)\r\n    } else if (this.state.mailInput.length === 0 && this.state.subject.length === 0) {\r\n      message.error(CommonLabels.ERROR_SUBJECT_ERROR_CONTENT)\r\n    }\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({visible: true})\r\n  }\r\n\r\n  onClickCancel = () => {\r\n    this.setState({visible: false, mailInput: '', subject: ''})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button style={Styles.updatePasswordBotton} onClick={() => this.openModal()}>\r\n          {CommonLabels.SEND_MAIL}\r\n        </Button>\r\n        <Modal visible={this.state.visible} footer={null} closable={false}>\r\n          <TextArea\r\n            placeholder={CommonLabels.ENTER_SUBJECT}\r\n            autosize={{maxRows: 2}}\r\n            value={this.state.subject}\r\n            onChange={val => this.mailContent(val, Labels.SUBJECT)}\r\n          />\r\n          <TextArea\r\n            placeholder={CommonLabels.ENTER_CONTENT}\r\n            autosize={{minRows: 5}}\r\n            value={this.state.mailInput}\r\n            onChange={val => this.mailContent(val, Labels.MAILINPUT)}\r\n            style={Styles.contentStyle}\r\n          />\r\n          <div style={CommonStyles.modalButtonView}>\r\n            <Button style={CommonStyles.viewBotton} onClick={() => this.onClickCancel()}>\r\n              {CommonLabels.CANCEL}\r\n            </Button>\r\n            <Button style={Styles.updatePasswordBotton} onClick={() => this.onClickSendMail()}>\r\n              {CommonLabels.SEND_MAIL}\r\n            </Button>\r\n          </div>\r\n          <div style={CommonStyles.loaderStyle}>\r\n            <Loader loader={this.props.sendEmailLoading} />\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {sendEmail, sendEmailLoading, sendEmailError} = state.sendEmail\r\n  return {\r\n    sendEmail,\r\n    sendEmailLoading,\r\n    sendEmailError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  sendEmailToUser,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(SendMail)\r\n)\r\n","/** @format */\r\n\r\nimport {SEND_MAIL, SEND_MAIL_SUCCESS, SEND_MAIL_FAIL} from './types'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\n\r\nexport const sendEmailToUser = (client, params) => async dispatch => {\r\n  dispatch({type: SEND_MAIL})\r\n  try {\r\n    const gqlValue = gqlTag.mutation.custom.sendEmailGQLTAG\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: params,\r\n    })\r\n\r\n    if (data && data.sendEmail && data.sendEmail.data) {\r\n      return dispatch({type: SEND_MAIL_SUCCESS, payload: CommonLabels.SUCCESS})\r\n    } else {\r\n      return dispatch({type: SEND_MAIL_FAIL, payload: CommonLabels.FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: SEND_MAIL_FAIL, payload: err.message})\r\n  }\r\n}\r\n","/** @format */\r\nexport const CONFIG = {\r\n  //Firefabase config\r\n  FIREBASE_API_KEY: 'FIREBASE_API_KEY',\r\n  AUTHDOMAIN: 'AUTHDOMAIN',\r\n  DATABASEURL: 'DATABASEURL',\r\n  PROJECTID: 'PROJECTID',\r\n  MESSAGINGSENDERID: 'MESSAGINGSENDERID',\r\n  APPID: 'APPID',\r\n\r\n  //Gql\r\n  GQL_ENDPOINT_URI: 'GQL_ENDPOINT_URI',\r\n  EDIT_PROFILE_URL: 'EDIT_PROFILE_URL',\r\n}\r\n","/** @format */\r\n\r\nexport default {\r\n  selectStyle: {\r\n    width: 200,\r\n    marginLeft: 20,\r\n  },\r\n  cuisineSelectStyle: {\r\n    width: 200,\r\n  },\r\n  updatePasswordBotton: {\r\n    color: '#35CA45',\r\n    borderColor: '#35CA45',\r\n    borderWidth: 1,\r\n    fontWeight: 600,\r\n    height: 27,\r\n    marginLeft: 20,\r\n  },\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Select} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport {getCuisineType, getDishType} from '../../actions/index'\r\nimport Styles from './styles'\r\nimport CommonLabels from '../../containers/common/commonLabel'\r\n\r\nconst {Option} = Select\r\n\r\nexport class ListCusineDishType extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      cuisines: [],\r\n      dishes: [],\r\n      type: '',\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const {client} = this.props\r\n    this.props.getCuisineType(client)\r\n    this.props.getDishType(client)\r\n    console.log('props', this.props)\r\n    if (this.props.type) {\r\n      this.setState({type: this.props.type})\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextprops) {\r\n    if (nextprops && nextprops.chefCuisine) {\r\n      this.setState({cuisines: nextprops.chefCuisine})\r\n    }\r\n    if (nextprops && nextprops.chefDish) {\r\n      this.setState({dishes: nextprops.chefDish})\r\n    }\r\n  }\r\n\r\n  onClickApproveCuisine = () => {\r\n    console.log('onClickApproveCuisine')\r\n  }\r\n\r\n  render() {\r\n    const {cuisines, dishes, type} = this.state\r\n    return (\r\n      <div>\r\n        {type === CommonLabels.CUISINES && (\r\n          <Select\r\n            showSearch\r\n            allowClear={true}\r\n            style={Styles.cuisineSelectStyle}\r\n            placeholder=\"Refer Cuisine Types\"\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) =>\r\n              option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }>\r\n            {cuisines &&\r\n              cuisines.map(val => <Option value={val.cuisineTypeId}>{val.cusineTypeName}</Option>)}\r\n          </Select>\r\n        )}\r\n        {type === CommonLabels.DISHES && (\r\n          <Select\r\n            showSearch\r\n            allowClear={true}\r\n            style={Styles.selectStyle}\r\n            placeholder=\"Refer Dish Types\"\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) =>\r\n              option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }>\r\n            {dishes &&\r\n              dishes.map(val => <Option value={val.dishTypeId}>{val.dishTypeName}</Option>)}\r\n          </Select>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {chefCuisine, chefCuisineLoading, chefCuisineError} = state.cuisineTypes\r\n  const {chefDish, chefDishLoading, chefDishError} = state.dishType\r\n  return {\r\n    chefCuisine,\r\n    chefCuisineLoading,\r\n    chefCuisineError,\r\n    chefDish,\r\n    chefDishLoading,\r\n    chefDishError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCuisineType,\r\n  getDishType,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ListCusineDishType)\r\n)\r\n","/** @format */\r\n\r\nexport default {\r\n  workImageView: {\r\n    marginLeft: 20,\r\n  },\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Modal, Upload} from 'antd'\r\nimport ImageGallery from 'react-image-gallery'\r\nimport 'react-image-gallery/styles/css/image-gallery.css'\r\nimport Styles from './styles'\r\n\r\nexport class PreviewImage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      previewVisible: false,\r\n      galleryIndex: 0,\r\n      previewData: [],\r\n      gallery: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props)\r\n    if (this.props.attachment) {\r\n      this.setState({previewData: this.props.attachment})\r\n    }\r\n    if (this.props.gallery) {\r\n      this.setState({gallery: this.props.gallery})\r\n    }\r\n  }\r\n\r\n  handlePreview = file => {\r\n    this.setState({\r\n      previewVisible: true,\r\n      galleryIndex: file.uid,\r\n    })\r\n  }\r\n  handleChange = ({fileList}) => this.setState({fileList})\r\n\r\n  handleCancel = () => this.setState({previewVisible: false})\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={Styles.workImageView}>\r\n          <Upload\r\n            action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n            listType=\"picture-card\"\r\n            disabled\r\n            fileList={this.state.previewData}\r\n            onPreview={this.handlePreview}\r\n            onChange={this.handleChange}></Upload>\r\n        </div>\r\n        <Modal visible={this.state.previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <ImageGallery\r\n            showPlayButton={false}\r\n            startIndex={this.state.galleryIndex}\r\n            items={this.state.gallery}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PreviewImage\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Button, Divider, Rate, Card, Icon, message} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport _ from 'lodash'\r\nimport {withApollo} from 'react-apollo'\r\nimport Styles from './styles'\r\nimport {themes} from '../../themes/themes'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport {createdDate} from '../../utils/dateFormat'\r\nimport {availabilityTime} from '../../utils/timeFormat'\r\nimport {\r\n  getChefDetails,\r\n  // updateDishStatus,\r\n  resetPassword,\r\n  // updateCuisineStatus,\r\n} from '../../actions/index'\r\nimport Loader from '../../components/loader/loader'\r\nimport SendMail from '../../components/sendMail/sendMail'\r\nimport {GetValueFromLocal} from '../../utils/localStorage'\r\nimport {getENVConfig} from '../../utils/common'\r\nimport {CONFIG} from '../../config/config'\r\nimport ListCuisineDishType from '../../components/listCuisineDishType/listCuisineDishType'\r\nimport PreviewImage from '../../components/previewImage/previewImage'\r\nexport class ChefDetail extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      userData: {},\r\n      uid: '',\r\n      chefSpetialization: {},\r\n      chefExtended: {},\r\n      chefAttachment: [],\r\n      chefReview: {},\r\n      screen: '',\r\n      extraId: '',\r\n      chefDocument: [],\r\n      token: '',\r\n      cuisineTypes: [],\r\n      dishTypes: [],\r\n      attachementsCertification: [],\r\n      certificateDucument: [],\r\n      certificateImage: [],\r\n      certicateAttachementsGallery: [],\r\n      certicateGallery: [],\r\n      attachementsGallery: [],\r\n      workGallery: [],\r\n      attachementsLicense: [],\r\n      licenseDocument: [],\r\n      licenseGallery: [],\r\n      attachementsOthers: [],\r\n      otherDocument: [],\r\n      otherGallary: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    GetValueFromLocal('firebaseAuthToken')\r\n      .then(async val => {\r\n        await this.setState({token: val})\r\n      })\r\n      .catch(err => {\r\n        message.error(err)\r\n      })\r\n\r\n    if (this.props && this.props.location && this.props.location.state) {\r\n      this.setState(\r\n        {\r\n          uid: this.props.location.state.uid,\r\n          screen: this.props.location.state.screen,\r\n          extraId: this.props.location.state.extraId,\r\n        },\r\n        () => {\r\n          const {client} = this.props\r\n          this.props.getChefDetails(client, this.state.uid)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.chefDetails) {\r\n      // if (\r\n      //   (nxtprops.cuisineStatusUpate === 'success' &&\r\n      //     this.props.cuisineStatusUpate !== nxtprops.cuisineStatusUpate) ||\r\n      //   (nxtprops.disheStatusUpate === 'success' &&\r\n      //     this.props.disheStatusUpate !== nxtprops.disheStatusUpate)\r\n      // ) {\r\n      //   const {client} = this.props\r\n      //   this.props.getChefDetails(client, this.state.uid)\r\n      // }\r\n\r\n      this.setState({userData: nxtprops.chefDetails}, () => {\r\n        //certificates\r\n        if (this.state.userData && this.state.userData.attachementsCertification) {\r\n          const data = JSON.parse(this.state.userData.attachementsCertification)\r\n          this.splitImageDocument(data).then(values => {\r\n            this.setState({certificateDucument: values.document})\r\n            this.modifyData(values.image, 'certicateGallery', 'certicateAttachementsGallery')\r\n          })\r\n        }\r\n        //Additional Service\r\n        console.log('this.userdata', this.state.chefExtended)\r\n        //work gallery\r\n        if (this.state.userData && this.state.userData.attachementsGallery) {\r\n          const data = JSON.parse(this.state.userData.attachementsGallery)\r\n          this.modifyData(data, 'workGallery', 'attachementsGallery')\r\n        }\r\n        //licence\r\n        if (this.state.userData && this.state.userData.attachementsLicense) {\r\n          const data = JSON.parse(this.state.userData.attachementsLicense)\r\n          this.splitImageDocument(data).then(values => {\r\n            this.setState({licenseDocument: values.document})\r\n            this.modifyData(values.image, 'licenseGallery', 'attachementsLicense')\r\n          })\r\n        }\r\n        //Other attachments\r\n        if (this.state.userData && this.state.userData.attachementsOthers) {\r\n          const data = JSON.parse(this.state.userData.attachementsOthers)\r\n          this.splitImageDocument(data).then(values => {\r\n            this.setState({otherDocument: values.document})\r\n            this.modifyData(values.image, 'otherGallary', 'attachementsOthers')\r\n          })\r\n        }\r\n\r\n        if (this.state.userData.chefSpecializationProfilesByChefId) {\r\n          this.setState({\r\n            chefSpetialization: this.state.userData.chefSpecializationProfilesByChefId.nodes[0],\r\n          })\r\n        }\r\n        if (this.state.userData.dishTypes && this.state.userData.dishTypes.nodes) {\r\n          this.setState({\r\n            dishTypes: this.state.userData.dishTypes.nodes,\r\n          })\r\n        }\r\n        if (this.state.userData.cuisineTypes && this.state.userData.cuisineTypes.nodes) {\r\n          const temp = this.state.userData.cuisineTypes.nodes\r\n          const order = _.orderBy(temp, 'createdAt', 'desc')\r\n          this.setState({cuisineTypes: order})\r\n        }\r\n        if (this.state.userData.chefProfileExtendedsByChefId) {\r\n          this.setState({\r\n            chefExtended: this.state.userData.chefProfileExtendedsByChefId.nodes[0],\r\n          })\r\n        }\r\n        if (this.state.userData.reviewHistoriesByChefId) {\r\n          this.setState({\r\n            chefReview: this.state.userData.reviewHistoriesByChefId,\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  splitImageDocument = async data => {\r\n    const image = []\r\n    const doc = []\r\n    await data.map(val => {\r\n      if (val.type === 'IMAGE') {\r\n        image.push(val)\r\n      } else if (val.type === 'DOCUMENT') {\r\n        doc.push(val.url)\r\n      }\r\n    })\r\n    const temp = {\r\n      image: image,\r\n      document: doc,\r\n    }\r\n    return temp\r\n  }\r\n\r\n  modifyData = async (data, gallery, attachment) => {\r\n    const tempGal = []\r\n    const tempAttachment = []\r\n    await data.map((val, index) => {\r\n      const temp = {\r\n        uid: index,\r\n        url: val.url,\r\n      }\r\n      const tempGallery = {\r\n        original: val.url,\r\n        thumbnail: val.url,\r\n      }\r\n      tempGal.push(tempGallery)\r\n      tempAttachment.push(temp)\r\n    })\r\n\r\n    this.setState({[gallery]: tempGal})\r\n    this.setState({[attachment]: tempAttachment})\r\n  }\r\n\r\n  onClickBack() {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push({\r\n        pathname: this.state.screen,\r\n        state: {\r\n          bookingId: this.state.extraId,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  openInNewTab = link => {\r\n    const url = _.startsWith(link, 'https://') ? link : 'https://' + link\r\n    return window.open(url)\r\n  }\r\n\r\n  onClickUpdate = email => {\r\n    if (email) {\r\n      this.props.resetPassword(email, CommonLabels.USER)\r\n    } else {\r\n      message.error(CommonLabels.NO_MAIL)\r\n    }\r\n  }\r\n\r\n  onClickEditProfile = () => {\r\n    const editUrl =\r\n      getENVConfig(CONFIG.EDIT_PROFILE_URL) +\r\n      `?loggedInAs=\"Admin\"&role=\"Chef\"&id=\"${this.state.uid}\"`\r\n    console.log('editUrl', editUrl)\r\n    window.open(editUrl)\r\n  }\r\n\r\n  // onClickApproveCuisine = (status, val) => {\r\n  //   const data = {\r\n  //     isAdminApprovedYn: status,\r\n  //     cuisineTypeId: val,\r\n  //   }\r\n  //   const {client} = this.props\r\n  //   this.props.updateCuisineStatus(data, client)\r\n  //   this.setState({chefAttachment: [], chefDocument: []})\r\n  // }\r\n\r\n  // onClickApproveDish = (status, val) => {\r\n  //   const data = {\r\n  //     dishTypeId: val,\r\n  //     isAdminApprovedYn: status,\r\n  //   }\r\n  //   const {client} = this.props\r\n  //   this.props.updateDishStatus(data, client)\r\n  //   this.setState({chefAttachment: [], chefDocument: []})\r\n  // }\r\n\r\n  renderPdf = val => {\r\n    return (\r\n      <div>\r\n        {val.map(val => (\r\n          <img\r\n            style={Styles.pdfIconStyle}\r\n            alt={CommonLabels.ALTERNATE_PIC}\r\n            src={themes.pdf_icon}\r\n            onClick={() => this.openInNewTab(val)}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      userData,\r\n      chefExtended,\r\n      chefReview,\r\n      cuisineTypes,\r\n      dishTypes,\r\n      attachementsGallery,\r\n      workGallery,\r\n      certicateAttachementsGallery,\r\n      certicateGallery,\r\n      certificateDucument,\r\n      licenseDocument,\r\n      licenseGallery,\r\n      attachementsLicense,\r\n      attachementsOthers,\r\n      otherGallary,\r\n      otherDocument,\r\n    } = this.state\r\n    let additionalService = []\r\n    let awards = ''\r\n    let certificationType = []\r\n    let complexity = []\r\n    console.log('chefExtended', chefExtended)\r\n    if (chefExtended && chefExtended.additionalServiceDetails) {\r\n      additionalService = JSON.parse(chefExtended.additionalServiceDetails)\r\n    }\r\n    if (chefExtended && chefExtended.chefAwards) {\r\n      awards = JSON.parse(chefExtended.chefAwards)\r\n    }\r\n    if (chefExtended && chefExtended.chefComplexity) {\r\n      complexity = JSON.parse(chefExtended.chefComplexity)\r\n    }\r\n    if (\r\n      chefExtended &&\r\n      chefExtended.certificationsTypes &&\r\n      chefExtended.certificationsTypes.nodes\r\n    ) {\r\n      certificationType = chefExtended.certificationsTypes.nodes\r\n    }\r\n    console.log('complexity', complexity)\r\n    return (\r\n      <div style={Styles.cardView}>\r\n        <div className=\"userDetailCard\">\r\n          <div style={Styles.alignProfile}>\r\n            <div style={Styles.profileView}>\r\n              <img\r\n                style={Styles.profileStyle}\r\n                alt={CommonLabels.ALTERNATE_PIC}\r\n                src={userData.chefPicId ? userData.chefPicId : themes.default_user}\r\n              />\r\n              <div style={Styles.nameView}>\r\n                <p style={Styles.titleStyle}>{userData.fullName ? userData.fullName : '-'}</p>\r\n                <p style={Styles.nameValue}>{userData.chefEmail ? userData.chefEmail : '-'}</p>\r\n                <div style={Styles.starStyle}>\r\n                  {userData.averageRating && chefReview.totalCount ? (\r\n                    <div style={Styles.rateStyle}>\r\n                      <Rate\r\n                        allowHalf\r\n                        disabled\r\n                        value={userData.averageRating ? userData.averageRating : 0}\r\n                      />\r\n                      <p style={Styles.rateCoutStyle}>\r\n                        {userData.averageRating ? userData.averageRating : '0'}\r\n                      </p>\r\n                      <div style={Styles.reveiwCoutStyle}>\r\n                        ({chefReview.totalCount ? chefReview.totalCount : '0'}\r\n                        {chefReview.totalCount > 1\r\n                          ? CommonLabels.REVIEWS_LABEL\r\n                          : CommonLabels.REVIEW_LABEL}\r\n                        )\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <p style={Styles.noReviewStyle}>{CommonLabels.NO_REVIEWS}</p>\r\n                  )}\r\n                  {chefExtended.chefFacebookUrl && (\r\n                    <img\r\n                      style={Styles.iconStyle}\r\n                      alt={CommonLabels.ALTERNATE_PIC}\r\n                      src={themes.facebook_icon}\r\n                      onClick={() => this.openInNewTab(chefExtended.chefFacebookUrl)}\r\n                    />\r\n                  )}\r\n                  {chefExtended.chefTwitterUrl && (\r\n                    <img\r\n                      style={Styles.iconStyle}\r\n                      alt={CommonLabels.ALTERNATE_PIC}\r\n                      src={themes.twitter_icon}\r\n                      onClick={() => this.openInNewTab(chefExtended.chefTwitterUrl)}\r\n                    />\r\n                  )}\r\n                </div>\r\n                {userData.chefEmail && (\r\n                  <div style={Styles.passwordbuttonView}>\r\n                    <Icon\r\n                      type={CommonLabels.EDIT_ICON}\r\n                      theme={CommonLabels.THEME}\r\n                      style={Styles.editIconStyle}\r\n                      onClick={() => this.onClickEditProfile()}\r\n                    />\r\n                    <Button\r\n                      style={Styles.updatePasswordBotton}\r\n                      onClick={() => this.onClickUpdate(userData.chefEmail)}>\r\n                      {CommonLabels.RESET_PASSWORD}\r\n                    </Button>\r\n                    <SendMail emailId={userData.chefEmail} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <Button style={Styles.backButtonStyle} onClick={() => this.onClickBack()}>\r\n              {CommonLabels.BACK}\r\n            </Button>\r\n          </div>\r\n          <Divider style={Styles.dividerStyle} />\r\n          <div style={CommonStyles.loaderStyle}>\r\n            <Loader loader={this.props.chefDetailsLoading} />\r\n          </div>\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.CONTACT_LABEL} style={Styles.innerCardWidth}>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.LOCATION_LABEL}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {chefExtended.chefLocationAddress ? chefExtended.chefLocationAddress : '-'}\r\n                </p>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.PHONE_NUMBER_LABEL}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {userData.chefMobileNumber ? userData.chefMobileNumber : '-'}\r\n                </p>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.PERSONAL_LABEL} style={Styles.innerCardWidth}>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.DESCRIPTION_LABEL}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {chefExtended.chefDesc ? chefExtended.chefDesc : '-'}\r\n                </p>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.REGISTERED_DATE_LABEL}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {userData.createdAt ? createdDate(userData.createdAt) : '-'}\r\n                </p>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.DOB_LABEL}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {userData.chefDob ? createdDate(userData.chefDob) : '-'}\r\n                </p>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.GENDER_LABEL}</p>\r\n                <p style={Styles.valueStyle}>{userData.chefGender ? userData.chefGender : '-'}</p>\r\n              </div>\r\n              {/* <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.DRIVIG_LICENSE_LABEL}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {chefExtended.chefDrivingLicenseNo ? chefExtended.chefDrivingLicenseNo : '-'}\r\n                </p>\r\n              </div> */}\r\n            </Card>\r\n          </div>\r\n\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.BUSINESS_LABEL} style={Styles.innerCardWidth}>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.BASE_RATE}</p>\r\n                <div style={Styles.valueStyle}>\r\n                  {'$'} {chefExtended.chefPricePerHour ? chefExtended.chefPricePerHour : '-'}{' '}\r\n                  {CommonLabels.HOUR_LABEL}\r\n                </div>\r\n              </div>\r\n              {/* <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.GRATUITY}</p>\r\n                <div style={Styles.valueStyle}>\r\n                  {'$'} {chefExtended.chefGratuity ? chefExtended.chefGratuity : '-'}\r\n                </div>\r\n              </div> */}\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.NO_OF_GUESTS}</p>\r\n                <div style={Styles.valueStyle}>\r\n                  {CommonLabels.CHEF_COOK}{' '}\r\n                  {chefExtended.noOfGuestsMin ? chefExtended.noOfGuestsMin : '-'} {'to '}\r\n                  {chefExtended.noOfGuestsMax ? chefExtended.noOfGuestsMax : '-'}{' '}\r\n                  {CommonLabels.MEMBERS}\r\n                </div>\r\n              </div>\r\n              {/* <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.ADDITIONAL_BASE_RATE}</p>\r\n                <div style={Styles.valueStyle}>\r\n                  {'$'} {chefExtended.noOfGuestsCanServe ? chefExtended.noOfGuestsCanServe : '-'}\r\n                </div>\r\n              </div> */}\r\n              {/* <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.DISCOUNT_FOR_GUEST}</p>\r\n                <div style={Styles.valueStyle}>\r\n                  {chefExtended.discount ? chefExtended.discount : '-'}\r\n                  {'%'} {CommonLabels.FOR}{' '}\r\n                  {chefExtended.personsCount ? chefExtended.personsCount : '-'}{' '}\r\n                  {CommonLabels.PERSONS}\r\n                </div>\r\n              </div> */}\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>\r\n                  {CommonLabels.CHEF_TRAVEL}{' '}\r\n                  {chefExtended.chefAvailableAroundRadiusInValue\r\n                    ? chefExtended.chefAvailableAroundRadiusInValue\r\n                    : '-'}{' '}\r\n                  {chefExtended.chefAvailableAroundRadiusInUnit\r\n                    ? chefExtended.chefAvailableAroundRadiusInUnit\r\n                    : '-'}{' '}\r\n                  {CommonLabels.PROVIDE_SERVICE}\r\n                </p>\r\n              </div>\r\n              {/* <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.BUSSINESS_TIME_LABEL}</p>\r\n                <div style={Styles.valueStyle}>\r\n                  {chefExtended.chefBusinessHoursFromTime\r\n                    ? availabilityTime(chefExtended.chefBusinessHoursFromTime)\r\n                    : '-'}\r\n                  {' - '}\r\n                  {chefExtended.chefBusinessHoursToTime\r\n                    ? availabilityTime(chefExtended.chefBusinessHoursToTime)\r\n                    : '-'}\r\n                </div>\r\n              </div> */}\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Additional Service */}\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.ADDITIONAL_SERVICE} style={Styles.innerCardWidth}>\r\n              <div\r\n                style={\r\n                  additionalService && additionalService.length > 0\r\n                    ? Styles.spetializationFieldView\r\n                    : Styles.fieldView\r\n                }>\r\n                <p style={Styles.titleStyle}>{CommonLabels.SERVICE_RATE}</p>\r\n                {additionalService && additionalService.length > 0 ? (\r\n                  additionalService.map((val, index) => (\r\n                    <div style={Styles.dishView}>\r\n                      <p style={Styles.additionalServiceValueStyle}>\r\n                        {index + 1}\r\n                        {'.'}\r\n                        {val.name}\r\n                        {':'}\r\n                        {' $'}\r\n                        {val.price}\r\n                      </p>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p style={Styles.valueStyle}>{'-'}</p>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Awards */}\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.AWARDS} style={Styles.innerCardWidth}>\r\n              <div style={Styles.spetializationFieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.AWARDS_DES}</p>\r\n                <div style={Styles.valueStyle}>{awards ? awards : '-'}</div>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Cuisine */}\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.SPECIALIZATION_LABEL} style={Styles.innerCardWidth}>\r\n              <div\r\n                style={\r\n                  cuisineTypes && cuisineTypes.length > 0\r\n                    ? Styles.spetializationFieldView\r\n                    : Styles.fieldView\r\n                }>\r\n                <p style={Styles.titleStyle}>{CommonLabels.CUISINE_TYPE_LABEL}</p>\r\n                {cuisineTypes && cuisineTypes.length > 0 ? (\r\n                  cuisineTypes.map((val, index) => (\r\n                    <div style={Styles.dishView}>\r\n                      <p style={Styles.spetializationValueStyle}>\r\n                        {index + 1}\r\n                        {'.'}\r\n                        {val.cusineTypeName}\r\n                        {'.'}\r\n                      </p>\r\n                      {/* {val.isAdminApprovedYn === false && (\r\n                        <Button\r\n                          style={Styles.approveBotton}\r\n                          onClick={() => this.onClickApproveCuisine(true, val.cuisineTypeId)}>\r\n                          {CommonLabels.APPROVE}\r\n                        </Button>\r\n                      )}\r\n                      <Button\r\n                        style={CommonStyles.rejectBotton}\r\n                        onClick={() => this.onClickApproveCuisine(false, val.cuisineTypeId)}>\r\n                        {CommonLabels.REJECT}\r\n                      </Button> */}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p style={Styles.valueStyle}>{'-'}</p>\r\n                )}\r\n              </div>\r\n              <div\r\n                style={\r\n                  dishTypes && dishTypes.length > 0\r\n                    ? Styles.spetializationFieldView\r\n                    : Styles.fieldView\r\n                }>\r\n                <p style={Styles.titleStyle}>{CommonLabels.DISHES_SPECIALITY}</p>\r\n                {dishTypes && dishTypes.length > 0 ? (\r\n                  dishTypes.map((val, index) => (\r\n                    <div style={Styles.dishView}>\r\n                      <p style={Styles.spetializationValueStyle}>\r\n                        {index + 1}\r\n                        {'.'}\r\n                        {val.dishTypeName}\r\n                        {'.'}\r\n                      </p>\r\n                      {/* {val.isAdminApprovedYn === false && (\r\n                        <Button\r\n                          style={Styles.approveBotton}\r\n                          onClick={() => this.onClickApproveCuisine(true, val.cuisineTypeId)}>\r\n                          {CommonLabels.APPROVE}\r\n                        </Button>\r\n                      )}\r\n                      <Button\r\n                        style={CommonStyles.rejectBotton}\r\n                        onClick={() => this.onClickApproveCuisine(false, val.cuisineTypeId)}>\r\n                        {CommonLabels.REJECT}\r\n                      </Button> */}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p style={Styles.valueStyle}>{'-'}</p>\r\n                )}\r\n              </div>\r\n              {/* \r\n              <div\r\n                style={\r\n                  dishTypes && dishTypes.length > 0\r\n                    ? Styles.spetializationFieldView\r\n                    : Styles.fieldView\r\n                }>\r\n                <p style={Styles.titleStyle}>{CommonLabels.DISH_TYPE_LABEL}</p>\r\n                {dishTypes && dishTypes.length > 0 ? (\r\n                  dishTypes.map((val, index) => (\r\n                    <div style={Styles.dishView}>\r\n                      <p style={Styles.spetializationValueStyle}>\r\n                        {index + 1}\r\n                        {'.'}\r\n                        {val.dishTypeName}\r\n                        {'.'}\r\n                      </p> */}\r\n              {/* {val.isAdminApprovedYn === false && (\r\n                        <Button\r\n                          style={Styles.approveBotton}\r\n                          onClick={() => this.onClickApproveDish(true, val.dishTypeId)}>\r\n                          {CommonLabels.APPROVE}\r\n                        </Button>\r\n                      )}\r\n                      <Button\r\n                        style={CommonStyles.rejectBotton}\r\n                        onClick={() => this.onClickApproveDish(false, val.dishTypeId)}>\r\n                        {CommonLabels.REJECT}\r\n                      </Button> */}\r\n              {/* </div>\r\n                  ))\r\n                ) : (\r\n                  <p style={Styles.valueStyle}>{'-'}</p>\r\n                )}\r\n              </div> */}\r\n              {/* <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.EXPERIANCE_LABEL}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {chefExtended.chefExperience\r\n                    ? `${chefExtended.chefExperience} ${\r\n                        chefExtended.chefExperience > 1 ? 'Years' : 'Year'\r\n                      }`\r\n                    : '-'}\r\n                </p>\r\n              </div> */}\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Certification Types */}\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.CERTIFICATION_TYPE} style={Styles.innerCardWidth}>\r\n              <div\r\n                style={\r\n                  certificationType && certificationType.length > 0\r\n                    ? Styles.spetializationFieldView\r\n                    : Styles.fieldView\r\n                }>\r\n                <p style={Styles.titleStyle}>{CommonLabels.CERTIFICATION_LIST}</p>\r\n                {certificationType && certificationType.length > 0 ? (\r\n                  certificationType.map((val, index) => (\r\n                    <div style={Styles.dishView}>\r\n                      <p style={Styles.additionalServiceValueStyle}>\r\n                        {index + 1}\r\n                        {'.'}\r\n                        {val.certificateTypeName}\r\n                      </p>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p style={Styles.valueStyle}>{'-'}</p>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </div>\r\n          {/* complexity */}\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.COMPLEXITY} style={Styles.innerCardWidth}>\r\n              {complexity && complexity.length > 0 ? (\r\n                complexity.map((val, index) => (\r\n                  <Card>\r\n                    <div style={Styles.fieldView}>\r\n                      <p style={Styles.titleStyle}>{CommonLabels.COMPLEXITY_LEVEL}</p>\r\n                      <div style={Styles.valueStyle}>\r\n                        {val.complexcityLevel ? val.complexcityLevel : '-'}\r\n                      </div>\r\n                    </div>\r\n                    <div style={Styles.fieldView}>\r\n                      <p style={Styles.titleStyle}>{CommonLabels.DISHES}</p>\r\n                      <div style={Styles.valueStyle}>{val.dishes ? val.dishes : '-'}</div>\r\n                    </div>\r\n                    <div style={Styles.fieldView}>\r\n                      <p style={Styles.titleStyle}>{CommonLabels.NO_OF_ITEMS}</p>\r\n                      <div style={Styles.valueStyle}>\r\n                        {val.noOfItems.min ? val.noOfItems.min : '-'}\r\n                        {' - '}\r\n                        {val.noOfItems.max ? val.noOfItems.max : '-'}\r\n                        {val.noOfItems.min && val.noOfItems.max && ' menu items'}\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                ))\r\n              ) : (\r\n                <p style={Styles.valueStyle}>{'-'}</p>\r\n              )}\r\n            </Card>\r\n          </div>\r\n          {/* certificates */}\r\n          {((certicateAttachementsGallery &&\r\n            certicateAttachementsGallery.length > 0 &&\r\n            certicateGallery &&\r\n            certicateGallery.length > 0) ||\r\n            (certificateDucument && certificateDucument.length > 0)) && (\r\n            <div style={Styles.innerCardView}>\r\n              <Card title={CommonLabels.CERTIFICATE} style={Styles.innerCardWidth}>\r\n                <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                  {certicateAttachementsGallery &&\r\n                    certicateAttachementsGallery.length > 0 &&\r\n                    certicateGallery &&\r\n                    certicateGallery.length > 0 && (\r\n                      <PreviewImage\r\n                        attachment={certicateAttachementsGallery}\r\n                        gallery={certicateGallery}\r\n                      />\r\n                    )}\r\n                  {certificateDucument &&\r\n                    certificateDucument.length > 0 &&\r\n                    this.renderPdf(certificateDucument)}\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          )}\r\n          {/* Licence */}\r\n          {((licenseGallery &&\r\n            licenseGallery.length > 0 &&\r\n            attachementsLicense &&\r\n            attachementsLicense.length > 0) ||\r\n            (licenseDocument && licenseDocument.length > 0)) && (\r\n            <div style={Styles.innerCardView}>\r\n              <Card title={CommonLabels.LICENSE} style={Styles.innerCardWidth}>\r\n                <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                  {licenseGallery &&\r\n                    licenseGallery.length > 0 &&\r\n                    attachementsLicense &&\r\n                    attachementsLicense.length > 0 && (\r\n                      <PreviewImage attachment={attachementsLicense} gallery={licenseGallery} />\r\n                    )}\r\n                  {licenseDocument && licenseDocument.length > 0 && this.renderPdf(licenseDocument)}\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          )}\r\n          {/* Work gallery */}\r\n          {attachementsGallery &&\r\n            attachementsGallery.length > 0 &&\r\n            workGallery &&\r\n            workGallery.length > 0 && (\r\n              <div style={Styles.innerCardView}>\r\n                <Card title={CommonLabels.WORK_GALLERY_LABEL} style={Styles.innerCardWidth}>\r\n                  <PreviewImage attachment={attachementsGallery} gallery={workGallery} />\r\n                </Card>\r\n              </div>\r\n            )}\r\n          {/* Other attachment */}\r\n          {((attachementsOthers &&\r\n            attachementsOthers.length > 0 &&\r\n            otherGallary &&\r\n            otherGallary.length > 0) ||\r\n            (otherDocument && otherDocument.length > 0)) && (\r\n            <div style={Styles.innerCardView}>\r\n              <Card title={CommonLabels.OTHER_ATTACHMENT} style={Styles.innerCardWidth}>\r\n                <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                  {attachementsOthers &&\r\n                    attachementsOthers.length > 0 &&\r\n                    otherGallary &&\r\n                    otherGallary.length > 0 && (\r\n                      <PreviewImage attachment={attachementsOthers} gallery={otherGallary} />\r\n                    )}\r\n                  {otherDocument && otherDocument.length > 0 && this.renderPdf(otherDocument)}\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {chefDetails, chefDetailsLoading} = state.chefDetail\r\n  const {resetpassword, resetpasswordLoading, resetpasswordError} = state.resetPassword\r\n  // const {\r\n  //   cuisineStatusUpate,\r\n  //   cuisineStatusUpateLoading,\r\n  //   cuisineStatusUpateError,\r\n  // } = state.cuisineStatus\r\n  // const {disheStatusUpate, disheStatusUpateLoading, disheStatusUpateError} = state.dishStatus\r\n  return {\r\n    chefDetails,\r\n    chefDetailsLoading,\r\n    resetpassword,\r\n    resetpasswordLoading,\r\n    resetpasswordError,\r\n    // cuisineStatusUpateLoading,\r\n    // cuisineStatusUpate,\r\n    // cuisineStatusUpateError,\r\n    // disheStatusUpate,\r\n    // disheStatusUpateLoading,\r\n    // disheStatusUpateError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getChefDetails,\r\n  resetPassword,\r\n  // updateCuisineStatus,\r\n  // updateDishStatus,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ChefDetail)\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Button, Divider, Card, message, Rate, Icon} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport Styles from './styles'\r\nimport {themes} from '../../themes/themes'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport {createdDate} from '../../utils/dateFormat'\r\nimport {CONFIG} from '../../config/config'\r\nimport {getENVConfig} from '../../utils/common'\r\nimport {getCustomerDetails, resetPassword} from '../../actions/index'\r\nimport Loader from '../../components/loader/loader'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport SendMail from '../../components/sendMail/sendMail'\r\n\r\nexport class CustomerDetail extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      userData: {},\r\n      uid: '',\r\n      screen: '',\r\n      extendedProfile: {},\r\n      customerPreference: {},\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props && this.props.location && this.props.location.state) {\r\n      this.setState(\r\n        {\r\n          uid: this.props.location.state.uid,\r\n          screen: this.props.location.state.screen,\r\n          extraId: this.props.location.state.extraId,\r\n        },\r\n        () => {\r\n          const {client} = this.props\r\n          this.props.getCustomerDetails(client, this.state.uid)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.customerDetails) {\r\n      this.setState({userData: nxtprops.customerDetails}, () => {\r\n        if (\r\n          this.state.userData &&\r\n          this.state.userData.customerProfileExtendedsByCustomerId &&\r\n          this.state.userData.customerProfileExtendedsByCustomerId.nodes &&\r\n          this.state.userData.customerProfileExtendedsByCustomerId.nodes[0]\r\n        ) {\r\n          this.setState({\r\n            extendedProfile: this.state.userData.customerProfileExtendedsByCustomerId.nodes[0],\r\n          })\r\n        }\r\n        if (\r\n          this.state.userData &&\r\n          this.state.userData.customerPreferenceProfilesByCustomerId &&\r\n          this.state.userData.customerPreferenceProfilesByCustomerId.nodes &&\r\n          this.state.userData.customerPreferenceProfilesByCustomerId.nodes[0]\r\n        ) {\r\n          this.setState({\r\n            customerPreference: this.state.userData.customerPreferenceProfilesByCustomerId.nodes[0],\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onClickBack() {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push({\r\n        pathname: this.state.screen,\r\n        state: {\r\n          bookingId: this.state.extraId,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  onClickUpdate = email => {\r\n    if (email) {\r\n      this.props.resetPassword(email, CommonLabels.USER)\r\n    } else {\r\n      message.error(CommonLabels.NO_MAIL)\r\n    }\r\n  }\r\n\r\n  onClickEditProfile = () => {\r\n    const editUrl =\r\n      getENVConfig(CONFIG.EDIT_PROFILE_URL) +\r\n      `?loggedInAs=\"Admin\"&role=\"Customer\"&id=\"${this.state.uid}\"`\r\n    console.log('editUrl', editUrl)\r\n    window.open(editUrl)\r\n  }\r\n\r\n  render() {\r\n    const {userData, extendedProfile, customerPreference} = this.state\r\n    let allergyTypes = []\r\n    let dietaryType = []\r\n    let kitchenEquipment = []\r\n\r\n    console.log('customerPreference', customerPreference)\r\n    if (\r\n      customerPreference &&\r\n      customerPreference.allergyTypes &&\r\n      customerPreference.allergyTypes.nodes\r\n    ) {\r\n      allergyTypes = customerPreference.allergyTypes.nodes\r\n    }\r\n    if (\r\n      customerPreference &&\r\n      customerPreference.dietaryRestrictionsTypes &&\r\n      customerPreference.dietaryRestrictionsTypes.nodes\r\n    ) {\r\n      dietaryType = customerPreference.dietaryRestrictionsTypes.nodes\r\n    }\r\n    if (\r\n      customerPreference &&\r\n      customerPreference.kitchenEquipmentTypes &&\r\n      customerPreference.kitchenEquipmentTypes.nodes\r\n    ) {\r\n      kitchenEquipment = customerPreference.kitchenEquipmentTypes.nodes\r\n    }\r\n    return (\r\n      <div style={Styles.cardView}>\r\n        <div className=\"userDetailCard\">\r\n          <div style={Styles.alignProfile}>\r\n            <div style={Styles.profileView}>\r\n              <img\r\n                style={Styles.profileStyle}\r\n                alt={CommonLabels.ALTERNATE_PIC}\r\n                src={userData.customerPicId ? userData.customerPicId : themes.default_user}\r\n              />\r\n              <div style={Styles.nameView}>\r\n                <p style={Styles.titleStyle}>{userData.fullName ? userData.fullName : '-'}</p>\r\n                <p style={Styles.nameValue}>\r\n                  {userData.customerEmail ? userData.customerEmail : '-'}\r\n                </p>\r\n                <div style={Styles.starStyle}>\r\n                  {userData.averageRating && userData.totalReviewCount ? (\r\n                    <div style={Styles.rateStyle}>\r\n                      <Rate\r\n                        allowHalf\r\n                        disabled\r\n                        value={userData.averageRating ? userData.averageRating : 0}\r\n                      />\r\n                      <p style={Styles.rateCoutStyle}>\r\n                        {userData.averageRating ? userData.averageRating : '0'}\r\n                      </p>\r\n                      <div style={Styles.reveiwCoutStyle}>\r\n                        ({userData.totalReviewCount ? userData.totalReviewCount : '0'}\r\n                        {userData.totalReviewCount > 1\r\n                          ? CommonLabels.REVIEWS_LABEL\r\n                          : CommonLabels.REVIEW_LABEL}\r\n                        )\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <p style={Styles.noReviewStyle}>{CommonLabels.NO_REVIEWS}</p>\r\n                  )}\r\n                </div>\r\n                {userData.customerEmail && (\r\n                  <div style={Styles.passwordbuttonView}>\r\n                    <Icon\r\n                      type={CommonLabels.EDIT_ICON}\r\n                      theme={CommonLabels.THEME}\r\n                      style={Styles.editIconStyle}\r\n                      onClick={() => this.onClickEditProfile()}\r\n                    />\r\n                    <Button\r\n                      style={Styles.updatePasswordBotton}\r\n                      onClick={() => this.onClickUpdate(userData.customerEmail)}>\r\n                      {CommonLabels.RESET_PASSWORD}\r\n                    </Button>\r\n                    <SendMail emailId={userData.customerEmail} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <Button style={Styles.backButtonStyle} onClick={() => this.onClickBack()}>\r\n              {CommonLabels.BACK}\r\n            </Button>\r\n          </div>\r\n          <Divider style={Styles.dividerStyle} />\r\n          <div style={CommonStyles.loaderStyle}>\r\n            <Loader loader={this.props.customerDetailsLoading} />\r\n          </div>\r\n\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.CONTACT_LABEL} style={Styles.innerCardWidth}>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.PHONE_NUMBER_LABEL}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {userData.customerMobileNumber ? userData.customerMobileNumber : '-'}\r\n                </p>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.LOCATION_LABEL}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {extendedProfile.customerLocationAddress\r\n                    ? extendedProfile.customerLocationAddress\r\n                    : '-'}\r\n                </p>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.PERSONAL_LABEL} style={Styles.innerCardWidth}>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.REGISTERED_DATE_LABEL}</p>\r\n                <p style={Styles.valueStyle}>{createdDate(userData.createdAt)}</p>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.GENDER_LABEL}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {userData.customerGender ? userData.customerGender : '-'}\r\n                </p>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.DOB_LABEL}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {userData.customerDob ? createdDate(userData.customerDob) : '-'}\r\n                </p>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Allergy Types */}\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.ALLERGY_TYPE} style={Styles.innerCardWidth}>\r\n              <div\r\n                style={\r\n                  allergyTypes && allergyTypes.length > 0\r\n                    ? Styles.spetializationFieldView\r\n                    : Styles.fieldView\r\n                }>\r\n                <p style={Styles.titleStyle}>{CommonLabels.ALLERGY_LIST}</p>\r\n                {allergyTypes && allergyTypes.length > 0 ? (\r\n                  allergyTypes.map((val, index) => (\r\n                    <div style={Styles.dishView}>\r\n                      <p style={Styles.additionalServiceValueStyle}>\r\n                        {index + 1}\r\n                        {'.'}\r\n                        {val.allergyTypeName}\r\n                      </p>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p style={Styles.valueStyle}>{'-'}</p>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </div>\r\n          {/* Dietary Types */}\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.DIETARY_TYPE} style={Styles.innerCardWidth}>\r\n              <div\r\n                style={\r\n                  dietaryType && dietaryType.length > 0\r\n                    ? Styles.spetializationFieldView\r\n                    : Styles.fieldView\r\n                }>\r\n                <p style={Styles.titleStyle}>{CommonLabels.DIETARY_LIST}</p>\r\n                {dietaryType && dietaryType.length > 0 ? (\r\n                  dietaryType.map((val, index) => (\r\n                    <div style={Styles.dishView}>\r\n                      <p style={Styles.additionalServiceValueStyle}>\r\n                        {index + 1}\r\n                        {'.'}\r\n                        {val.dietaryRestrictionsTypeName}\r\n                      </p>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p style={Styles.valueStyle}>{'-'}</p>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </div>\r\n          {/* Kitchen Types */}\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.KITCHEN_TYPE} style={Styles.innerCardWidth}>\r\n              <div\r\n                style={\r\n                  kitchenEquipment && kitchenEquipment.length > 0\r\n                    ? Styles.spetializationFieldView\r\n                    : Styles.fieldView\r\n                }>\r\n                <p style={Styles.titleStyle}>{CommonLabels.KITCHEN_EQUIPMENT}</p>\r\n                {kitchenEquipment && kitchenEquipment.length > 0 ? (\r\n                  kitchenEquipment.map((val, index) => (\r\n                    <div style={Styles.dishView}>\r\n                      <p style={Styles.additionalServiceValueStyle}>\r\n                        {index + 1}\r\n                        {'.'}\r\n                        {val.kitchenEquipmentTypeName}\r\n                      </p>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p style={Styles.valueStyle}>{'-'}</p>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {customerDetails, customerDetailsLoading} = state.customerDetail\r\n  const {resetpassword, resetpasswordLoading, resetpasswordError} = state.resetPassword\r\n  return {\r\n    customerDetails,\r\n    customerDetailsLoading,\r\n    resetpassword,\r\n    resetpasswordLoading,\r\n    resetpasswordError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCustomerDetails,\r\n  resetPassword,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(CustomerDetail)\r\n)\r\n","/** @format */\r\n\r\nexport default {\r\n  profileStyle: {\r\n    display: 'flex',\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: '50%',\r\n    marginLeft: 20,\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  iconStyle: {\r\n    display: 'flex',\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: '50%',\r\n    marginLeft: 10,\r\n  },\r\n  cardView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 20,\r\n  },\r\n  innerCardView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  innerCardWidth: {\r\n    width: '95%',\r\n  },\r\n  titleStyle: {\r\n    color: 'black',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n  },\r\n  fieldView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  valueStyle: {\r\n    fontSize: 18,\r\n    marginLeft: 20,\r\n  },\r\n  arrValue: {\r\n    fontSize: 18,\r\n    marginLeft: 5,\r\n  },\r\n  nameValue: {\r\n    fontSize: 18,\r\n    marginTop: -20,\r\n  },\r\n  rateCoutStyle: {\r\n    color: 'black',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    marginTop: 4,\r\n    marginLeft: 5,\r\n  },\r\n  reveiwCoutStyle: {\r\n    marginTop: 6,\r\n    fontSize: 15,\r\n    fontWeight: '600',\r\n  },\r\n  backButtonStyle: {\r\n    backgroundColor: '#515151',\r\n    color: 'white',\r\n    marginRight: 20,\r\n    marginTop: 10,\r\n  },\r\n  buttonView: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  profileView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  alignProfile: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  nameView: {\r\n    marginTop: 10,\r\n    marginLeft: 10,\r\n  },\r\n  dividerStyle: {\r\n    marginTop: -10,\r\n    height: 2,\r\n  },\r\n  starStyle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    marginTop: -20,\r\n  },\r\n  workImageView: {\r\n    marginLeft: 20,\r\n  },\r\n  commonmarginLeft: {\r\n    fontSize: 18,\r\n    marginLeft: 10,\r\n  },\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Button, Rate, Card} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport 'react-image-gallery/styles/css/image-gallery.css'\r\nimport {withApollo} from 'react-apollo'\r\nimport Styles from './styles'\r\nimport {themes} from '../../themes/themes'\r\nimport CommonLables from '../common/commonLabel'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport {createdDate} from '../../utils/dateFormat'\r\nimport n from '../routes/routesNames'\r\nimport {getReviewRatingDetail} from '../../actions/index'\r\nimport Loader from '../../components/loader/loader'\r\nexport class ReviewDetail extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      reviewData: {},\r\n      userData: {},\r\n      rId: '',\r\n      chefSpetialization: {},\r\n      chefExtended: {},\r\n      chefAttachment: [],\r\n      chefReview: {},\r\n      previewVisible: false,\r\n      previewImage: '',\r\n      gallery: [],\r\n      galleryIndex: 0,\r\n      screen: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props && this.props.location && this.props.location.state) {\r\n      this.setState(\r\n        {\r\n          rId: this.props.location.state.reviewId,\r\n          screen: this.props.location.state.screen,\r\n        },\r\n        () => {\r\n          const {client} = this.props\r\n          this.props.getReviewRatingDetail(client, this.state.rId)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.reviewDetails) {\r\n      this.setState({reviewData: nxtprops.reviewDetails}, () => {})\r\n    }\r\n  }\r\n\r\n  onClickBack() {\r\n    if (this.props && this.props.history) {\r\n      if (this.state.screen === CommonLables.CHEFMANAGEMENT) {\r\n        this.props.history.push({\r\n          pathname: n.CHEFMANAGEMENT,\r\n        })\r\n      } else if (this.state.screen === CommonLables.BOOKINGHISTORY) {\r\n        this.props.history.push({\r\n          pathname: n.BOOKINGHISTORY,\r\n        })\r\n      } else if (this.state.screen === CommonLables.REVIEWSRATINGS) {\r\n        this.props.history.push({\r\n          pathname: n.REVIEWSRATINGS,\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {reviewData} = this.state\r\n    console.log(' render reviewDatareviewData', reviewData)\r\n    return (\r\n      <div style={Styles.cardView}>\r\n        <div className=\"userDetailCard\">\r\n          <div style={Styles.buttonView}>\r\n            <Button style={Styles.backButtonStyle} onClick={() => this.onClickBack()}>\r\n              {CommonLables.BACK}\r\n            </Button>\r\n          </div>\r\n          <div style={CommonStyles.loaderStyle}>\r\n            <Loader loader={this.props.reviewDetailsLoading} />\r\n          </div>\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLables.REVIEW_DETAILS} style={Styles.innerCardWidth}>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLables.REVIEW_DONE_BY}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {reviewData.isReviewedByCustomerYn &&\r\n                    reviewData.isReviewedByCustomerYn === true && (\r\n                      <img\r\n                        style={CommonStyles.imageStyle}\r\n                        alt={CommonLables.ALTERNATE_PIC}\r\n                        src={\r\n                          reviewData.customerProfileByCustomerId.customerPicId\r\n                            ? reviewData.customerProfileByCustomerId.customerPicId\r\n                            : themes.default_user\r\n                        }\r\n                      />\r\n                    )}\r\n                  {reviewData.isReviewedByChefYn && reviewData.isReviewedByChefYn === true && (\r\n                    <img\r\n                      style={CommonStyles.imageStyle}\r\n                      alt={CommonLables.ALTERNATE_PIC}\r\n                      src={\r\n                        reviewData.customerProfileByCustomerId.chefPicId\r\n                          ? reviewData.customerProfileByCustomerId.chefPicId\r\n                          : themes.default_user\r\n                      }\r\n                    />\r\n                  )}\r\n                </p>\r\n                <p style={Styles.commonmarginLeft}>\r\n                  {reviewData.isReviewedByCustomerYn &&\r\n                    reviewData.isReviewedByCustomerYn === true &&\r\n                    reviewData.customerProfileByCustomerId.fullName}\r\n                  {reviewData.isReviewedByChefYn &&\r\n                    reviewData.isReviewedByChefYn === true &&\r\n                    reviewData.chefProfileByChefId.fullName}\r\n                </p>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLables.REVIEW_DONE_FOR}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {reviewData.isReviewedByChefYn && reviewData.isReviewedByChefYn === true && (\r\n                    <img\r\n                      style={CommonStyles.imageStyle}\r\n                      alt={CommonLables.ALTERNATE_PIC}\r\n                      src={\r\n                        reviewData.customerProfileByCustomerId.customerPicId\r\n                          ? reviewData.customerProfileByCustomerId.customerPicId\r\n                          : themes.default_user\r\n                      }\r\n                    />\r\n                  )}\r\n                  {reviewData.isReviewedByCustomerYn &&\r\n                    reviewData.isReviewedByCustomerYn === true && (\r\n                      <img\r\n                        style={CommonStyles.imageStyle}\r\n                        alt={CommonLables.ALTERNATE_PIC}\r\n                        src={\r\n                          reviewData.customerProfileByCustomerId.chefPicId\r\n                            ? reviewData.customerProfileByCustomerId.chefPicId\r\n                            : themes.default_user\r\n                        }\r\n                      />\r\n                    )}\r\n                </p>\r\n                <p style={Styles.commonmarginLeft}>\r\n                  {reviewData.isReviewedByChefYn &&\r\n                    reviewData.isReviewedByChefYn === true &&\r\n                    reviewData.customerProfileByCustomerId.fullName}\r\n                  {reviewData.isReviewedByCustomerYn &&\r\n                    reviewData.isReviewedByCustomerYn === true &&\r\n                    reviewData.chefProfileByChefId.fullName}\r\n                </p>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLables.REVIEW_ON}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {reviewData.createdAt && createdDate(reviewData.createdAt)}\r\n                </p>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLables.REVIEW_DESCRIPTION}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  {reviewData.reviewDesc ? reviewData.reviewDesc : '-'}\r\n                </p>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLables.REVIEW_RATING}</p>\r\n                <p style={Styles.valueStyle}>\r\n                  <Rate\r\n                    allowHalf\r\n                    disabled\r\n                    value={reviewData.reviewPoint ? reviewData.reviewPoint : 0}\r\n                  />\r\n                </p>\r\n                <p style={Styles.rateCoutStyle}>\r\n                  {reviewData.reviewPoint ? reviewData.reviewPoint : '0'}\r\n                </p>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {reviewDetails, reviewDetailsLoading} = state.reviewDetail\r\n  return {\r\n    reviewDetails,\r\n    reviewDetailsLoading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getReviewRatingDetail,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ReviewDetail)\r\n)\r\n","/** @format */\r\n\r\nexport default {\r\n  cardView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    fexDirection: 'row',\r\n    marginTop: 20,\r\n  },\r\n  tripleView: {\r\n    display: 'flex',\r\n    fexDirection: 'row',\r\n    marginTop: 20,\r\n  },\r\n  userCardStyle: {\r\n    width: '29.5%',\r\n    marginLeft: 20,\r\n  },\r\n\r\n  innerCardView: {\r\n    display: 'flex',\r\n    // justifyContent: 'center',\r\n    marginTop: 20,\r\n    marginLeft: 20,\r\n  },\r\n  innerCardWidth: {\r\n    width: '95%',\r\n  },\r\n  titleStyle: {\r\n    color: 'black',\r\n    fontWeight: '600',\r\n  },\r\n  bookingIdStyle: {\r\n    marginLeft: 20,\r\n    color: 'black',\r\n    fontWeight: '600',\r\n  },\r\n  fieldView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  summaryFieldView: {\r\n    display: 'flex',\r\n    flexDirection: 'Column',\r\n    marginBottom: '2%',\r\n    flex: 'flex-warp',\r\n  },\r\n  valueStyle: {\r\n    marginLeft: 20,\r\n    display: 'flex',\r\n    flex: 'flex-warp',\r\n  },\r\n  totalStyle: {\r\n    marginLeft: 20,\r\n    display: 'flex',\r\n    flex: 'flex-warp',\r\n  },\r\n  spetializationValueStyle: {\r\n    fontSize: 18,\r\n    marginLeft: 20,\r\n    width: 150,\r\n  },\r\n  backButtonStyle: {\r\n    backgroundColor: '#515151',\r\n    color: 'white',\r\n    marginRight: 20,\r\n    marginTop: 5,\r\n  },\r\n  backButtonView: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  reviewCardStyle: {\r\n    width: '49.7%',\r\n  },\r\n  cancelCardStyle: {\r\n    width: '97.5%',\r\n    marginLeft: 20,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  rateCoutStyle: {\r\n    color: 'black',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    marginTop: 4,\r\n    marginLeft: 5,\r\n  },\r\n  StarView: {\r\n    display: 'flex',\r\n    fexDirection: 'row',\r\n  },\r\n  paymentButton: {\r\n    color: '#35CA45',\r\n    borderColor: '#35CA45',\r\n    borderWidth: 1,\r\n    fontWeight: 600,\r\n    height: 27,\r\n    marginLeft: 5,\r\n  },\r\n  paymentView: {\r\n    marginTop: 10,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n\r\n  trackActionView: {\r\n    display: 'flex',\r\n    fexDirection: 'row',\r\n  },\r\n  completeActionIconStyle: {\r\n    fontSize: 20,\r\n    color: '#35CA45',\r\n    marginRight: 5,\r\n  },\r\n  pendingActionIconStyle: {\r\n    fontSize: 20,\r\n    color: '#0E7BF5',\r\n    marginRight: 5,\r\n  },\r\n  cancelActionIconStyle: {\r\n    fontSize: 20,\r\n    color: '#F5150E',\r\n    marginRight: 5,\r\n  },\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Table, Card, Button, Rate, Input, Icon, Modal, message} from 'antd'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport moment from 'moment'\r\nimport n from '../routes/routesNames'\r\nimport {\r\n  getBookingDetails,\r\n  sendAmountToChef,\r\n  getBookingRequestDetails,\r\n  refundAmoutToCustomer,\r\n} from '../../actions/index'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport Styles from './styles'\r\nimport PicNameField from '../../components/picNameField/picNameField'\r\nimport {BusinessDate, GMTToLocal, displayDateFormat} from '../../utils/dateFormat'\r\n\r\nimport {bussinessTime} from '../../utils/timeFormat'\r\nimport {fetchTrackdata} from './bookingTrackingFunctions'\r\nimport {GetValueFromLocal} from '../../utils/localStorage'\r\n\r\nconst {TextArea} = Input\r\nexport class BookingDetails extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      booking: {},\r\n      requestedDetails: {},\r\n      bookingId: '',\r\n      screen: '',\r\n      chef: {},\r\n      customer: {},\r\n      userData: [],\r\n      chefLocation: '',\r\n      customerLocation: '',\r\n      trackingData: [],\r\n      chefBookingReviews: {},\r\n      CustomerBookingReviews: {},\r\n      finalTrackingData: [],\r\n      visible: false,\r\n      paymentNotes: '',\r\n      adminId: '',\r\n      firbaseToken: '',\r\n      paymentButton: false,\r\n      refundButton: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    GetValueFromLocal('uid')\r\n      .then(async uid => {\r\n        this.setState({adminId: uid})\r\n      })\r\n      .catch(err => {\r\n        message.error(err)\r\n      })\r\n    if (this.props && this.props.location && this.props.location.state) {\r\n      this.setState(\r\n        {\r\n          bookingId: this.props.location.state.bookingId,\r\n          screen: this.props.location.state.screen,\r\n        },\r\n        () => {\r\n          const {client} = this.props\r\n          this.props.getBookingDetails(client, this.state.bookingId)\r\n          this.props.getBookingRequestDetails(client, this.state.bookingId)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    console.log('nxtprops', nxtprops)\r\n    if (nxtprops.bookingRequestedDetails) {\r\n      this.setState({requestedDetails: nxtprops.bookingRequestedDetails.nodes[0]})\r\n    }\r\n    if (\r\n      nxtprops.sentToChefError &&\r\n      nxtprops.sentToChefError !== this.props.sentToChefError &&\r\n      nxtprops.sentToChefError.indexOf('INSUFFICENT_BALANCE')\r\n    ) {\r\n      message.error(`Sorry, couldn't accept  the payment due to insufficent balance`)\r\n    } else if (\r\n      nxtprops.sentToChefError &&\r\n      nxtprops.sentToChefError !== this.props.sentToChefError\r\n    ) {\r\n      message.error(`Something went wrong`)\r\n    }\r\n    if (\r\n      (nxtprops.sentToChef === 'success' && nxtprops.sentToChef !== this.props.sentToChef) ||\r\n      (nxtprops.refundToCustomer === 'success' &&\r\n        nxtprops.refundToCustomer !== this.props.refundToCustomer)\r\n    ) {\r\n      const {client} = this.props\r\n      this.props.getBookingDetails(client, this.state.bookingId)\r\n    }\r\n    if (nxtprops.bookingDetails) {\r\n      this.setState({booking: nxtprops.bookingDetails}, () => {\r\n        const mainStatus =\r\n          nxtprops.bookingDetails && nxtprops.bookingDetails.chefBookingStatusId\r\n            ? nxtprops.bookingDetails.chefBookingStatusId.trim()\r\n            : ''\r\n        console.log('nxtprops.bookingDetails', nxtprops.bookingDetails)\r\n        if (\r\n          mainStatus === 'COMPLETED' ||\r\n          mainStatus === 'AMOUNT_TRANSFER_FAILED'\r\n          // &&\r\n          // nxtprops.bookingDetails.chefBookingCompletedByChefYn === true\r\n        ) {\r\n          this.setState({\r\n            paymentButton: true,\r\n          })\r\n          //enable payment button\r\n        } else if (\r\n          //enale refund button\r\n          mainStatus === 'CHEF_REJECTED' ||\r\n          mainStatus === 'CANCELLED_BY_CHEF' ||\r\n          mainStatus === 'CANCELLED_BY_CUSTOMER' ||\r\n          mainStatus === 'CUSTOMER_REFUND_TRANSFER_FAILED'\r\n        ) {\r\n          this.setState({\r\n            refundButton: true,\r\n          })\r\n        } else {\r\n          //nothing\r\n        }\r\n\r\n        if (this.state.booking.chefProfileByChefId) {\r\n          this.setState({chef: this.state.booking.chefProfileByChefId}, () => {\r\n            if (\r\n              this.state.chef.chefProfileExtendedsByChefId &&\r\n              this.state.chef.chefProfileExtendedsByChefId.nodes[0] &&\r\n              this.state.chef.chefProfileExtendedsByChefId.nodes[0].chefLocationAddress\r\n            ) {\r\n              this.setState({\r\n                chefLocation: this.state.chef.chefProfileExtendedsByChefId.nodes[0]\r\n                  .chefLocationAddress,\r\n              })\r\n            }\r\n          })\r\n        }\r\n        if (this.state.booking.customerProfileByCustomerId) {\r\n          this.setState({customer: this.state.booking.customerProfileByCustomerId}, () => {\r\n            if (\r\n              this.state.customer.customerProfileExtendedsByCustomerId &&\r\n              this.state.customer.customerProfileExtendedsByCustomerId.nodes[0] &&\r\n              this.state.customer.customerProfileExtendedsByCustomerId.nodes[0]\r\n                .customerLocationAddress\r\n            ) {\r\n              this.setState({\r\n                customerLocation: this.state.customer.customerProfileExtendedsByCustomerId.nodes[0]\r\n                  .customerLocationAddress,\r\n              })\r\n            }\r\n          })\r\n        }\r\n        if (\r\n          this.state.booking.trackBookingHistoryStatusesByChefBookingHistId &&\r\n          this.state.booking.trackBookingHistoryStatusesByChefBookingHistId.nodes &&\r\n          this.state.booking.trackBookingHistoryStatusesByChefBookingHistId.nodes.length > 0\r\n        ) {\r\n          const successStatus = [\r\n            'PAYMENT_PENDING',\r\n            'REVIEW_DONE_BY_CUSTOMER',\r\n            //'CUSTOMER_REFUND_TRANSFERRED_SUCCESS',\r\n            'CHEF_REQUESTED_AMOUNT',\r\n          ]\r\n\r\n          const failStatus = [\r\n            'PAYMENT_FAILED',\r\n            'CHEF_REJECTED',\r\n            'CANCELLED_BY_CHEF',\r\n            'CANCELLED_BY_CUSTOMER',\r\n            'CHEF_AMOUNT_TRANSFER_FAILED',\r\n            'CUSTOMER_REFUND_TRANSFER_FAILED',\r\n          ]\r\n\r\n          const unWantedStatus = [\r\n            'COMPLETED_BY_CHEF',\r\n            'CHEF_AMOUNT_TRANSFERRED_SUCCESS',\r\n            'CHEF_ACCEPTED',\r\n          ]\r\n\r\n          let localData = this.state.booking.trackBookingHistoryStatusesByChefBookingHistId.nodes\r\n          console.log('localData', localData)\r\n          localData = _.filter(localData, (item, index) => {\r\n            let status = item.status ? item.status.trim() : ''\r\n            if (\r\n              (status === 'COMPLETED_BY_CHEF' || status === 'CHEF_AMOUNT_TRANSFER_FAILED') &&\r\n              item.updatedAt\r\n            ) {\r\n              //this.setState({paymentButton: true})\r\n            } else if (status === 'CHEF_REQUESTED_AMOUNT' && item.updatedAt) {\r\n              //this.setState({paymentButton: false})\r\n            } else if (\r\n              status === 'CHEF_AMOUNT_TRANSFERRED_SUCCESS' &&\r\n              status === 'CHEF_REJECTED' &&\r\n              status === 'CANCELLED_BY_CHEF' &&\r\n              status === 'CANCELLED_BY_CUSTOMER' &&\r\n              item.updatedAt === null\r\n            ) {\r\n              //this.setState({paymentButton: true})\r\n            } else if (status === 'CHEF_AMOUNT_TRANSFERRED_SUCCESS' && item.updatedAt) {\r\n              //this.setState({paymentButton: false})\r\n            }\r\n\r\n            if (\r\n              (status === 'CHEF_REJECTED' ||\r\n                status === 'CANCELLED_BY_CHEF' ||\r\n                status === 'CANCELLED_BY_CUSTOMER') &&\r\n              item.updatedAt\r\n            ) {\r\n              //this.setState({refundButton: true})\r\n            } else if (status === 'CUSTOMER_REFUND_TRANSFERRED_SUCCESS' && item.updatedAt) {\r\n              // this.setState({refundButton: false})\r\n            }\r\n\r\n            if (\r\n              successStatus.indexOf(status) !== -1 ||\r\n              (failStatus.indexOf(status) !== -1 && !item.updatedAt)\r\n            ) {\r\n              return false\r\n            } else {\r\n              return true\r\n            }\r\n          })\r\n\r\n          this.setState(\r\n            {\r\n              trackingData: localData,\r\n            },\r\n            () => {\r\n              // const {trackingData} = this.state\r\n              // //Get only required tracking status\r\n              // if (\r\n              //   trackingData[0].updatedAt &&\r\n              //   trackingData[1].updatedAt &&\r\n              //   trackingData[3].updatedAt\r\n              // ) {\r\n              //   fetchTrackdata.chefRejected(trackingData).then(temp => {\r\n              //     this.finalTrakingvalue(temp)\r\n              //   })\r\n              // } else if (\r\n              //   trackingData[0].updatedAt &&\r\n              //   (trackingData[1].updatedAt === null &&\r\n              //     trackingData[2].updatedAt === null &&\r\n              //     trackingData[3].updatedAt === null &&\r\n              //     trackingData[4].updatedAt === null &&\r\n              //     trackingData[5].updatedAt === null &&\r\n              //     trackingData[6].updatedAt === null)\r\n              // ) {\r\n              //   fetchTrackdata.pendingPayment(trackingData).then(temp => {\r\n              //     this.finalTrakingvalue(temp)\r\n              //   })\r\n              // } else if (trackingData[6].updatedAt && trackingData[7].updatedAt) {\r\n              //   fetchTrackdata.bothCompleted(trackingData).then(temp => {\r\n              //     this.finalTrakingvalue(temp)\r\n              //   })\r\n              // } else if (\r\n              //   trackingData[0].updatedAt &&\r\n              //   trackingData[1].updatedAt &&\r\n              //   (trackingData[2].updatedAt === null || trackingData[2].updatedAt) &&\r\n              //   trackingData[3].updatedAt === null &&\r\n              //   trackingData[4].updatedAt === null &&\r\n              //   trackingData[5].updatedAt === null &&\r\n              //   trackingData[6].updatedAt === null &&\r\n              //   trackingData[7].updatedAt === null\r\n              // ) {\r\n              //   //Customer requested or chef accepted\r\n              //   fetchTrackdata.customerRequested(trackingData).then(temp => {\r\n              //     this.finalTrakingvalue(temp)\r\n              //   })\r\n              // } else if (trackingData[4].updatedAt) {\r\n              //   fetchTrackdata.customerCancelled(trackingData).then(temp => {\r\n              //     this.finalTrakingvalue(temp)\r\n              //   })\r\n              // } else if (trackingData[5].updatedAt) {\r\n              //   fetchTrackdata.chefCancelled(trackingData).then(temp => {\r\n              //     this.finalTrakingvalue(temp)\r\n              //   })\r\n              // } else if (trackingData[6].updatedAt || trackingData[7].updatedAt) {\r\n              //   fetchTrackdata.completedByAnyOne(trackingData).then(temp => {\r\n              //     this.finalTrakingvalue(temp)\r\n              //   })\r\n              // }\r\n            }\r\n          )\r\n        }\r\n\r\n        if (\r\n          this.state.booking.chefBookingReviews &&\r\n          this.state.booking.chefBookingReviews.nodes &&\r\n          this.state.booking.chefBookingReviews.nodes[0]\r\n        ) {\r\n          this.setState({chefBookingReviews: this.state.booking.chefBookingReviews.nodes[0]})\r\n        }\r\n\r\n        if (\r\n          this.state.booking.customerBookingReviews &&\r\n          this.state.booking.customerBookingReviews.nodes &&\r\n          this.state.booking.customerBookingReviews.nodes[0]\r\n        ) {\r\n          this.setState({\r\n            CustomerBookingReviews: this.state.booking.customerBookingReviews.nodes[0],\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  finalTrakingvalue = data => {\r\n    const orderby = _.orderBy(data, CommonLabels.TRACKORDERNO, CommonLabels.ASC)\r\n    this.setState({finalTrackingData: orderby})\r\n  }\r\n\r\n  onClickBack = () => {\r\n    if (this.props && this.props.history) {\r\n      this.props.history.push({\r\n        pathname: n.BOOKINGHISTORY,\r\n      })\r\n    }\r\n  }\r\n\r\n  openPaymentModal = () => {\r\n    this.setState({visible: true})\r\n  }\r\n\r\n  onClickCancel = () => {\r\n    this.setState({visible: false, paymentNotes: ''})\r\n  }\r\n\r\n  asignPaymentNotes = val => {\r\n    this.setState({paymentNotes: val.target.value})\r\n  }\r\n\r\n  onclickPayment = type => {\r\n    const {booking} = this.state\r\n    const now = new Date()\r\n    let currentDate = ''\r\n    let requestDate = booking.chefBookingFromTime\r\n    currentDate = GMTToLocal(now)\r\n    requestDate = GMTToLocal(booking.chefBookingFromTime)\r\n    const diffValue = moment(requestDate, displayDateFormat).diff(\r\n      moment(currentDate, displayDateFormat),\r\n      'hours'\r\n    )\r\n    console.log('diffValue', diffValue)\r\n    if (this.state.chef && this.state.chef.defaultStripeUserId === null) {\r\n      message.error(CommonLabels.CHEF_BANK_ACCOUNT)\r\n    } else if (diffValue <= 0) {\r\n      message.error(`Sorry, You can't complete the payment before the customer requested date`)\r\n    } else {\r\n      if (this.state.paymentNotes.length > 0) {\r\n        const {client} = this.props\r\n        if (type === CommonLabels.REFUND_TO_CUSTOMER) {\r\n          const temp = {\r\n            bookingHistId: this.state.bookingId,\r\n            adminId: this.state.adminId,\r\n            customerId: this.state.customer.customerId,\r\n          }\r\n          this.props.refundAmoutToCustomer(client, temp)\r\n          this.setState({paymentNotes: '', visible: false, refundButton: false})\r\n        }\r\n        if (this.state.chef && this.state.chef.defaultStripeUserId) {\r\n          if (type === CommonLabels.SEND_TO_CHEF) {\r\n            const queryData = {\r\n              chefStripeUserId: this.state.chef.defaultStripeUserId,\r\n              bookingHistId: this.state.bookingId,\r\n              adminId: this.state.adminId,\r\n              chefId: this.state.chef.chefId,\r\n            }\r\n            this.props.sendAmountToChef(client, queryData)\r\n            this.setState({paymentNotes: '', visible: false, paymentButton: false})\r\n          }\r\n        } else {\r\n          message.error(CommonLabels.WENT_WRONG)\r\n        }\r\n      } else {\r\n        message.error(CommonLabels.ENTER_NOTES)\r\n      }\r\n    }\r\n  }\r\n\r\n  footer = () => {\r\n    return (\r\n      <div>\r\n        {(this.state.paymentButton === true || this.state.refundButton === true) && (\r\n          <div style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n            <Button style={Styles.paymentButton} onClick={() => this.openPaymentModal()}>\r\n              {this.state.paymentButton === true\r\n                ? CommonLabels.SEND_TO_CHEF\r\n                : CommonLabels.REFUND_TO_CUSTOMER}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      chef,\r\n      customer,\r\n      booking,\r\n      requestedDetails,\r\n      trackingData,\r\n      chefBookingReviews,\r\n      CustomerBookingReviews,\r\n      finalTrackingData,\r\n    } = this.state\r\n    let summary = ''\r\n    let NoofPeople = 0\r\n    let additionalNoOfPeople = 0\r\n    let OtherAllergy = ''\r\n    let kitchenEquipment = ''\r\n    let chefCharge = 0\r\n    let firstChefCharge = 0\r\n    let remChefCharge = 0\r\n    let otherDietary = ''\r\n    let servicePercentage\r\n    let rockolyCharge\r\n    let bookingAddress = ''\r\n    let additionalPrice = []\r\n    let additionalTotalPrice = 0\r\n    let totalAmountToPay = 0\r\n    let chefTotalCharge = 0\r\n    let additionalService = []\r\n    let requestComplexity = 0\r\n    let requestTotalPrice = 0\r\n    let requestPrice = 0\r\n    let complexity = 0\r\n    let chefprice = 0\r\n    let complexityCharge = 0\r\n    let dishTypeDesc = []\r\n    let bookingNotes = []\r\n    let allergyTypes = []\r\n    let equipmentTypes = []\r\n    let dietaryTypes = []\r\n    let paymentDetails = []\r\n    let requestAdditionalServices = []\r\n    let requestServicePrice = []\r\n    if (booking && booking.chefBookingSummary) {\r\n      summary = booking.chefBookingSummary\r\n    }\r\n    if (booking.chefBookingServiceChargePriceValue) {\r\n      servicePercentage = booking.chefBookingServiceChargePriceValue\r\n    }\r\n    if (booking && booking.chefBookingNoOfPeople) {\r\n      NoofPeople = booking.chefBookingNoOfPeople\r\n    }\r\n\r\n    if (booking && booking.chefBookingComplexity) {\r\n      complexity = booking.chefBookingComplexity\r\n    }\r\n\r\n    if (booking && booking.additionalServiceDetails) {\r\n      additionalService = JSON.parse(booking.additionalServiceDetails)\r\n    }\r\n    if (\r\n      chef &&\r\n      chef.chefProfileExtendedsByChefId &&\r\n      chef.chefProfileExtendedsByChefId.nodes &&\r\n      chef.chefProfileExtendedsByChefId.nodes[0] &&\r\n      chef.chefProfileExtendedsByChefId.nodes[0].chefPricePerHour\r\n    ) {\r\n      chefprice = chef.chefProfileExtendedsByChefId.nodes[0].chefPricePerHour\r\n    }\r\n    if (NoofPeople && NoofPeople <= 5) {\r\n      chefCharge = chefprice * NoofPeople\r\n    }\r\n    if (NoofPeople && NoofPeople > 5) {\r\n      firstChefCharge = chefprice * 5\r\n      remChefCharge = (NoofPeople - 5) * (chefprice / 2)\r\n    }\r\n    if (NoofPeople && NoofPeople > 5) {\r\n      complexityCharge =\r\n        (firstChefCharge + remChefCharge) * complexity - (firstChefCharge + remChefCharge)\r\n    } else {\r\n      complexityCharge = chefCharge * complexity - chefCharge\r\n    }\r\n    if (additionalService && additionalService.length && additionalService.length > 0) {\r\n      additionalPrice = []\r\n      additionalService.map((value, Index) => {\r\n        const price = parseFloat(value.price)\r\n        additionalPrice.push(price)\r\n      })\r\n    }\r\n    if (additionalPrice && additionalPrice.length > 0) {\r\n      additionalTotalPrice = _.sum(additionalPrice)\r\n    }\r\n\r\n    if (NoofPeople && NoofPeople > 5) {\r\n      chefTotalCharge = chefTotalCharge += chefprice * 5\r\n      chefTotalCharge += (NoofPeople - 5) * (chefprice / 2)\r\n      chefTotalCharge *= complexity\r\n      chefTotalCharge += additionalTotalPrice\r\n    } else {\r\n      chefTotalCharge = chefprice * NoofPeople * complexity + additionalTotalPrice\r\n    }\r\n    if (chefTotalCharge) {\r\n      rockolyCharge = (servicePercentage / 100) * chefTotalCharge\r\n    }\r\n    if (chefTotalCharge && rockolyCharge) {\r\n      const total = chefTotalCharge + rockolyCharge\r\n      const totalAmount = parseFloat(total)\r\n      totalAmountToPay = totalAmount.toFixed(2)\r\n    }\r\n\r\n    // if (rockolyCharge && totalAmountToPay) {\r\n    //   chefTotal = totalAmountToPay - rockolyCharge\r\n    // }\r\n    if (booking && booking.chefBookingOtherAllergyTypes) {\r\n      OtherAllergy = JSON.parse(booking.chefBookingOtherAllergyTypes)\r\n    }\r\n    if (booking && booking.chefBookingOtherAllergyTypes) {\r\n      otherDietary = JSON.parse(booking.chefBookingOtherDietaryRestrictionsTypes)\r\n    }\r\n    if (booking && booking.chefBookingOtherKitchenEquipmentTypes) {\r\n      kitchenEquipment = JSON.parse(booking.chefBookingOtherKitchenEquipmentTypes)\r\n    }\r\n\r\n    if (booking && booking.dishTypeDesc) {\r\n      dishTypeDesc = booking.dishTypeDesc\r\n    }\r\n    if (booking && booking.bookingNotes) {\r\n      bookingNotes = booking.bookingNotes.nodes\r\n    }\r\n    if (booking && booking.allergyTypes) {\r\n      allergyTypes = booking.allergyTypes.nodes\r\n    }\r\n    if (booking && booking.kitchenEquipmentTypes) {\r\n      equipmentTypes = booking.kitchenEquipmentTypes.nodes\r\n    }\r\n    if (booking && booking.dietaryRestrictionsTypes) {\r\n      dietaryTypes = booking.dietaryRestrictionsTypes.nodes\r\n    }\r\n    if (booking && booking.paymentHistoriesByBookingHistId) {\r\n      paymentDetails = booking.paymentHistoriesByBookingHistId.nodes\r\n    }\r\n    if (booking && booking.chefBookingLocationAddress) {\r\n      bookingAddress = booking.chefBookingLocationAddress\r\n    }\r\n    if (requestedDetails && requestedDetails.chefBookingRequestNoOfPeople) {\r\n      additionalNoOfPeople = requestedDetails.chefBookingRequestNoOfPeople\r\n    }\r\n    if (requestedDetails && requestedDetails.chefBookingRequestComplexity) {\r\n      requestComplexity = requestedDetails.chefBookingRequestComplexity\r\n    }\r\n\r\n    if (requestedDetails && requestedDetails.additionalServiceDetails) {\r\n      requestAdditionalServices = JSON.parse(requestedDetails.additionalServiceDetails)\r\n    }\r\n    if (requestAdditionalServices && requestAdditionalServices.length > 0) {\r\n      requestServicePrice = []\r\n      requestAdditionalServices.map((value, Index) => {\r\n        const price = parseFloat(value.price)\r\n        requestServicePrice.push(price)\r\n      })\r\n    }\r\n    if (requestServicePrice && requestServicePrice.length > 0) {\r\n      requestPrice = _.sum(requestServicePrice)\r\n    }\r\n    if (requestedDetails && requestedDetails.chefBookingRequestTotalPriceValue) {\r\n      requestTotalPrice = requestedDetails.chefBookingRequestTotalPriceValue\r\n    }\r\n\r\n    const customerField = {\r\n      name: customer.fullName,\r\n      picUrl: customer.customercustomerPicId,\r\n      uid: customer.customerId,\r\n      navigateTo: n.CUSTOMERDETAIL,\r\n      screen: n.BOOKINGDETAILS,\r\n      extraId: this.state.bookingId,\r\n    }\r\n\r\n    const chefField = {\r\n      name: chef.fullName,\r\n      picUrl: chef.chefPicId,\r\n      uid: chef.chefId,\r\n      navigateTo: n.CHEFDETAIL,\r\n      screen: n.BOOKINGDETAILS,\r\n      extraId: this.state.bookingId,\r\n    }\r\n\r\n    const bookingColumn = [\r\n      {\r\n        title: <b>{CommonLabels.STATUS}</b>,\r\n        render: val => {\r\n          return (\r\n            <div style={Styles.trackActionView}>\r\n              {/* {val.trackOrderNo === 4 || val.trackOrderNo === 5 || val.trackOrderNo === 6 ? (\r\n                <Icon style={Styles.cancelActionIconStyle} type={CommonLabels.CLOSE_CIRCLE_ICON} />\r\n              ) : val.updatedAt ? (\r\n                <Icon\r\n                  style={Styles.completeActionIconStyle}\r\n                  type={CommonLabels.CHECK_CIRCLE_ICON}\r\n                />\r\n              ) : (\r\n                <Icon style={Styles.pendingActionIconStyle} type={CommonLabels.CLOCK_CIRCLE_ICON} />\r\n              )} */}\r\n              <p style={Styles.titleStyle}>{val.status ? CommonLabels[val.status] : '-'}</p>\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.DATE}</b>,\r\n        render(val) {\r\n          return <p>{val.updatedAt ? BusinessDate(val.updatedAt) : '-'}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.TIME}</b>,\r\n        render(val) {\r\n          return <p>{val.updatedAt ? bussinessTime(val.updatedAt) : '-'}</p>\r\n        },\r\n      },\r\n      // {\r\n      //   render: val => {\r\n      //     return (\r\n      //       <div>\r\n      //         {(val.status === 'CHEF_AMOUNT_TRANSFER_FAILED' ||\r\n      //           val.status === 'COMPLETED_BY_CHEF') && (\r\n      //           <Button style={Styles.paymentButton} onClick={() => this.openPaymentModal(val)}>\r\n      //             {CommonLabels.SEND_TO_CHEF}\r\n      //           </Button>\r\n      //         )}\r\n      //       </div>\r\n      //     )\r\n      //   },\r\n      // },\r\n    ]\r\n    console.log('chefTest', this.state.chef)\r\n    return (\r\n      <div style={Styles.cardView}>\r\n        <div className=\"userDetailCard\">\r\n          <div style={Styles.backButtonView}>\r\n            <Button style={Styles.backButtonStyle} onClick={() => this.onClickBack()}>\r\n              {CommonLabels.BACK}\r\n            </Button>\r\n          </div>\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.BOOKINGDETAILS} style={Styles.innerCardWidth}>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.BOOKING_ID}</p>\r\n                <div style={Styles.bookingIdStyle}>{this.state.bookingId}</div>\r\n              </div>\r\n\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.REQUESTED_DATE_LABEL}</p>\r\n                <div style={Styles.valueStyle}>{BusinessDate(booking.chefBookingFromTime)}</div>\r\n              </div>\r\n\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.REQUESTED_TIME_LABEL}</p>\r\n                <div style={Styles.valueStyle}>\r\n                  {bussinessTime(booking.chefBookingFromTime)}\r\n                  {' - '}\r\n                  {bussinessTime(booking.chefBookingToTime)}\r\n                </div>\r\n              </div>\r\n              {/* <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.BUSINESS_HOURS}</p>\r\n                <div style={Styles.valueStyle}>{BusinessDate(booking.chefBookingFromTime)}</div>\r\n              </div> */}\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.COST_LABEL}</p>\r\n                <div style={Styles.valueStyle}>\r\n                  {' '}\r\n                  {booking.chefBookingTotalPriceValue\r\n                    ? `$ ${booking.chefBookingTotalPriceValue.toFixed(2)}`\r\n                    : '-'}\r\n                </div>\r\n              </div>\r\n              <div style={Styles.summaryFieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.BOOKING_ADDRESS}</p>\r\n                {bookingAddress ? <div style={Styles.valueStyle}>{bookingAddress}</div> : <p>-</p>}\r\n              </div>\r\n            </Card>\r\n          </div>\r\n\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.CUSTOMER} style={Styles.innerCardWidth}>\r\n              {customerField && customerField.uid && <PicNameField fieldData={customerField} />}\r\n              {this.state.customerLocation && <p>{this.state.customerLocation}</p>}\r\n            </Card>\r\n          </div>\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.CHEF} style={Styles.innerCardWidth}>\r\n              {chefField && chefField.uid && <PicNameField fieldData={chefField} />}\r\n              {this.state.chefLocation && <p>{this.state.chefLocation}</p>}\r\n            </Card>\r\n          </div>\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.BOOKING_DESCRIPITION} style={Styles.innerCardWidth}>\r\n              <div style={Styles.summaryFieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.BOOKING_SUMMARY}</p>\r\n                <div style={Styles.valueStyle}>{summary ? summary : '-'}</div>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.NO_OF_PEOPLE}</p>\r\n                <div style={Styles.valueStyle}>{NoofPeople ? NoofPeople : '-'}</div>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.COMPLEXITY_LEVEL}</p>\r\n                <div style={Styles.valueStyle}>{complexity ? complexity : '-'}</div>\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.ADDITIONAL}</p>\r\n                {additionalService && additionalService.length > 0 ? (\r\n                  additionalService.map((value, Index) => (\r\n                    <div style={Styles.valueStyle}>\r\n                      {value.name}\r\n                      {','}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>-</p>\r\n                )}\r\n              </div>\r\n              <div style={Styles.fieldView}>\r\n                <p style={Styles.titleStyle}>\r\n                  {CommonLabels.DISHES} {':'}\r\n                </p>\r\n                {dishTypeDesc && dishTypeDesc.length > 0 ? (\r\n                  dishTypeDesc.map((value, Index) => (\r\n                    <div style={Styles.valueStyle}>\r\n                      {value}\r\n                      {dishTypeDesc.length !== Index + 1 && <p>{','}</p>}\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>-</p>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </div>\r\n          <div style={Styles.tripleView}>\r\n            <Card title={CommonLabels.ALLERGY_TYPE} style={Styles.userCardStyle}>\r\n              <div style={Styles.summaryFieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.ALLERGY_LIST}</p>\r\n                {allergyTypes && allergyTypes.length > 0 ? (\r\n                  allergyTypes.map((value, index) => (\r\n                    <div style={Styles.valueStyle}>\r\n                      <p style={Styles.spetializationValueStyle}>\r\n                        {index + 1}\r\n                        {'.'}\r\n                        {value.allergyTypeName}\r\n                        {'.'}\r\n                      </p>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>-</p>\r\n                )}\r\n                <p style={Styles.titleStyle}>{CommonLabels.OTHERALLERGY}</p>\r\n                <div style={Styles.valueStyle}>\r\n                  <p style={Styles.spetializationValueStyle}>{OtherAllergy}</p>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n            <Card title={CommonLabels.KITCHEN_TYPE} style={Styles.userCardStyle}>\r\n              <div style={Styles.summaryFieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.KITCHEN_EQUIPMENT}</p>\r\n                {equipmentTypes && equipmentTypes.length > 0 ? (\r\n                  equipmentTypes.map((value, index) => (\r\n                    <div style={Styles.valueStyle}>\r\n                      <p style={Styles.spetializationValueStyle}>\r\n                        {index + 1}\r\n                        {'.'}\r\n                        {value.kitchenEquipmentTypeName}\r\n                        {'.'}\r\n                      </p>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>-</p>\r\n                )}\r\n                <p style={Styles.titleStyle}>{CommonLabels.OTHER_KITCHEN_EQUIPMENTS}</p>\r\n                <div style={Styles.valueStyle}>\r\n                  <p style={Styles.spetializationValueStyle}>{kitchenEquipment}</p>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n            <Card title={CommonLabels.DIETARY_TYPE} style={Styles.userCardStyle}>\r\n              <div style={Styles.summaryFieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.DIETARY_LIST}</p>\r\n                {dietaryTypes && dietaryTypes.length > 0 ? (\r\n                  dietaryTypes.map((value, index) => (\r\n                    <div style={Styles.valueStyle}>\r\n                      <p style={Styles.spetializationValueStyle}>\r\n                        {index + 1}\r\n                        {'.'}\r\n                        {value.dietaryRestrictionsTypeName}\r\n                        {'.'}\r\n                      </p>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>-</p>\r\n                )}\r\n                <p style={Styles.titleStyle}>{CommonLabels.OTHER_DIETARY}</p>\r\n                <div style={Styles.valueStyle}>\r\n                  <p style={Styles.spetializationValueStyle}>{otherDietary}</p>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.BOOKING_NOTES} style={Styles.innerCardWidth}>\r\n              <div style={Styles.summaryFieldView}>\r\n                <p style={Styles.titleStyle}>{CommonLabels.BOOKING_NOTES}</p>\r\n                {bookingNotes && bookingNotes.length > 0 ? (\r\n                  bookingNotes.map((value, Index) => (\r\n                    <div style={Styles.valueStyle}>{JSON.parse(value.notesDescription)}</div>\r\n                  ))\r\n                ) : (\r\n                  <p>-</p>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </div>\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={CommonLabels.PAYMENT_DETAILS} style={Styles.innerCardWidth}>\r\n              {paymentDetails && paymentDetails.length > 0 ? (\r\n                paymentDetails.map((val, key) => (\r\n                  <div>\r\n                    <div style={Styles.fieldView}>\r\n                      <p style={Styles.titleStyle}>{CommonLabels.PAYMENT_ID}</p>\r\n                      <div style={Styles.valueStyle}>{val.paymentId ? val.paymentId : '-'}</div>\r\n                    </div>\r\n                    <div style={Styles.fieldView}>\r\n                      <p style={Styles.titleStyle}>{CommonLabels.PAYMENT_STATUS}</p>\r\n                      <div style={Styles.valueStyle}>\r\n                        {val.paymentStatusId ? val.paymentStatusId : '-'}\r\n                      </div>\r\n                    </div>\r\n                    <div style={Styles.fieldView}>\r\n                      <p style={Styles.titleStyle}>{CommonLabels.PAYMENT_DATE}</p>\r\n                      <div style={Styles.valueStyle}>\r\n                        {val.createdAt ? BusinessDate(val.createdAt) : '-'}\r\n                      </div>\r\n                    </div>\r\n                    <div style={Styles.fieldView}>\r\n                      <p style={Styles.titleStyle}>{CommonLabels.PAYMENT_PRICE}</p>\r\n                      <div style={Styles.valueStyle}>\r\n                        {'$'}{' '}\r\n                        {val.paymentOriginalPriceValueFormat\r\n                          ? val.paymentOriginalPriceValueFormat.toFixed(2)\r\n                          : '-'}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p>-</p>\r\n              )}\r\n            </Card>\r\n          </div>\r\n          <div style={Styles.innerCardView}>\r\n            <Card title={'Booking Billing Details'} style={Styles.innerCardWidth}>\r\n              <div>\r\n                {NoofPeople > 5 ? (\r\n                  <div>\r\n                    <div style={Styles.fieldView}>\r\n                      <p style={Styles.titleStyle}>{'Chef charge for first 5 guests:'}</p>\r\n                      <div style={Styles.valueStyle}>\r\n                        {firstChefCharge ? `$ ${firstChefCharge.toFixed(2)}` : '-'}\r\n                      </div>\r\n                    </div>\r\n                    <div style={Styles.fieldView}>\r\n                      <p style={Styles.titleStyle}>{'Chef charge for after 5 guests:'}</p>\r\n                      <div style={Styles.valueStyle}>\r\n                        {remChefCharge ? `$ ${remChefCharge.toFixed(2)}` : '-'}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div style={Styles.fieldView}>\r\n                    <p style={Styles.titleStyle}>{'Chef charge:'}</p>\r\n                    <div style={Styles.valueStyle}>{chefCharge ? chefCharge.toFixed(2) : '-'}</div>\r\n                  </div>\r\n                )}\r\n\r\n                <div style={Styles.fieldView}>\r\n                  <p style={Styles.titleStyle}>{CommonLabels.COMPLEXITY_CHARGE}</p>\r\n                  <div style={Styles.valueStyle}>\r\n                    {'$'} {complexityCharge ? complexityCharge.toFixed(2) : '-'}\r\n                  </div>\r\n                </div>\r\n                <div style={Styles.fieldView}>\r\n                  <p style={Styles.titleStyle}>{CommonLabels.ADDITIONAL}</p>\r\n                  <div style={Styles.valueStyle}>\r\n                    {'$'} {additionalTotalPrice ? additionalTotalPrice.toFixed(2) : '-'}\r\n                  </div>\r\n                </div>\r\n                <div style={Styles.fieldView}>\r\n                  <p style={Styles.titleStyle}>{CommonLabels.CHEF_TOTAL_CHARGE}</p>\r\n                  <div style={Styles.valueStyle}>\r\n                    {'$'} {chefTotalCharge ? chefTotalCharge.toFixed(2) : '-'}\r\n                  </div>\r\n                </div>\r\n                <div style={Styles.fieldView}>\r\n                  <p style={Styles.titleStyle}>{CommonLabels.ROCKOLY_CHARGE}</p>\r\n                  <div style={Styles.valueStyle}>\r\n                    {'$'} {rockolyCharge ? rockolyCharge.toFixed(2) : '-'}\r\n                  </div>\r\n                </div>\r\n                <div style={Styles.fieldView}>\r\n                  <p style={Styles.titleStyle}>{CommonLabels.TOTAL_AMOUNT}</p>\r\n                  <div style={Styles.totalStyle}>\r\n                    {'$'} {totalAmountToPay ? totalAmountToPay : '-'}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n          {requestedDetails ? (\r\n            <div style={Styles.innerCardView}>\r\n              <Card title={'Chef Booking Request Changes'} style={Styles.innerCardWidth}>\r\n                <div>\r\n                  <div style={Styles.fieldView}>\r\n                    <p style={Styles.titleStyle}>{CommonLabels.ADDITIONAL_NO_OF_PEOPLE}</p>\r\n                    <div style={Styles.valueStyle}>\r\n                      {additionalNoOfPeople ? additionalNoOfPeople : '-'}\r\n                    </div>\r\n                  </div>\r\n                  <div style={Styles.fieldView}>\r\n                    <p style={Styles.titleStyle}>{CommonLabels.COMPLEXITY_CHANGE}</p>\r\n                    <div style={Styles.valueStyle}>\r\n                      {requestComplexity ? requestComplexity : '-'}\r\n                    </div>\r\n                  </div>\r\n                  <div style={Styles.summaryFieldView}>\r\n                    <p style={Styles.titleStyle}>{CommonLabels.EXTRA_SERVICE_PROVIDER}</p>\r\n                    {requestAdditionalServices && requestAdditionalServices.length > 0 ? (\r\n                      requestAdditionalServices.map((value, index) => (\r\n                        <div style={Styles.valueStyle}>\r\n                          {index + 1}\r\n                          {'.'}\r\n                          {value.name}\r\n                          {':'} {'$'}\r\n                          {value.price}\r\n                          {'.'}\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <p>-</p>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div style={Styles.fieldView}>\r\n                    <p style={Styles.titleStyle}>{CommonLabels.TOTAL_AMOUNT_EXTRA}</p>\r\n                    <div style={Styles.valueStyle}>\r\n                      {'$'} {requestPrice ? requestPrice.toFixed(2) : '-'}\r\n                    </div>\r\n                  </div>\r\n                  <div style={Styles.fieldView}>\r\n                    <p style={Styles.titleStyle}>{CommonLabels.TOTAL_REMAINING_AMOUNT}</p>\r\n                    <div style={Styles.totalStyle}>\r\n                      {'$'} {requestTotalPrice ? requestTotalPrice.toFixed(2) : '-'}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </div>\r\n          ) : null}\r\n          <Table\r\n            className=\"bookingUserTable\"\r\n            style={{width: '93%'}}\r\n            size=\"small\"\r\n            columns={bookingColumn}\r\n            dataSource={trackingData}\r\n            pagination={false}\r\n            footer={() => this.footer()}\r\n          />\r\n\r\n          <div></div>\r\n\r\n          <div style={Styles.innerCardView}>\r\n            {CustomerBookingReviews &&\r\n              CustomerBookingReviews.reviewDesc &&\r\n              CustomerBookingReviews.reviewPoint && (\r\n                <Card title={CommonLabels.CUSTOMER_REVIEW_LABLE} style={Styles.reviewCardStyle}>\r\n                  <div style={Styles.StarView}>\r\n                    <Rate allowHalf disabled value={CustomerBookingReviews.reviewPoint} />\r\n                    <p style={Styles.rateCoutStyle}>{CustomerBookingReviews.reviewPoint}</p>\r\n                  </div>\r\n                  <p>{CustomerBookingReviews.reviewDesc}</p>\r\n                </Card>\r\n              )}\r\n            {chefBookingReviews && chefBookingReviews.reviewDesc && chefBookingReviews.reviewPoint && (\r\n              <Card title={CommonLabels.CHEF_REVIEW_LABLE} style={Styles.reviewCardStyle}>\r\n                <div style={Styles.StarView}>\r\n                  <Rate allowHalf disabled value={chefBookingReviews.reviewPoint} />\r\n                  <p style={Styles.rateCoutStyle}>{chefBookingReviews.reviewPoint}</p>\r\n                </div>\r\n                <p>{chefBookingReviews.reviewDesc}</p>\r\n              </Card>\r\n            )}\r\n          </div>\r\n\r\n          {booking && booking.chefBookingChefRejectOrCancelReason && (\r\n            <Card title={CommonLabels.CHEF_CENCELLATION_REASON} style={Styles.cancelCardStyle}>\r\n              <p>{booking.chefBookingChefRejectOrCancelReason}</p>\r\n            </Card>\r\n          )}\r\n          {booking && booking.chefBookingCustomerRejectOrCancelReason && (\r\n            <Card title={CommonLabels.CUSTOMER_CENCELLATION_REASON} style={Styles.cancelCardStyle}>\r\n              <p>{booking.chefBookingCustomerRejectOrCancelReason}</p>\r\n            </Card>\r\n          )}\r\n\r\n          <Modal\r\n            visible={this.state.visible}\r\n            footer={null}\r\n            title={CommonLabels.PAYMENT}\r\n            closable={false}>\r\n            <TextArea\r\n              placeholder={CommonLabels.NOTES}\r\n              autosize={{minRows: 3, maxRows: 5}}\r\n              style={Styles.notesStyles}\r\n              value={this.state.paymentNotes}\r\n              onChange={val => this.asignPaymentNotes(val)}\r\n            />\r\n            <div style={Styles.paymentView}>\r\n              <Button style={CommonStyles.viewBotton} onClick={() => this.onClickCancel()}>\r\n                {CommonLabels.CANCEL}\r\n              </Button>\r\n              <Button\r\n                style={Styles.paymentButton}\r\n                onClick={() => {\r\n                  this.onclickPayment(\r\n                    this.state.paymentButton === true\r\n                      ? CommonLabels.SEND_TO_CHEF\r\n                      : CommonLabels.REFUND_TO_CUSTOMER\r\n                  )\r\n                }}>\r\n                {this.state.paymentButton === true\r\n                  ? CommonLabels.SEND_TO_CHEF\r\n                  : CommonLabels.REFUND_TO_CUSTOMER}\r\n              </Button>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {bookingDetails, bookingDetailsLoading} = state.bookingDetailsData\r\n  const {bookingRequestedDetails, bookingRequestedDetailsLoading} = state.bookingRequested\r\n  const {refundToCustomer, refundToCustomerLoading, refundToCustomerError} = state.refundCustomer\r\n  const {sentToChef, sentToChefLoading, sentToChefError} = state.sendChef\r\n  return {\r\n    bookingDetails,\r\n    bookingDetailsLoading,\r\n    bookingRequestedDetails,\r\n    bookingRequestedDetailsLoading,\r\n    refundToCustomer,\r\n    refundToCustomerLoading,\r\n    refundToCustomerError,\r\n    sentToChef,\r\n    sentToChefLoading,\r\n    sentToChefError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getBookingDetails,\r\n  getBookingRequestDetails,\r\n  sendAmountToChef,\r\n  refundAmoutToCustomer,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(BookingDetails)\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Table, Icon, Input, Button} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport _ from 'lodash'\r\nimport {BusinessDate, createdDate, getStartEndTime} from '../../utils/dateFormat'\r\nimport {bussinessTime} from '../../utils/timeFormat'\r\nimport {getBookingList} from '../../actions/index'\r\nimport n from '../routes/routesNames'\r\nimport PicNameField from '../../components/picNameField/picNameField'\r\n\r\nexport class TestSample extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      allBookingHistory: [],\r\n      duplicateData: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {client} = this.props\r\n    this.props.getBookingList(client, 50, null, null)\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.bookingHistoryList) {\r\n      this.setState(\r\n        {\r\n          allBookingHistory: nxtprops.bookingHistoryList,\r\n          duplicateData: nxtprops.bookingHistoryList,\r\n        },\r\n        () => {\r\n          console.log('allBookingHistory', this.state.allBookingHistory)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({confirm, clearFilters}) => (\r\n      <div style={{padding: 8}}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={this.state.searchText}\r\n          onChange={e => this.assignSearchVakue(e.target.value)}\r\n          onPressEnter={() => this.handleSearch(confirm, dataIndex)}\r\n          style={{width: 188, marginBottom: 8, display: 'block'}}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(confirm, dataIndex)}\r\n          icon=\"search\"\r\n          size=\"small\"\r\n          style={{width: 90, marginRight: 8}}>\r\n          Search\r\n        </Button>\r\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{width: 90}}>\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => (\r\n      <Icon type=\"search\" style={{color: filtered ? '#1890ff' : undefined}} />\r\n    ),\r\n  })\r\n\r\n  assignSearchVakue = val => {\r\n    this.setState({searchText: val})\r\n  }\r\n\r\n  handleSearch = (confirm, dataIndex) => {\r\n    confirm()\r\n    console.log('handleSearch', this.state.searchText, this.state.duplicateData)\r\n    const {searchText, duplicateData} = this.state\r\n    const filterValue = _.filter(duplicateData, o => {\r\n      const name =\r\n        dataIndex === CommonLabels.CUSTOMER_NAME\r\n          ? o.customerProfileByCustomerId.fullName\r\n          : o.chefProfileByChefId.fullName\r\n      // ? o.customerProfileByCustomerId.fullName\r\n      // : ''\r\n      if (_.includes(name.toLowerCase(), searchText.toLowerCase())) {\r\n        return o\r\n      }\r\n    })\r\n    console.log('filterValue', filterValue)\r\n    this.setState({allBookingHistory: []}, () => {\r\n      this.setState({allBookingHistory: filterValue})\r\n    })\r\n  }\r\n\r\n  handleReset = clearFilters => {\r\n    console.log('handleReset', this.state.duplicateData)\r\n    clearFilters()\r\n    this.setState({allBookingHistory: [], searchText: ''}, () => {\r\n      this.setState({allBookingHistory: this.state.duplicateData})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: <b style={CommonStyles.nameHeader}>{CommonLabels.CUSTOMER_NAME}</b>,\r\n        ...this.getColumnSearchProps(CommonLabels.CUSTOMER_NAME),\r\n        width: 200,\r\n        render: val => {\r\n          const chefField = {\r\n            name: val.customerProfileByCustomerId.fullName,\r\n            picUrl: val.customerProfileByCustomerId.customerPicId,\r\n            uid: val.customerProfileByCustomerId.customerId,\r\n            navigateTo: n.CUSTOMERDETAIL,\r\n            screen: n.BOOKINGHISTORY,\r\n            extraId: '',\r\n          }\r\n          return <PicNameField fieldData={chefField} />\r\n        },\r\n      },\r\n      {\r\n        title: <b style={CommonStyles.nameHeader}>{CommonLabels.CHEF_NAME}</b>,\r\n        ...this.getColumnSearchProps(CommonLabels.CHEF_NAME),\r\n        render: val => {\r\n          const customerField = {\r\n            name: val.chefProfileByChefId.fullName,\r\n            picUrl: val.chefProfileByChefId.chefPicId,\r\n            uid: val.chefProfileByChefId.chefId,\r\n            navigateTo: n.CHEFDETAIL,\r\n            screen: n.BOOKINGHISTORY,\r\n            extraId: '',\r\n          }\r\n          return <PicNameField fieldData={customerField} />\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.BOOKED_ON}</b>,\r\n        width: 120,\r\n        defaultSortOrder: 'descend',\r\n        sorter: (a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime(),\r\n        ellipsis: true,\r\n\r\n        render(val) {\r\n          return <p style={CommonStyles.grayText}>{createdDate(val.createdAt)}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.SERVICE_DATE}</b>,\r\n        defaultSortOrder: 'descend',\r\n        sortDirections: ['descend', 'ascend'],\r\n        sorter: (a, b) =>\r\n          new Date(a.chefBookingFromTime).getTime() - new Date(b.chefBookingFromTime).getTime(),\r\n        render(val) {\r\n          return <p style={CommonStyles.grayText}>{BusinessDate(val.chefBookingFromTime)}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.SERVICE_TIME}</b>,\r\n        render(val) {\r\n          if (val.chefBookingFromTime && val.chefBookingToTime) {\r\n            return (\r\n              <div style={CommonStyles.grayText}>\r\n                {bussinessTime(val.chefBookingFromTime)}\r\n                {' - '}\r\n                {bussinessTime(val.chefBookingToTime)}\r\n              </div>\r\n            )\r\n          } else {\r\n            return <p style={CommonStyles.grayText}>{'-'}</p>\r\n          }\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.SERVICE_COST}</b>,\r\n        render(val) {\r\n          return (\r\n            <div style={CommonStyles.grayText}>\r\n              ${parseFloat(parseInt(val.chefBookingPriceValue) / 100).toFixed(2)}\r\n            </div>\r\n          )\r\n        },\r\n      },\r\n      {\r\n        title: <b>{CommonLabels.STATUS}</b>,\r\n        // dataIndex: 'chefBookingStatusId',\r\n        // key: 'chefBookingStatusId',\r\n        filters: [\r\n          {text: 'CUSTOMER_REQUESTED', value: 'CUSTOMER_REQUESTED'},\r\n          {text: 'COMPLETED_BY_CHEF', value: 'COMPLETED_BY_CHEF'},\r\n        ],\r\n        onFilter: (value, record) => record.chefBookingStatusId.trim().indexOf(value) === 0,\r\n        ellipsis: true,\r\n        // render(val) {\r\n        //   return (\r\n        //     <div>\r\n        //       <p style={CommonStyles.grayText}>\r\n        //         {CommonLabels[val.chefBookingStatusId.trim()]\r\n        //           ? CommonLabels[val.chefBookingStatusId.trim()]\r\n        //           : '-'}\r\n        //       </p>\r\n        //     </div>\r\n        //   )\r\n        // },\r\n      },\r\n      {\r\n        render: val => {\r\n          return (\r\n            <Icon\r\n              type=\"eye\"\r\n              style={CommonStyles.viewEyeBotton}\r\n              onClick={() => this.onClickViewDetail(val)}\r\n            />\r\n          )\r\n        },\r\n      },\r\n    ]\r\n    return (\r\n      <div>\r\n        TestSample\r\n        <Table columns={columns} dataSource={this.state.allBookingHistory} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {bookingHistoryList, bookingHistoryListLoading} = state.bookingHistoryData\r\n  return {\r\n    bookingHistoryList,\r\n    bookingHistoryListLoading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getBookingList,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TestSample)\r\n)\r\n","/** @format */\r\n\r\nexport default {\r\n  firstView: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingTop: 10,\r\n  },\r\n  diverStyle: {\r\n    marginTop: -5,\r\n    height: 2,\r\n  },\r\n  cuisineSelectStyle: {\r\n    width: 200,\r\n  },\r\n  viewStyle: {\r\n    marginTop: -5,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  cuisineText: {\r\n    marginTop: 2,\r\n    fontSize: 16,\r\n    fontWeight: 650,\r\n    textTransform: 'capitalize',\r\n  },\r\n  cuisineDivider: {\r\n    marginTop: -3,\r\n  },\r\n  profileView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    marginLeft: 10,\r\n  },\r\n  nameStyle: {\r\n    fontSize: 13,\r\n    color: 'black',\r\n    fontWeight: 500,\r\n    marginLeft: 10,\r\n  },\r\n  noDataText: {\r\n    textAlign: 'center',\r\n    fontSize: 15,\r\n    color: 'black',\r\n    fontWeight: 'bold',\r\n  },\r\n  contentStyle: {\r\n    // height: 450,\r\n    overflowY: 'scroll',\r\n  },\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Divider, Button, Select, Popconfirm} from 'antd'\r\nimport _ from 'lodash'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport Styles from './styles'\r\nimport {getAllCuisines, updateCuisineStatus, getCuisineType} from '../../actions/index'\r\nimport {themes} from '../../themes/themes'\r\nimport Loader from '../../components/loader/loader'\r\nimport * as gqlStatus from '../../common/constants/constant.status'\r\n\r\nconst {Option} = Select\r\n\r\nexport class Cuisines extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      allCuisineData: [],\r\n      duplocateCuisines: [],\r\n      cuisines: [],\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.callActions()\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.allCuisines) {\r\n      this.setState({allCuisineData: nxtprops.allCuisines, duplocateCuisines: nxtprops.allCuisines})\r\n    }\r\n\r\n    if (\r\n      nxtprops.cuisineStatusUpate === 'success' &&\r\n      this.props.cuisineStatusUpate !== nxtprops.cuisineStatusUpate\r\n    ) {\r\n      this.callActions()\r\n    }\r\n    if (nxtprops && nxtprops.chefCuisine) {\r\n      this.setState({cuisines: nxtprops.chefCuisine})\r\n    }\r\n  }\r\n\r\n  callActions = () => {\r\n    const {client} = this.props\r\n    this.props.getAllCuisines(client)\r\n    this.props.getCuisineType(client)\r\n  }\r\n\r\n  updateStatus = (status, id) => {\r\n    const data = {\r\n      statusId: status,\r\n      cuisineTypeId: id,\r\n    }\r\n    const {client} = this.props\r\n    this.props.updateCuisineStatus(data, client)\r\n  }\r\n\r\n  // onChangeSearch = val => {\r\n  //   if (val.length === 0) {\r\n  //     this.setState({allCuisineData: this.state.duplocateCuisines})\r\n  //   }\r\n  // }\r\n\r\n  // onclickSearch = val => {\r\n  //   if (val.length > 2) {\r\n  //     const filterValue = _.filter(this.state.duplocateCuisines, o => {\r\n  //       const name = o.cusineTypeName\r\n  //       if (_.includes(name.toLowerCase(), val.toLowerCase())) {\r\n  //         return o\r\n  //       }\r\n  //     })\r\n  //     this.setState({allCuisineData: filterValue})\r\n  //   } else {\r\n  //     message.error(CommonLabels.SEARCH_ERROR)\r\n  //   }\r\n  // }\r\n\r\n  renderList = () => {\r\n    const {allCuisineData} = this.state\r\n    return (\r\n      <div className=\"cuisineDishesContent\">\r\n        {allCuisineData &&\r\n          allCuisineData.map(val => (\r\n            <div>\r\n              <div style={Styles.profileView}>\r\n                <img\r\n                  style={CommonStyles.imageStyle}\r\n                  alt={CommonLabels.ALTERNATE_PIC}\r\n                  src={\r\n                    val && val.chefProfileByChefId && val.chefProfileByChefId.chefPicId\r\n                      ? val.chefProfileByChefId.chefPicId\r\n                      : themes.default_user\r\n                  }\r\n                />\r\n                <p style={Styles.nameStyle}>\r\n                  {val && val.chefProfileByChefId && val.chefProfileByChefId.fullName\r\n                    ? val.chefProfileByChefId.fullName\r\n                    : CommonLabels.ADMIN}\r\n                </p>\r\n              </div>\r\n              <div style={Styles.viewStyle}>\r\n                <p style={Styles.cuisineText}>{val.cusineTypeName ? val.cusineTypeName : '-'}</p>\r\n                <div>\r\n                  <Button\r\n                    style={CommonStyles.approveBotton}\r\n                    onClick={() => this.updateStatus(gqlStatus.status.APPROVED, val.cuisineTypeId)}>\r\n                    {CommonLabels.APPROVE}\r\n                  </Button>\r\n                  <Popconfirm\r\n                    title={CommonLabels.REJECT_CUISINE_ALERT}\r\n                    onConfirm={() =>\r\n                      this.updateStatus(gqlStatus.status.REJECTED, val.cuisineTypeId)\r\n                    }\r\n                    okText={CommonLabels.OKTEXT}\r\n                    cancelText={CommonLabels.CANCELTEXT}\r\n                    placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n                    <Button style={CommonStyles.rejectBotton}>{CommonLabels.REJECT}</Button>\r\n                  </Popconfirm>\r\n                </div>\r\n              </div>\r\n              <Divider style={Styles.cuisineDivider} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {allCuisineData, cuisines} = this.state\r\n    return (\r\n      <div className=\"cuisineView\">\r\n        <div style={CommonStyles.lowerViewTittleFilter}>\r\n          <p style={CommonStyles.top_titleTextStyle}>{CommonLabels.CUISINES}</p>\r\n          {/* <Search\r\n            className=\"searchClass\"\r\n            placeholder=\"Search Cuisines\"\r\n            onSearch={value => this.onclickSearch(value)}\r\n            onChange={value => this.onChangeSearch(value.target.value)}\r\n            style={{width: 200}}\r\n            enterButton\r\n            allowClear={true}\r\n          /> */}\r\n          <Select\r\n            showSearch\r\n            allowClear={true}\r\n            style={Styles.cuisineSelectStyle}\r\n            placeholder={CommonLabels.REFER_CUISINE_TYPES}\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) =>\r\n              option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }>\r\n            {cuisines &&\r\n              cuisines.map(val => <Option value={val.cuisineTypeId}>{val.cusineTypeName}</Option>)}\r\n          </Select>\r\n        </div>\r\n        <Divider style={Styles.diverStyle} />\r\n        <div style={CommonStyles.loaderStyle}>\r\n          <Loader loader={this.props.allCuisinesLoading} />\r\n        </div>\r\n        {allCuisineData &&\r\n          allCuisineData.length === 0 &&\r\n          this.props.allCuisinesLoading === false && (\r\n            <p style={Styles.noDataText}>{CommonLabels.NO_DATA}</p>\r\n          )}\r\n        <div>{this.renderList()}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {allCuisines, allCuisinesLoading} = state.cuisines\r\n  const {chefCuisine, chefCuisineLoading, chefCuisineError} = state.cuisineTypes\r\n  const {\r\n    cuisineStatusUpate,\r\n    cuisineStatusUpateLoading,\r\n    cuisineStatusUpateError,\r\n  } = state.cuisineStatus\r\n  return {\r\n    allCuisines,\r\n    allCuisinesLoading,\r\n    cuisineStatusUpate,\r\n    cuisineStatusUpateLoading,\r\n    cuisineStatusUpateError,\r\n    chefCuisine,\r\n    chefCuisineLoading,\r\n    chefCuisineError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getAllCuisines,\r\n  updateCuisineStatus,\r\n  getCuisineType,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Cuisines)\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Divider, Button, Select, Popconfirm} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport _ from 'lodash'\r\nimport {withApollo} from 'react-apollo'\r\nimport CommonStyles from '../common/commonStyles'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport Styles from './styles'\r\nimport {getAllDishes, updateDishStatus, getDishType} from '../../actions/index'\r\nimport {themes} from '../../themes/themes'\r\nimport Loader from '../../components/loader/loader'\r\nimport * as gqlStatus from '../../common/constants/constant.status'\r\n\r\nconst {Option} = Select\r\n\r\nexport class Dishes extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      allDishesData: [],\r\n      duplocateDishes: [],\r\n      dishes: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callActions()\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (nxtprops.allDishes) {\r\n      const temp = nxtprops.allDishes.map(val => {\r\n        let PostedData = {}\r\n        if (val.chefId && val.chefProfileByChefId && val.chefProfileByChefId.fullName) {\r\n          PostedData = {\r\n            fullName: val.chefProfileByChefId.fullName,\r\n            pic: val.chefProfileByChefId.chefPicId,\r\n            user: CommonLabels.CHEF,\r\n          }\r\n        } else if (\r\n          val.customerId &&\r\n          val.customerProfileByCustomerId &&\r\n          val.customerProfileByCustomerId.fullName\r\n        ) {\r\n          PostedData = {\r\n            fullName: val.customerProfileByCustomerId.fullName,\r\n            pic: val.customerProfileByCustomerId.customerPicId,\r\n            user: CommonLabels.CUSTOMER,\r\n          }\r\n        } else if (val.customerId === null && val.chefId === null) {\r\n          PostedData = {\r\n            fullName: CommonLabels.ADMIN,\r\n            pic: null,\r\n            user: '',\r\n          }\r\n        } else {\r\n          PostedData = {\r\n            fullName: '',\r\n            pic: null,\r\n            user: '',\r\n          }\r\n        }\r\n        return {\r\n          ...val,\r\n          postedBy: PostedData,\r\n        }\r\n      })\r\n      this.setState({allDishesData: temp, duplocateDishes: temp}, () => {})\r\n    }\r\n\r\n    if (nxtprops && nxtprops.chefDish) {\r\n      this.setState({dishes: nxtprops.chefDish})\r\n    }\r\n\r\n    if (\r\n      nxtprops.disheStatusUpate === 'success' &&\r\n      this.props.disheStatusUpate !== nxtprops.disheStatusUpate\r\n    ) {\r\n      this.callActions()\r\n    }\r\n  }\r\n\r\n  callActions = () => {\r\n    const {client} = this.props\r\n    this.props.getAllDishes(client)\r\n    this.props.getDishType(client)\r\n  }\r\n\r\n  updateStatus = (status, id) => {\r\n    const data = {\r\n      dishTypeId: id,\r\n      statusId: status,\r\n    }\r\n    const {client} = this.props\r\n    this.props.updateDishStatus(data, client)\r\n  }\r\n\r\n  // onChangeSearch = val => {\r\n  //   if (val.length === 0) {\r\n  //     this.setState({allDishesData: this.state.duplocateDishes})\r\n  //   }\r\n  // }\r\n\r\n  // onclickSearch = val => {\r\n  //   if (val.length > 2) {\r\n  //     const filterValue = _.filter(this.state.duplocateDishes, o => {\r\n  //       const name = o.dishTypeName\r\n  //       if (_.includes(name.toLowerCase(), val.toLowerCase())) {\r\n  //         return o\r\n  //       }\r\n  //     })\r\n  //     this.setState({allDishesData: filterValue})\r\n  //   } else {\r\n  //     message.error(CommonLabels.SEARCH_ERROR)\r\n  //   }\r\n  // }\r\n\r\n  renderList = () => {\r\n    const {allDishesData} = this.state\r\n    return (\r\n      <div className=\"cuisineDishesContent\">\r\n        {allDishesData &&\r\n          allDishesData.map(val => (\r\n            <div>\r\n              <div style={Styles.profileView}>\r\n                <img\r\n                  style={CommonStyles.imageStyle}\r\n                  alt={CommonLabels.ALTERNATE_PIC}\r\n                  src={\r\n                    val && val.postedBy && val.postedBy.pic ? val.postedBy.pic : themes.default_user\r\n                  }\r\n                />\r\n                <p style={Styles.nameStyle}>\r\n                  {val && val.postedBy && val.postedBy.fullName ? val.postedBy.fullName : '-'}\r\n                  {val && val.postedBy && val.postedBy.user ? ` (${val.postedBy.user})` : ''}\r\n                </p>\r\n              </div>\r\n              <div style={Styles.viewStyle}>\r\n                <p style={Styles.cuisineText}>{val.dishTypeName ? val.dishTypeName : '-'}</p>\r\n                <div>\r\n                  <Button\r\n                    style={CommonStyles.approveBotton}\r\n                    onClick={() => this.updateStatus(gqlStatus.status.APPROVED, val.dishTypeId)}>\r\n                    {CommonLabels.APPROVE}\r\n                  </Button>\r\n\r\n                  <Popconfirm\r\n                    title={CommonLabels.REJECT_DISH_ALERT}\r\n                    onConfirm={() => this.updateStatus(gqlStatus.status.REJECTED, val.dishTypeId)}\r\n                    okText={CommonLabels.OKTEXT}\r\n                    cancelText={CommonLabels.CANCELTEXT}\r\n                    placement={CommonLabels.PLACEMENT_BOTTOM}>\r\n                    <Button style={CommonStyles.rejectBotton}>{CommonLabels.REJECT}</Button>\r\n                  </Popconfirm>\r\n                </div>\r\n              </div>\r\n              <Divider style={Styles.cuisineDivider} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {allDishesData, dishes} = this.state\r\n    return (\r\n      <div className=\"dishView\">\r\n        <div style={CommonStyles.lowerViewTittleFilter}>\r\n          <p style={CommonStyles.top_titleTextStyle}>{CommonLabels.DISHES}</p>\r\n          {/* <Search\r\n            className=\"searchClass\"\r\n            placeholder=\"Search Dishes\"\r\n            onSearch={value => this.onclickSearch(value)}\r\n            onChange={value => this.onChangeSearch(value.target.value)}\r\n            style={{width: 200}}\r\n            enterButton\r\n            allowClear={true}\r\n          /> */}\r\n          <Select\r\n            showSearch\r\n            allowClear={true}\r\n            style={Styles.cuisineSelectStyle}\r\n            placeholder={CommonLabels.REFER_DISH_TYPES}\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) =>\r\n              option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }>\r\n            {dishes &&\r\n              dishes.map(val => <Option value={val.dishTypeId}>{val.dishTypeName}</Option>)}\r\n          </Select>\r\n        </div>\r\n        <Divider style={Styles.diverStyle} />\r\n        <div style={CommonStyles.loaderStyle}>\r\n          <Loader loader={this.props.allDishesLoading} />\r\n        </div>\r\n        {allDishesData && allDishesData.length === 0 && this.props.allDishesLoading === false && (\r\n          <p style={Styles.noDataText}>{CommonLabels.NO_DATA}</p>\r\n        )}\r\n        <div>{this.renderList()}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {allDishes, allDishesLoading} = state.dishes\r\n  const {disheStatusUpate, disheStatusUpateLoading, disheStatusUpateError} = state.dishStatus\r\n  const {chefDish, chefDishLoading, chefDishError} = state.dishType\r\n\r\n  return {\r\n    allDishes,\r\n    allDishesLoading,\r\n    disheStatusUpate,\r\n    disheStatusUpateLoading,\r\n    disheStatusUpateError,\r\n    chefDish,\r\n    chefDishLoading,\r\n    chefDishError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getAllDishes,\r\n  updateDishStatus,\r\n  getDishType,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Dishes)\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport Cuisines from './cuisines'\r\nimport Dishes from './dishes'\r\nimport Styles from './styles'\r\n\r\nexport class CuisinesAndDishes extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={Styles.firstView}>\r\n          <Cuisines />\r\n          <Dishes />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CuisinesAndDishes\r\n","/** @format */\r\n\r\nexport default {\r\n  cencelTimeViiiew: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: 10,\r\n  },\r\n  innerCardWidth: {\r\n    width: '95%',\r\n  },\r\n  fieldView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  titleStyle: {\r\n    color: 'black',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n  },\r\n  valueStyle: {\r\n    fontSize: 18,\r\n    marginLeft: 20,\r\n  },\r\n  updateView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  alignUpdateContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: 300,\r\n    justifyContent: 'center',\r\n  },\r\n  upadteText: {\r\n    fontWeight: 600,\r\n    fontSize: 17,\r\n    textAlign: 'center',\r\n  },\r\n  updateInput: {\r\n    width: 150,\r\n    height: 50,\r\n  },\r\n  updateButton: {\r\n    marginTop: 20,\r\n    backgroundColor: '#515151',\r\n    color: 'white',\r\n    width: 200,\r\n  },\r\n  alignSpaceBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Card, Button, Table, Divider, Input, Modal, message} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport {\r\n  getAdditionalServiceList,\r\n  createAdditionalService,\r\n  deleteAdditionalFunction,\r\n  updateAdditionalFunction,\r\n} from '../../actions/index'\r\nimport Styles from './styles'\r\nimport CommonLabels from '../common/commonLabel'\r\n\r\nexport class ExtraService extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      allAdditionalService: [],\r\n      cancellationTime: 0,\r\n      updateTime: 0,\r\n      editVisible: false,\r\n      editValue: '',\r\n      editStatus: '',\r\n      editId: '',\r\n      visible: false,\r\n      stateValue: '',\r\n      statusId: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {client} = this.props\r\n    this.props.getAdditionalServiceList(client)\r\n  }\r\n  componentWillReceiveProps(nxtprops) {\r\n    console.log('nxtprops', nxtprops)\r\n    if (nxtprops.allAdditionalService) {\r\n      const temp = nxtprops.allAdditionalService.map((item, index) => {\r\n        return {\r\n          ...item,\r\n          keyValue: index + 1,\r\n        }\r\n      })\r\n      this.setState({allAdditionalService: temp})\r\n    }\r\n    console.log('prps', this.props.deleteAdditionalService, nxtprops.deleteAdditionalService)\r\n    if (this.props.deleteAdditionalService !== nxtprops.deleteAdditionalService) {\r\n      const {client} = this.props\r\n\r\n      this.props.getAdditionalServiceList(client)\r\n    }\r\n    if (this.props.updateAdditionalService !== nxtprops.updateAdditionalService) {\r\n      const {client} = this.props\r\n\r\n      this.props.getAdditionalServiceList(client)\r\n    }\r\n    if (this.props.addAdditionalService !== nxtprops.addAdditionalService) {\r\n      const {client} = this.props\r\n\r\n      this.props.getAdditionalServiceList(client)\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    })\r\n  }\r\n  editCancel = () => {\r\n    this.setState({\r\n      editVisible: false,\r\n    })\r\n  }\r\n  onEdit = (Id, edit, status) => {\r\n    this.setState({editVisible: true, editValue: edit, editId: Id, editStatus: status})\r\n  }\r\n  editModal = () => {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          title=\"Basic Modal\"\r\n          visible={this.state.editVisible}\r\n          onOk={this.onEditOk}\r\n          onCancel={this.editCancel}>\r\n          <p>Service Name</p>\r\n          <Input\r\n            value={this.state.editValue}\r\n            onChange={e => this.editValue(e.target.value)}\r\n            style={{width: '70%', marginTop: 0}}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n  editValue = val => {\r\n    this.setState({editValue: val}, () => {})\r\n  }\r\n  onDelete = (props, typeId, typeName) => {\r\n    const {client} = props\r\n    Modal.confirm({\r\n      title: 'Do you want to delete these items?',\r\n      onOk() {\r\n        props.deleteAdditionalFunction(typeId, typeName, 'DELETED', client)\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout(Math.random() > 0.5 ? resolve : reject, 1000)\r\n          message.success('Additional service deleted sucessfully')\r\n        }).catch(() => console.log('Oops errors!'))\r\n      },\r\n      onCancel() {},\r\n    })\r\n  }\r\n  assignSearchVakue = val => {\r\n    this.setState({stateValue: val}, () => {\r\n      console.log('status', this.state.stateValue)\r\n    })\r\n  }\r\n  onEditOk = () => {\r\n    console.log('state', this.state.editValue)\r\n    const {client} = this.props\r\n\r\n    this.props.updateAdditionalFunction(\r\n      this.state.editId,\r\n      this.state.editValue,\r\n      this.state.editStatus,\r\n      client\r\n    )\r\n    this.setState({editVisible: false}, () => {\r\n      message.success('Edited additional service  sucessfully')\r\n    })\r\n  }\r\n  handleOk = () => {\r\n    const {client} = this.props\r\n    this.props.createAdditionalService(this.state.stateValue, 'APPROVED', client)\r\n    this.setState(\r\n      {\r\n        visible: false,\r\n        stateValue: null,\r\n      },\r\n      () => {\r\n        message.success('Added additional service sucessfully')\r\n      }\r\n    )\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({visible: false})\r\n  }\r\n  render() {\r\n    const {allAdditionalService, visible} = this.state\r\n\r\n    const columns = [\r\n      {\r\n        title: <b>{CommonLabels.SERIAL_NUMBER}</b>,\r\n        width: 70,\r\n        render(val) {\r\n          return <p style={{marginTop: 14}}>{`# ${val.keyValue}`}</p>\r\n        },\r\n      },\r\n      {\r\n        title: <b>Service Name</b>,\r\n        dataIndex: 'additionalServiceTypeName',\r\n        key: 'additionalServiceTypeName',\r\n      },\r\n\r\n      {\r\n        title: <b>Action</b>,\r\n        key: 'action',\r\n        render: item => (\r\n          <span>\r\n            <Button\r\n              type=\"primary\"\r\n              ghost\r\n              style={{fontSize: 12, fontWeight: 'bold'}}\r\n              onClick={() =>\r\n                this.onEdit(\r\n                  item.additionalServiceTypeId,\r\n                  item.additionalServiceTypeName,\r\n                  item.statusId\r\n                )\r\n              }>\r\n              {' '}\r\n              Edit\r\n            </Button>\r\n            <Divider type=\"vertical\" />\r\n            <Button\r\n              type=\"danger\"\r\n              ghost\r\n              style={{fontSize: 12, fontWeight: 'bold'}}\r\n              onClick={() =>\r\n                this.onDelete(\r\n                  this.props,\r\n                  item.additionalServiceTypeId,\r\n                  item.additionalServiceTypeName\r\n                )\r\n              }>\r\n              Delete\r\n            </Button>\r\n          </span>\r\n        ),\r\n      },\r\n    ]\r\n    console.log('allAdditionalservice', allAdditionalService)\r\n    return (\r\n      <div style={Styles.cencelTimeViiiew}>\r\n        <Card title={CommonLabels.ADDITIONAL_SER} style={Styles.innerCardWidth}>\r\n          <div\r\n            style={{\r\n              flexDirection: 'row',\r\n              justifyContent: 'flex-end',\r\n              display: 'flex',\r\n            }}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon=\"plus\"\r\n              style={{fontSize: 12, fontWeight: 'bold'}}\r\n              onClick={this.showModal}>\r\n              Add Item\r\n            </Button>\r\n          </div>\r\n          <Table columns={columns} style={{marginTop: 10}} dataSource={allAdditionalService} />\r\n        </Card>\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Additional Service\"\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\r\n              Save\r\n            </Button>,\r\n          ]}>\r\n          <p style={{fontSize: 20, fontWeight: 'bold'}}>Service Name:</p>\r\n          <Input\r\n            placeholder=\"Service Name\"\r\n            value={this.state.stateValue}\r\n            onChange={e => this.assignSearchVakue(e.target.value)}\r\n            style={{width: '70%', marginTop: 0}}\r\n          />\r\n        </Modal>\r\n        {this.editModal()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {allAdditionalService, allAdditionalServiceLoading} = state.additionalService\r\n  const {addAdditionalService, addAdditionalServiceLoading} = state.addAdditionalService\r\n  const {deleteAdditionalService, deleteAdditionalServiceLoading} = state.deleteAdditionalService\r\n  const {updateAdditionalService, updateAdditionalServiceLoading} = state.updateAdditionalService\r\n\r\n  return {\r\n    allAdditionalService,\r\n    allAdditionalServiceLoading,\r\n    addAdditionalService,\r\n    addAdditionalServiceLoading,\r\n    deleteAdditionalService,\r\n    deleteAdditionalServiceLoading,\r\n    updateAdditionalService,\r\n    updateAdditionalServiceLoading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getAdditionalServiceList,\r\n  createAdditionalService,\r\n  deleteAdditionalFunction,\r\n  updateAdditionalFunction,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ExtraService)\r\n)\r\n","/** @format */\r\n\r\nimport {\r\n  GET_ADDITIONAL_SERVICE,\r\n  GET_ADDITIONAL_SERVICE_SUCCESS,\r\n  GET_ADDITIONAL_SERVICE_FAIL,\r\n  CREATE_ADDITIONAL_SERVICE,\r\n  CREATE_ADDITIONAL_SERVICE_SUCCESS,\r\n  CREATE_ADDITIONAL_SERVICE_FAIL,\r\n  DELETE_ADDITIONAL_SERVICE,\r\n  DELETE_ADDITIONAL_SERVICE_SUCCESS,\r\n  DELETE_ADDITIONAL_SERVICE_FAIL,\r\n  UPDATE_ADDITIONAL_SERVICE,\r\n  UPDATE_ADDITIONAL_SERVICE_SUCCESS,\r\n  UPDATE_ADDITIONAL_SERVICE_FAIL,\r\n} from './types.js'\r\nimport gql from 'graphql-tag'\r\nimport * as gqlTag from '../common/gql'\r\nimport CommonLabels from './actionCommonLables'\r\n\r\nexport const getAdditionalServiceList = client => async dispatch => {\r\n  dispatch({type: GET_ADDITIONAL_SERVICE})\r\n  try {\r\n    const gqlValue = gqlTag.query.master.allAdditionalServiceTypeMastersGQLTAG\r\n    const query = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.query({\r\n      query,\r\n      fetchPolicy: CommonLabels.NETWORK_ONLY,\r\n    })\r\n    console.log('alldata', data)\r\n    const {nodes} = data.allAdditionalServiceTypeMasters\r\n    if (data.hasOwnProperty('allAdditionalServiceTypeMasters') && nodes) {\r\n      return dispatch({type: GET_ADDITIONAL_SERVICE_SUCCESS, payload: nodes})\r\n    } else {\r\n      return dispatch({type: GET_ADDITIONAL_SERVICE_FAIL, payload: []})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: GET_ADDITIONAL_SERVICE_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const createAdditionalService = (value, status, client) => async dispatch => {\r\n  dispatch({type: CREATE_ADDITIONAL_SERVICE})\r\n  try {\r\n    const gqlValue = gqlTag.mutation.master.createAdditionalServiceTypeGQLTAG\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: {\r\n        additionalServiceTypeName: value,\r\n        statusId: status,\r\n      },\r\n    })\r\n    if (\r\n      data &&\r\n      data.createAdditionalServiceTypeMaster.additionalServiceTypeMaster &&\r\n      data.createAdditionalServiceTypeMaster.additionalServiceTypeMaster.additionalServiceTypeName\r\n    ) {\r\n      return dispatch({\r\n        type: CREATE_ADDITIONAL_SERVICE_SUCCESS,\r\n        payload:\r\n          data.createAdditionalServiceTypeMaster.additionalServiceTypeMaster\r\n            .additionalServiceTypeName,\r\n      })\r\n    } else {\r\n      return dispatch({type: CREATE_ADDITIONAL_SERVICE_SUCCESS, payload: CommonLabels.UPDATE_FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: CREATE_ADDITIONAL_SERVICE_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const deleteAdditionalFunction = (id, value, status, client) => async dispatch => {\r\n  dispatch({type: DELETE_ADDITIONAL_SERVICE})\r\n  try {\r\n    const gqlValue = gqlTag.mutation.master.updateAdditionalServiceTypeGQLTAG\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: {\r\n        additionalServiceTypeId: id,\r\n        additionalServiceTypeName: value,\r\n        statusId: status,\r\n      },\r\n    })\r\n    console.log('delete', data)\r\n    if (\r\n      data &&\r\n      data.updateAdditionalServiceTypeMasterByAdditionalServiceTypeId.additionalServiceTypeMaster &&\r\n      data.updateAdditionalServiceTypeMasterByAdditionalServiceTypeId.additionalServiceTypeMaster\r\n        .statusTypeMasterByStatusId &&\r\n      data.updateAdditionalServiceTypeMasterByAdditionalServiceTypeId.additionalServiceTypeMaster\r\n        .statusTypeMasterByStatusId\r\n    ) {\r\n      return dispatch({\r\n        type: DELETE_ADDITIONAL_SERVICE_SUCCESS,\r\n        payload:\r\n          data.updateAdditionalServiceTypeMasterByAdditionalServiceTypeId\r\n            .additionalServiceTypeMaster.statusTypeMasterByStatusId,\r\n      })\r\n    } else {\r\n      return dispatch({type: DELETE_ADDITIONAL_SERVICE_SUCCESS, payload: CommonLabels.UPDATE_FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: DELETE_ADDITIONAL_SERVICE_FAIL, payload: err.message})\r\n  }\r\n}\r\n\r\nexport const updateAdditionalFunction = (id, value, status, client) => async dispatch => {\r\n  dispatch({type: UPDATE_ADDITIONAL_SERVICE})\r\n  try {\r\n    const gqlValue = gqlTag.mutation.master.updateAdditionalServiceTypeGQLTAG\r\n    const mutation = gql`\r\n      ${gqlValue}\r\n    `\r\n    const {data} = await client.mutate({\r\n      mutation,\r\n      variables: {\r\n        additionalServiceTypeId: id,\r\n        additionalServiceTypeName: value,\r\n        statusId: status,\r\n      },\r\n    })\r\n    console.log('update', data)\r\n    if (\r\n      data &&\r\n      data.updateAdditionalServiceTypeMasterByAdditionalServiceTypeId &&\r\n      data.updateAdditionalServiceTypeMasterByAdditionalServiceTypeId.additionalServiceTypeName\r\n    ) {\r\n      return dispatch({\r\n        type: UPDATE_ADDITIONAL_SERVICE_SUCCESS,\r\n        payload:\r\n          data.updateAdditionalServiceTypeMasterByAdditionalServiceTypeId.additionalServiceTypeName,\r\n      })\r\n    } else {\r\n      return dispatch({type: UPDATE_ADDITIONAL_SERVICE_SUCCESS, payload: CommonLabels.UPDATE_FAIL})\r\n    }\r\n  } catch (err) {\r\n    return dispatch({type: UPDATE_ADDITIONAL_SERVICE_FAIL, payload: err.message})\r\n  }\r\n}\r\n","/** @format */\r\n\r\nexport default {\r\n  cencelTimeViiiew: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: 10,\r\n  },\r\n  innerCardWidth: {\r\n    width: '95%',\r\n  },\r\n  fieldView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  titleStyle: {\r\n    color: 'black',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n  },\r\n  valueStyle: {\r\n    fontSize: 18,\r\n    marginLeft: 20,\r\n  },\r\n  updateView: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  alignUpdateContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: 300,\r\n    justifyContent: 'center',\r\n  },\r\n  upadteText: {\r\n    fontWeight: 600,\r\n    fontSize: 17,\r\n    textAlign: 'center',\r\n  },\r\n  updateInput: {\r\n    width: 150,\r\n    height: 50,\r\n  },\r\n  updateButton: {\r\n    marginTop: 20,\r\n    backgroundColor: '#515151',\r\n    color: 'white',\r\n    width: 200,\r\n  },\r\n  alignSpaceBetween: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {Card, Button, InputNumber, message} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport {withApollo} from 'react-apollo'\r\nimport {getCencellationTime, updateCancellationTime} from '../../actions/index'\r\nimport Styles from './styles'\r\nimport CommonLabels from '../common/commonLabel'\r\nimport Loader from '../../components/loader/loader'\r\nimport CommonStyles from '../common/commonStyles'\r\n\r\nexport class Settings extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      cancellationTime: 0,\r\n      updateTime: 0,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callAction()\r\n  }\r\n\r\n  componentWillReceiveProps(nxtprops) {\r\n    if (\r\n      nxtprops.updatedCancellationTime === 'success' &&\r\n      nxtprops.updatedCancellationTime !== this.props.updatedCancellationTime\r\n    ) {\r\n      this.callAction()\r\n      message.success(CommonLabels.UPDATE_SUCCESSFULLY)\r\n    }\r\n    if (nxtprops && nxtprops.cancellationTime && nxtprops.cancellationTime.getSettingValue) {\r\n      const temp = JSON.parse(nxtprops.cancellationTime.getSettingValue) / 60\r\n      this.setState({cancellationTime: temp})\r\n    }\r\n  }\r\n\r\n  callAction = () => {\r\n    const {client} = this.props\r\n    this.props.getCencellationTime(client)\r\n  }\r\n\r\n  clickUpdate = () => {\r\n    if (this.state.updateTime && this.state.updateTime > 0) {\r\n      const convertToMinutes = this.state.updateTime * 60\r\n      const {client} = this.props\r\n      this.props.updateCancellationTime(client, JSON.stringify(convertToMinutes))\r\n      this.setState({updateTime: 0})\r\n    } else {\r\n      message.error(CommonLabels.CANCELLATION_TIME_ERROR)\r\n    }\r\n  }\r\n\r\n  storeUpdateCancellation = value => {\r\n    this.setState({\r\n      updateTime: value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {cancellationTime} = this.state\r\n    return (\r\n      <div style={Styles.cencelTimeViiiew}>\r\n        <Card title={CommonLabels.CANCELLATION_SETTINGS_LABEL} style={Styles.innerCardWidth}>\r\n          <div style={Styles.alignSpaceBetween}>\r\n            <div style={Styles.fieldView}>\r\n              <p style={Styles.titleStyle}>{CommonLabels.CANCELLATION_TIME_LABEL}</p>\r\n              <p style={Styles.valueStyle}>{`${cancellationTime} ${\r\n                cancellationTime > 1 ? 'hours' : 'hour'\r\n              }`}</p>\r\n            </div>\r\n            <div style={Styles.alignUpdateContent}>\r\n              <p style={Styles.upadteText}>{CommonLabels.UPDATE_CANCELLATION_TIME}</p>\r\n              <div style={Styles.updateView}>\r\n                <InputNumber\r\n                  style={Styles.updateInput}\r\n                  value={this.state.updateTime}\r\n                  min={0}\r\n                  max={100}\r\n                  onChange={this.storeUpdateCancellation}\r\n                />\r\n              </div>\r\n              <div style={Styles.updateView}>\r\n                <Button style={Styles.updateButton} onClick={() => this.clickUpdate()}>\r\n                  {CommonLabels.UPDATE}\r\n                </Button>\r\n              </div>\r\n              <div style={CommonStyles.loaderStyle}>\r\n                <Loader loader={this.props.updatedCancellationTimeLoading} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={CommonStyles.loaderStyle}>\r\n            <Loader loader={this.props.cancellationTimeLoading} />\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {cancellationTime, cancellationTimeLoading} = state.cancelTiming\r\n  const {updatedCancellationTime, updatedCancellationTimeLoading} = state.updatedTime\r\n  return {\r\n    cancellationTime,\r\n    cancellationTimeLoading,\r\n    updatedCancellationTime,\r\n    updatedCancellationTimeLoading,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCencellationTime,\r\n  updateCancellationTime,\r\n}\r\n\r\nexport default withApollo(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Settings)\r\n)\r\n","/** @format */\r\n\r\nimport React, {Component} from 'react'\r\nimport {BrowserRouter as Router, Switch} from 'react-router-dom'\r\nimport PublicLayout from '../layouts/publicLayout'\r\nimport PrivateLayout from '../layouts/privateLayout'\r\nimport n from './routesNames'\r\nimport Login from '../login/login'\r\nimport Dashboard from '../dashboard/dashboard'\r\nimport CustomerManagement from '../customerManagement/customerManagement'\r\nimport ChefManagement from '../chefManagement/chefManagement'\r\nimport BookingHistory from '../bookingHistory/bookingHistory'\r\nimport CommissionManagement from '../commissionManagement/commissionManagement'\r\nimport ReviewsRatings from '../reviewsRatings/reviewsRatings'\r\nimport ProfileManagement from '../profileManagement/profileManagement'\r\nimport Feedback from '../feedback/feedback'\r\nimport Registration from '../registration/registration'\r\nimport ChefDetail from '../userDetails/chefDetail'\r\nimport CustomerDetail from '../userDetails/customerDetail'\r\nimport ReviewDetail from '../reviewDetails/reviewDetail'\r\nimport BookingDetails from '../bookingDetails/bookingDetails'\r\nimport TestSample from '../test/testSample'\r\nimport CuisinesAndDishes from '../cuisinesAndDishes/cuisinesAndDishes'\r\nimport ExtraService from '../extraService/extraService'\r\nimport Settings from '../settings/settings'\r\n\r\nfunction PublicView(props) {\r\n  return <PublicLayout screen={props} />\r\n}\r\n\r\nfunction PrivateView(props) {\r\n  return <PrivateLayout screen={props} />\r\n}\r\n\r\n//TODO: @suren add method to check whether user is logged in and redirect to dashboard\r\n\r\nexport class Routes extends Component {\r\n  render() {\r\n    return (\r\n      <Router basename={'/admin'}>\r\n        <Switch>\r\n          <PublicView exact path={n.START} component={Login} />\r\n          <PrivateView exact path={n.DASHBOARD} component={Dashboard} />\r\n          <PrivateView exact path={n.CUSTOMERMANAGEMENT} component={CustomerManagement} />\r\n          <PrivateView exact path={n.CHEFMANAGEMENT} component={ChefManagement} />\r\n          <PrivateView exact path={n.BOOKINGHISTORY} component={BookingHistory} />\r\n          <PrivateView exact path={n.COMMISSIONMANAGEMENT} component={CommissionManagement} />\r\n          <PrivateView exact path={n.REVIEWSRATINGS} component={ReviewsRatings} />\r\n          <PrivateView exact path={n.PROFILEMANAGEMENT} component={ProfileManagement} />\r\n          <PrivateView exact path={n.FEEDBACK} component={Feedback} />\r\n          <PrivateView exact path={n.REGISTRATION} component={Registration} />\r\n          <PrivateView exact path={n.CHEFDETAIL} component={ChefDetail} />\r\n          <PrivateView exact path={n.CUSTOMERDETAIL} component={CustomerDetail} />\r\n          <PrivateView exact path={n.REVIEWDETAIL} component={ReviewDetail} />\r\n          <PrivateView exact path={n.BOOKINGDETAILS} component={BookingDetails} />\r\n          <PrivateView exact path={n.TESTSAMPLE} component={TestSample} />\r\n          <PrivateView exact path={n.CUISINES_DISHES} component={CuisinesAndDishes} />\r\n          <PrivateView exact path={n.EXTRA_SERVICE} component={ExtraService} />\r\n          <PrivateView exact path={n.SETTINGS} component={Settings} />\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n// connect to props to user auth related data\r\nexport default Routes\r\n","/** @format */\r\n\r\nimport {LOGIN, LOGIN_SUCCESS, LOGIN_FAIL} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  login: '',\r\n  loginLoading: false,\r\n  loginError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return {...state, loginLoading: true, login: action.payload}\r\n    case LOGIN_SUCCESS:\r\n      return {...state, ...INITIAL_STATE, loginLoading: false, login: action.payload}\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        loginError: action.payload,\r\n        loginLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {GET_CHEF, GET_CHEF_SUCCESS, GET_CHEF_FAIL} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  chefList: [],\r\n  chefListLoading: false,\r\n  chefListError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_CHEF:\r\n      return {...state, chefListLoading: true}\r\n    case GET_CHEF_SUCCESS:\r\n      return {...state, ...INITIAL_STATE, chefListLoading: false, chefList: action.payload}\r\n    case GET_CHEF_FAIL:\r\n      return {\r\n        ...state,\r\n        chefListError: action.payload,\r\n        chefListLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {GET_CUSTOMER, GET_CUSTOMER_SUCCESS, GET_CUSTOMER_FAIL} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  customerList: [],\r\n  customerListLoading: false,\r\n  customerListError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_CUSTOMER:\r\n      return {...state, customerListLoading: true}\r\n    case GET_CUSTOMER_SUCCESS:\r\n      return {...state, ...INITIAL_STATE, customerListError: false, customerList: action.payload}\r\n    case GET_CUSTOMER_FAIL:\r\n      return {\r\n        ...state,\r\n        customerListError: action.payload,\r\n        customerListLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_CHEF_DETAILS,\r\n  GET_CHEF_SUCCESS_DETAILS,\r\n  GET_CHEF_FAIL_DETAILS,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  chefDetails: {},\r\n  chefDetailsLoading: false,\r\n  chefDetailsError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_CHEF_DETAILS:\r\n      return {...state, chefDetailsLoading: true, chefDetails: action.payload}\r\n    case GET_CHEF_SUCCESS_DETAILS:\r\n      return {...state, ...INITIAL_STATE, chefDetailsLoading: false, chefDetails: action.payload}\r\n    case GET_CHEF_FAIL_DETAILS:\r\n      return {\r\n        ...state,\r\n        chefDetailsError: action.payload,\r\n        chefDetailsLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_CUSTOMER_DETAILS,\r\n  GET_CUSTOMER_SUCCESS_DETAILS,\r\n  GET_CUSTOMER_FAIL_DETAILS,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  customerDetails: {},\r\n  customerDetailsLoading: false,\r\n  customerDetailsError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_CUSTOMER_DETAILS:\r\n      return {...state, customerDetailsLoading: true, customerDetails: action.payload}\r\n    case GET_CUSTOMER_SUCCESS_DETAILS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        customerDetailsLoading: false,\r\n        customerDetails: action.payload,\r\n      }\r\n    case GET_CUSTOMER_FAIL_DETAILS:\r\n      return {\r\n        ...state,\r\n        customerDetailsError: action.payload,\r\n        customerDetailsLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\nimport {\r\n  UPDATE_CHEF_STATUS,\r\n  UPDATE_CHEF_STATUS_SUCCESS,\r\n  UPDATE_CHEF_STATUS_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  chefUpdateStatus: '',\r\n  chefUpdateStatusLoading: false,\r\n  chefUpdateStatusError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CHEF_STATUS:\r\n      return {...state, chefUpdateStatusLoading: true, chefUpdateStatus: action.payload}\r\n    case UPDATE_CHEF_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        chefUpdateStatusLoading: false,\r\n        chefUpdateStatus: action.payload,\r\n      }\r\n    case UPDATE_CHEF_STATUS_FAIL:\r\n      return {\r\n        ...state,\r\n        chefUpdateStatusError: action.payload,\r\n        chefUpdateStatusLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\nimport {\r\n  UPDATE_CUSTOMER_STATUS,\r\n  UPDATE_CUSTOMER_STATUS_SUCCESS,\r\n  UPDATE_CUSTOMER_STATUS_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  customerUpdateStatus: '',\r\n  customerUpdateStatusLoading: false,\r\n  customerUpdateStatusError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CUSTOMER_STATUS:\r\n      return {...state, customerUpdateStatusLoading: true, customerUpdateStatus: action.payload}\r\n    case UPDATE_CUSTOMER_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        customerUpdateStatusLoading: false,\r\n        customerUpdateStatus: action.payload,\r\n      }\r\n    case UPDATE_CUSTOMER_STATUS_FAIL:\r\n      return {\r\n        ...state,\r\n        customerUpdateStatusError: action.payload,\r\n        customerUpdateStatusLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {FORGOT_PASSWORD, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAIL} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  forgotpassword: '',\r\n  forgotpasswordLoading: false,\r\n  forgotpasswordError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FORGOT_PASSWORD:\r\n      return {...state, forgotpasswordLoading: true, forgotpassword: action.payload}\r\n    case FORGOT_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        forgotpasswordLoading: false,\r\n        forgotpassword: action.payload,\r\n      }\r\n    case FORGOT_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        forgotpasswordError: action.payload,\r\n        forgotpasswordLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_BOOKING_HISTORY,\r\n  GET_BOOKING_HISTORY_SUCCESS,\r\n  GET_BOOKING_HISTORY_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  bookingHistoryList: [],\r\n  bookingHistoryListLoading: false,\r\n  bookingHistoryListError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_BOOKING_HISTORY:\r\n      return {...state, bookingHistoryListLoading: true}\r\n    case GET_BOOKING_HISTORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        bookingHistoryListLoading: false,\r\n        bookingHistoryList: action.payload,\r\n      }\r\n    case GET_BOOKING_HISTORY_FAIL:\r\n      return {\r\n        ...state,\r\n        bookingHistoryListError: action.payload,\r\n        bookingHistoryListLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\nimport {\r\n  UPDATE_COMMISSION,\r\n  UPDATE_COMMISSION_SUCCESS,\r\n  UPDATE_COMMISSION_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  commissionUpdate: {},\r\n  commissionUpdateLoading: false,\r\n  commissionUpdateError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_COMMISSION:\r\n      return {...state, commissionUpdateLoading: true, commissionUpdate: action.payload}\r\n    case UPDATE_COMMISSION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        commissionUpdateLoading: false,\r\n        commissionUpdate: action.payload,\r\n      }\r\n    case UPDATE_COMMISSION_FAIL:\r\n      return {\r\n        ...state,\r\n        commissionUpdateError: action.payload,\r\n        commissionUpdateLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_REVIEWS_AND_RATINGS_HISTORY,\r\n  GET_REVIEWS_AND_RATINGS_SUCCESS,\r\n  GET_REVIEWS_AND_RATINGS_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  reviewRatingList: [],\r\n  reviewRatingListLoading: false,\r\n  reviewRatingListError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_REVIEWS_AND_RATINGS_HISTORY:\r\n      return {...state, reviewRatingListLoading: true}\r\n    case GET_REVIEWS_AND_RATINGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        reviewRatingListError: false,\r\n        reviewRatingList: action.payload,\r\n      }\r\n    case GET_REVIEWS_AND_RATINGS_FAIL:\r\n      return {\r\n        ...state,\r\n        reviewRatingListError: action.payload,\r\n        reviewRatingListLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\nimport {GET_COMMISSION, GET_COMMISSION_SUCCESS, GET_COMMISSION_FAIL} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  commissionList: [],\r\n  commissionListLoading: false,\r\n  commissionListError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_COMMISSION:\r\n      return {...state, commissionListLoading: true, commissionList: action.payload}\r\n    case GET_COMMISSION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        commissionListLoading: false,\r\n        commissionList: action.payload,\r\n      }\r\n    case GET_COMMISSION_FAIL:\r\n      return {\r\n        ...state,\r\n        commissionListError: action.payload,\r\n        commissionListLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_REVIEWS_AND_RATINGS_DETAILS,\r\n  GET_REVIEWS_AND_RATINGS_DETAILS_SUCCESS,\r\n  GET_REVIEWS_AND_RATINGS_DETAILS_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  reviewDetails: {},\r\n  reviewDetailsLoading: false,\r\n  reviewDetailsError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_REVIEWS_AND_RATINGS_DETAILS:\r\n      return {...state, customerDetailsLoading: true, reviewDetails: action.payload}\r\n    case GET_REVIEWS_AND_RATINGS_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        reviewDetailsLoading: false,\r\n        reviewDetails: action.payload,\r\n      }\r\n    case GET_REVIEWS_AND_RATINGS_DETAILS_FAIL:\r\n      return {\r\n        ...state,\r\n        reviewDetailsError: action.payload,\r\n        reviewDetailsLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_ADMIN_PROFILE,\r\n  GET_ADMIN_PROFILE_SUCCESS,\r\n  GET_ADMIN_PROFILE_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  adminProfile: {},\r\n  adminProfileLoading: false,\r\n  adminProfileError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_ADMIN_PROFILE:\r\n      return {...state, adminProfileLoading: true}\r\n    case GET_ADMIN_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        adminProfileLoading: false,\r\n        adminProfile: action.payload,\r\n      }\r\n    case GET_ADMIN_PROFILE_FAIL:\r\n      return {\r\n        ...state,\r\n        adminProfileError: action.payload,\r\n        adminProfileLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_TOTAL_COMMISON_EARNED,\r\n  GET_TOTAL_COMMISON_EARNED_SUCCESS,\r\n  GET_TOTAL_COMMISON_EARNED_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  commissionData: {},\r\n  commissionDataLoading: false,\r\n  commissionDataError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_TOTAL_COMMISON_EARNED:\r\n      return {...state, commissionDataLoading: true}\r\n    case GET_TOTAL_COMMISON_EARNED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        commissionDataLoading: false,\r\n        commissionData: action.payload,\r\n      }\r\n    case GET_TOTAL_COMMISON_EARNED_FAIL:\r\n      return {\r\n        ...state,\r\n        commissionDataError: action.payload,\r\n        commissionDataLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_BOOKING_DETAILS,\r\n  GET_BOOKING_SUCCESS_DETAILS,\r\n  GET_BOOKING_FAIL_DETAILS,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  bookingDetails: {},\r\n  bookingDetailsLoading: false,\r\n  bookingDetailsError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_BOOKING_DETAILS:\r\n      return {...state, bookingDetailsLoading: true, bookingDetails: action.payload}\r\n    case GET_BOOKING_SUCCESS_DETAILS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        bookingDetailsLoading: false,\r\n        bookingDetails: action.payload,\r\n      }\r\n    case GET_BOOKING_FAIL_DETAILS:\r\n      return {\r\n        ...state,\r\n        bookingDetailsError: action.payload,\r\n        bookingDetailsLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  UPDATE_REVIEW_STATUS,\r\n  UPDATE_REVIEW_STATUS_SUCCESS,\r\n  UPDATE_REVIEW_STATUS_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  reviewUpdate: '',\r\n  reviewUpdateLoading: false,\r\n  reviewUpdateError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_REVIEW_STATUS:\r\n      return {...state, reviewUpdateLoading: true, reviewUpdate: action.payload}\r\n    case UPDATE_REVIEW_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        reviewUpdateError: false,\r\n        reviewUpdate: action.payload,\r\n      }\r\n    case UPDATE_REVIEW_STATUS_FAIL:\r\n      return {\r\n        ...state,\r\n        reviewUpdateError: action.payload,\r\n        reviewUpdateLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {SEND_MAIL, SEND_MAIL_SUCCESS, SEND_MAIL_FAIL} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  sendEmail: '',\r\n  sendEmailLoading: false,\r\n  sendEmailError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SEND_MAIL:\r\n      return {...state, sendEmailLoading: true, sendEmail: action.payload}\r\n    case SEND_MAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        sendEmailError: false,\r\n        sendEmail: action.payload,\r\n      }\r\n    case SEND_MAIL_FAIL:\r\n      return {\r\n        ...state,\r\n        sendEmailError: action.payload,\r\n        sendEmailLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_BUSINESS_PROGRESS_DATA,\r\n  GET_BUSINESS_PROGRESS_DATA_SUCCESS,\r\n  GET_BUSINESS_PROGRESS_DATA_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  businessProgressData: null,\r\n  businessProgressDataLoading: false,\r\n  businessProgressDataError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_BUSINESS_PROGRESS_DATA:\r\n      return {...state, businessProgressDataLoading: true, businessProgressData: action.payload}\r\n    case GET_BUSINESS_PROGRESS_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        businessProgressDataLoading: false,\r\n        businessProgressData: action.payload,\r\n      }\r\n    case GET_BUSINESS_PROGRESS_DATA_FAIL:\r\n      return {\r\n        ...state,\r\n        businessProgressDataError: action.payload,\r\n        businessProgressDataLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {SEARCH, SEARCH_SUCCESS, SEARCH_FAIL} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  searchData: '',\r\n  searchDataLoading: false,\r\n  searchDataError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SEARCH:\r\n      return {...state, searchDataLoading: true, searchData: action.payload}\r\n    case SEARCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        searchDataError: false,\r\n        searchData: action.payload,\r\n      }\r\n    case SEARCH_FAIL:\r\n      return {\r\n        ...state,\r\n        searchDataError: action.payload,\r\n        searchDataLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_CHEF_CUISINE,\r\n  GET_CHEF_CUISINE_SUCCESS,\r\n  GET_CHEF_CUISINE_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  chefCuisine: [],\r\n  chefCuisineLoading: false,\r\n  chefCuisineError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_CHEF_CUISINE:\r\n      return {...state, chefCuisineLoading: true}\r\n    case GET_CHEF_CUISINE_SUCCESS:\r\n      return {...state, ...INITIAL_STATE, chefCuisineLoading: false, chefCuisine: action.payload}\r\n    case GET_CHEF_CUISINE_FAIL:\r\n      return {\r\n        ...state,\r\n        chefCuisineError: action.payload,\r\n        chefCuisineLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {GET_CHEF_DISH, GET_CHEF_DISH_SUCCESS, GET_CHEF_DISH_FAIL} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  chefDish: [],\r\n  chefDishLoading: false,\r\n  chefDishError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_CHEF_DISH:\r\n      return {...state, chefDishLoading: true}\r\n    case GET_CHEF_DISH_SUCCESS:\r\n      return {...state, ...INITIAL_STATE, chefDishLoading: false, chefDish: action.payload}\r\n    case GET_CHEF_DISH_FAIL:\r\n      return {\r\n        ...state,\r\n        chefDishError: action.payload,\r\n        chefDishLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\nimport {\r\n  UPDATE_CUSINIE_STATUS,\r\n  UPDATE_CUSINIE_STATUS_SUCCESS,\r\n  UPDATE_CUSINIE_STATUS_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  cuisineStatusUpate: '',\r\n  cuisineStatusUpateLoading: false,\r\n  cuisineStatusUpateError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CUSINIE_STATUS:\r\n      return {...state, cuisineStatusUpateLoading: true, cuisineStatusUpate: action.payload}\r\n    case UPDATE_CUSINIE_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        cuisineStatusUpateLoading: false,\r\n        cuisineStatusUpate: action.payload,\r\n      }\r\n    case UPDATE_CUSINIE_STATUS_FAIL:\r\n      return {\r\n        ...state,\r\n        cuisineStatusUpateError: action.payload,\r\n        cuisineStatusUpateLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\nimport {\r\n  UPDATE_DISH_STATUS,\r\n  UPDATE_DISH_STATUS_SUCCESS,\r\n  UPDATE_DISH_STATUS_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  disheStatusUpate: '',\r\n  disheStatusUpateLoading: false,\r\n  disheStatusUpateError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_DISH_STATUS:\r\n      return {...state, disheStatusUpateLoading: true, disheStatusUpate: action.payload}\r\n    case UPDATE_DISH_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        disheStatusUpateLoading: false,\r\n        disheStatusUpate: action.payload,\r\n      }\r\n    case UPDATE_DISH_STATUS_FAIL:\r\n      return {\r\n        ...state,\r\n        disheStatusUpateError: action.payload,\r\n        disheStatusUpateLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {SENT_TO_CHEF, SENT_TO_CHEF_SUCCESS, SENT_TO_CHEF_FAIL} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  sentToChef: '',\r\n  sentToChefLoading: false,\r\n  sentToChefError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SENT_TO_CHEF:\r\n      return {...state, sentToChefLoading: true, sentToChef: action.payload}\r\n    case SENT_TO_CHEF_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        sentToChefError: false,\r\n        sentToChef: action.payload,\r\n      }\r\n    case SENT_TO_CHEF_FAIL:\r\n      return {\r\n        ...state,\r\n        sentToChefError: action.payload,\r\n        sentToChefLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  REFUND_TO_CUSTOMER,\r\n  REFUND_TO_CUSTOMER_SUCCESS,\r\n  REFUND_TO_CUSTOMER_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  refundToCustomer: '',\r\n  refundToCustomerLoading: false,\r\n  refundToCustomerError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case REFUND_TO_CUSTOMER:\r\n      return {...state, refundToCustomerLoading: true, refundToCustomer: action.payload}\r\n    case REFUND_TO_CUSTOMER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        refundToCustomerError: false,\r\n        refundToCustomer: action.payload,\r\n      }\r\n    case REFUND_TO_CUSTOMER_FAIL:\r\n      return {\r\n        ...state,\r\n        refundToCustomerError: action.payload,\r\n        refundToCustomerLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {GET_CUISINES, GET_CUISINES_SUCCESS, GET_CUISINES_FAIL} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  allCuisines: [],\r\n  allCuisinesLoading: false,\r\n  allCuisinesError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_CUISINES:\r\n      return {...state, allCuisinesLoading: true, allCuisines: action.payload}\r\n    case GET_CUISINES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        allCuisinesError: false,\r\n        allCuisines: action.payload,\r\n      }\r\n    case GET_CUISINES_FAIL:\r\n      return {\r\n        ...state,\r\n        allCuisinesError: action.payload,\r\n        allCuisinesLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_ADDITIONAL_SERVICE,\r\n  GET_ADDITIONAL_SERVICE_SUCCESS,\r\n  GET_ADDITIONAL_SERVICE_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  allAdditionalService: [],\r\n  allAdditionalServiceLoading: false,\r\n  allAdditionalServiceError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_ADDITIONAL_SERVICE:\r\n      return {...state, allAdditionalServiceLoading: true, allAdditionalService: action.payload}\r\n    case GET_ADDITIONAL_SERVICE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        allAdditionalServiceError: false,\r\n        allAdditionalService: action.payload,\r\n      }\r\n    case GET_ADDITIONAL_SERVICE_FAIL:\r\n      return {\r\n        ...state,\r\n        allAdditionalServiceError: action.payload,\r\n        allAdditionalServiceLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {GET_DISHES, GET_DISHES_SUCCESS, GET_DISHES_FAIL} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  allDishes: [],\r\n  allDishesLoading: false,\r\n  allDishesError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_DISHES:\r\n      return {...state, allDishesLoading: true, allDishes: action.payload}\r\n    case GET_DISHES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        allDishesError: false,\r\n        allDishes: action.payload,\r\n      }\r\n    case GET_DISHES_FAIL:\r\n      return {\r\n        ...state,\r\n        allDishesError: action.payload,\r\n        allDishesLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_CANCELLATION_TIME,\r\n  GET_CANCELLATION_TIME_SUCCESS,\r\n  GET_CANCELLATION_TIME_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  cancellationTime: {},\r\n  cancellationTimeLoading: false,\r\n  cancellationTimeError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_CANCELLATION_TIME:\r\n      return {...state, cancellationTimeLoading: true, cancellationTime: action.payload}\r\n    case GET_CANCELLATION_TIME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        cancellationTimeError: false,\r\n        cancellationTime: action.payload,\r\n      }\r\n    case GET_CANCELLATION_TIME_FAIL:\r\n      return {\r\n        ...state,\r\n        cancellationTimeError: action.payload,\r\n        cancellationTimeLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  UPDATE_CANCELLATION_TIME,\r\n  UPDATE_CANCELLATION_TIME_SUCCESS,\r\n  UPDATE_CANCELLATION_TIME_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  updatedCancellationTime: '',\r\n  updatedCancellationTimeLoading: false,\r\n  updatedCancellationTimeError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CANCELLATION_TIME:\r\n      console.log('action.payload', action.payload)\r\n      return {\r\n        ...state,\r\n        updatedCancellationTimeLoading: true,\r\n        updatedCancellationTime: action.payload,\r\n      }\r\n    case UPDATE_CANCELLATION_TIME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        updatedCancellationTimeError: false,\r\n        updatedCancellationTime: action.payload,\r\n      }\r\n    case UPDATE_CANCELLATION_TIME_FAIL:\r\n      return {\r\n        ...state,\r\n        updatedCancellationTimeError: action.payload,\r\n        updatedCancellationTimeLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  GET_BOOKING_REQUESTED_DETAILS,\r\n  GET_BOOKING_REQUESTED_SUCCESS_DETAILS,\r\n  GET_BOOKING_REQUESTED_FAIL_DETAILS,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  bookingRequestedDetails: {},\r\n  bookingRequestedDetailsLoading: false,\r\n  bookingRequestedDetailsError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_BOOKING_REQUESTED_DETAILS:\r\n      return {\r\n        ...state,\r\n        bookingRequestedDetailsLoading: true,\r\n        bookingRequestedDetails: action.payload,\r\n      }\r\n    case GET_BOOKING_REQUESTED_SUCCESS_DETAILS:\r\n      console.log('action.payload', action.payload)\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        bookingRequestedDetailsLoading: false,\r\n        bookingRequestedDetails: action.payload,\r\n      }\r\n    case GET_BOOKING_REQUESTED_FAIL_DETAILS:\r\n      return {\r\n        ...state,\r\n        bookingRequestedDetailsError: action.payload,\r\n        bookingRequestedDetailsLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {RESET_PASSWORD, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAIL} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  resetpassword: '',\r\n  resetpasswordLoading: false,\r\n  resetpasswordError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case RESET_PASSWORD:\r\n      return {...state, resetpasswordLoading: true, resetpassword: action.payload}\r\n    case RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        resetpasswordLoading: false,\r\n        resetpassword: action.payload,\r\n      }\r\n    case RESET_PASSWORD_FAIL:\r\n      return {\r\n        ...state,\r\n        resetpasswordError: action.payload,\r\n        resetpasswordLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  CREATE_ADDITIONAL_SERVICE,\r\n  CREATE_ADDITIONAL_SERVICE_SUCCESS,\r\n  CREATE_ADDITIONAL_SERVICE_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  addAdditionalService: [],\r\n  addAdditionalServiceLoading: false,\r\n  addAdditionalServiceError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CREATE_ADDITIONAL_SERVICE:\r\n      return {...state, addAdditionalServiceLoading: true, addAdditionalService: action.payload}\r\n    case CREATE_ADDITIONAL_SERVICE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        addAdditionalServiceError: false,\r\n        addAdditionalService: action.payload,\r\n      }\r\n    case CREATE_ADDITIONAL_SERVICE_FAIL:\r\n      return {\r\n        ...state,\r\n        addAdditionalServiceError: action.payload,\r\n        addAdditionalServiceLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  DELETE_ADDITIONAL_SERVICE,\r\n  DELETE_ADDITIONAL_SERVICE_SUCCESS,\r\n  DELETE_ADDITIONAL_SERVICE_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  deleteAdditionalService: {},\r\n  deleteAdditionalServiceLoading: false,\r\n  deleteAdditionalServiceError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case DELETE_ADDITIONAL_SERVICE:\r\n      return {\r\n        ...state,\r\n        deleteAdditionalServiceLoading: true,\r\n        deleteAdditionalService: action.payload,\r\n      }\r\n    case DELETE_ADDITIONAL_SERVICE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        deleteAdditionalServiceError: false,\r\n        deleteAdditionalService: action.payload,\r\n      }\r\n    case DELETE_ADDITIONAL_SERVICE_FAIL:\r\n      return {\r\n        ...state,\r\n        deleteAdditionalServiceError: action.payload,\r\n        deleteAdditionalServiceLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {\r\n  UPDATE_ADDITIONAL_SERVICE,\r\n  UPDATE_ADDITIONAL_SERVICE_SUCCESS,\r\n  UPDATE_ADDITIONAL_SERVICE_FAIL,\r\n} from '../actions/types.js'\r\n\r\nconst INITIAL_STATE = {\r\n  updateAdditionalService: '',\r\n  updateAdditionalServiceLoading: false,\r\n  updateAdditionalServiceError: '',\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_ADDITIONAL_SERVICE:\r\n      return {\r\n        ...state,\r\n        updateAdditionalServiceLoading: true,\r\n        updateAdditionalService: action.payload,\r\n      }\r\n    case UPDATE_ADDITIONAL_SERVICE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE,\r\n        updateAdditionalServiceError: false,\r\n        updateAdditionalService: action.payload,\r\n      }\r\n    case UPDATE_ADDITIONAL_SERVICE_FAIL:\r\n      return {\r\n        ...state,\r\n        updateAdditionalServiceError: action.payload,\r\n        updateAdditionalServiceLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport {combineReducers} from 'redux'\r\nimport LoginReducer from './loginReducer'\r\nimport ChefListReducer from './chefListReducer'\r\nimport CustomerListReducer from './customerListReducer'\r\nimport ChefDetailReducer from './chefDetailReducer'\r\nimport CustomerDetailReducer from './customerDetailReducer'\r\nimport UpdateChefStatusReducer from './updateChefStatusReducer'\r\nimport UpdateCustomerStatusReducer from './updateCustomerStatusReducer'\r\nimport ForgotPasswordReducer from './forgotPasswordReducer'\r\nimport BookHistoryListReducer from './bookHistoryListReducer'\r\nimport CreateCommissionReducer from './createCommissionReducer'\r\nimport ReviewsAndRatingsReducer from './reviewsAndRatingsReducer'\r\nimport GetCommissionListReducer from './getCommissionListReducer'\r\nimport ReviewDetailReducer from './reviewDetailReducer'\r\nimport GetAdminProfileReducer from './getAdminProfileReducer'\r\nimport GetTotalCommisionReducer from './getTotalCommissionReducer'\r\nimport BookingDetailsReducer from './bookingDetailsReducer'\r\nimport ReviewUpdateReducer from './reviewUpdateReducer'\r\nimport SendEmailReducer from './sendEmailReducer'\r\nimport BussinessProgressReducer from './businessProgressReducer'\r\nimport SearchDataReducer from './searchDataReducer'\r\nimport GetCuisineReducer from './getCuisineReducer'\r\nimport GetDishReducer from './getDishReducer'\r\nimport CuisineStatusUpateError from './updateCusineStatusReducer'\r\nimport UpdateDishStatusReducer from './updateDishStatusReducer'\r\nimport SendAmountToChefRedcer from './sendAmountToChefRedcer'\r\nimport RefundAmoutToCustomerReducer from './refundAmoutToCustomerReducer'\r\nimport GetAllcuisineReducer from './getAllcuisineReducer'\r\nimport GetAllAdditionalService from './getAllAdditionalServiceReducer'\r\nimport GetAllDishesReducer from './getAllDishesReducer'\r\nimport GetCancellationTimeReducer from './getCancellationTimeReducer'\r\nimport UpdateCancellationTimeReducer from './updateCancellationTimeReducer'\r\nimport BookingRequestedDetailsReducer from './bookingRequestDetailsReducer'\r\nimport ResetPasswordReducer from './resetPasswordReducer'\r\nimport AddAdditionalService from './addAdditionalServiceReducer'\r\nimport DeleteAdditionalService from './deleteAdditionalServiceReducer'\r\nimport UpdateAdditionalService from './updateAdditionalServiceReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  loginData: LoginReducer,\r\n  chefListData: ChefListReducer,\r\n  customerListData: CustomerListReducer,\r\n  chefDetail: ChefDetailReducer,\r\n  customerDetail: CustomerDetailReducer,\r\n  chefStatus: UpdateChefStatusReducer,\r\n  customerStatus: UpdateCustomerStatusReducer,\r\n  forgotPassWord: ForgotPasswordReducer,\r\n  bookingHistoryData: BookHistoryListReducer,\r\n  commission: CreateCommissionReducer,\r\n  ratingReview: ReviewsAndRatingsReducer,\r\n  commissionData: GetCommissionListReducer,\r\n  reviewDetail: ReviewDetailReducer,\r\n  adminData: GetAdminProfileReducer,\r\n  totalCommission: GetTotalCommisionReducer,\r\n  bookingDetailsData: BookingDetailsReducer,\r\n  bookingRequested: BookingRequestedDetailsReducer,\r\n  reviewUpdate: ReviewUpdateReducer,\r\n  sendEmail: SendEmailReducer,\r\n  bussinessProgressData: BussinessProgressReducer,\r\n  search: SearchDataReducer,\r\n  cuisineTypes: GetCuisineReducer,\r\n  dishType: GetDishReducer,\r\n  cuisineStatus: CuisineStatusUpateError,\r\n  dishStatus: UpdateDishStatusReducer,\r\n  sendChef: SendAmountToChefRedcer,\r\n  refundCustomer: RefundAmoutToCustomerReducer,\r\n  cuisines: GetAllcuisineReducer,\r\n  dishes: GetAllDishesReducer,\r\n  additionalService: GetAllAdditionalService,\r\n  cancelTiming: GetCancellationTimeReducer,\r\n  updatedTime: UpdateCancellationTimeReducer,\r\n  resetPassword: ResetPasswordReducer,\r\n  addAdditionalService: AddAdditionalService,\r\n  deleteAdditionalService: DeleteAdditionalService,\r\n  updateAdditionalService: UpdateAdditionalService,\r\n})\r\n\r\nexport default rootReducer\r\n","/** @format */\r\n\r\nimport {ApolloClient, HttpLink, InMemoryCache} from 'apollo-boost'\r\nimport {setContext} from 'apollo-link-context'\r\nimport {getENVConfig} from './utils/common'\r\nimport {CONFIG} from './config/config'\r\n\r\nconst getAuthLink = token => {\r\n  // // create an apollo link instance, a network interface for apollo client\r\n  const httpLink = new HttpLink({\r\n    uri: getENVConfig(CONFIG.GQL_ENDPOINT_URI),\r\n  })\r\n  const authLink = setContext(async (_, {headers}) => {\r\n    // return the headers to the context so httpLink can read them\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: token ? `Bearer ${token}` : '',\r\n        token,\r\n      },\r\n    }\r\n  })\r\n  return authLink.concat(httpLink)\r\n}\r\n\r\nconst createApolloClient = token => {\r\n  // create an inmemory cache instance for caching graphql data\r\n  const cache = new InMemoryCache()\r\n  // instantiate apollo client with apollo link instance and cache instance\r\n  const client = new ApolloClient({\r\n    link: getAuthLink(token),\r\n    cache,\r\n  })\r\n  return client\r\n}\r\nexport default createApolloClient\r\n","/** @format */\r\n\r\nimport React from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport {ApolloProvider} from 'react-apollo'\r\nimport {setContext} from 'apollo-link-context'\r\nimport firebase from 'firebase'\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport './App.css'\r\nimport Route from './containers/routes/routes'\r\nimport reducers from './reducers/index'\r\nimport {getENVConfig} from './utils/common'\r\nimport {CONFIG} from './config/config'\r\nimport createApolloClient from './createApolloClient'\r\nimport {GetValueFromLocal} from './utils/localStorage'\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore)\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      client: null,\r\n    }\r\n    //TODO: @suren add underscore on variables name like AUTH_DOMAIN\r\n    const firebaseConfig = {\r\n      apiKey: getENVConfig(CONFIG.FIREBASE_API_KEY),\r\n      authDomain: getENVConfig(CONFIG.AUTHDOMAIN),\r\n      databaseURL: getENVConfig(CONFIG.DATABASEURL),\r\n      projectId: getENVConfig(CONFIG.PROJECTID),\r\n      storageBucket: '',\r\n      messagingSenderId: getENVConfig(CONFIG.MESSAGINGSENDERID),\r\n      appId: getENVConfig(CONFIG.APPID),\r\n    }\r\n    firebase.initializeApp(firebaseConfig)\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(async user => {\r\n      if (user) {\r\n        const client = createApolloClient(await user.getIdToken())\r\n        this.setState({client})\r\n        // User is signed in.\r\n      } else {\r\n        const client = createApolloClient(null)\r\n        this.setState({client})\r\n        // No user is signed in.\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {client} = this.state\r\n    if (!client) {\r\n      return null\r\n    }\r\n    return (\r\n      <ApolloProvider client={client}>\r\n        <Provider store={createStoreWithMiddleware(reducers)}>\r\n          <Route />\r\n        </Provider>\r\n      </ApolloProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\nserviceWorker.unregister()\r\n","/** @format */\r\n\r\nexport function getENVConfig(key) {\r\n  try {\r\n    return process && process.env\r\n      ? process.env['REACT_APP_' + key] || /* default without react_app*/ process.env[key]\r\n      : null\r\n  } catch (e) {\r\n    return null\r\n  }\r\n}\r\n"],"sourceRoot":""}